From cd9bd7ec8923b4399407d821af8f4d54c1916d02 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 12:50:29 +0200
Subject: [PATCH 01/19] gdi HACK: Disable printer drivers.

---
 dlls/gdi32/dc.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/dlls/gdi32/dc.c b/dlls/gdi32/dc.c
index 44dd9b9373da..f32d1d9304c8 100644
--- a/dlls/gdi32/dc.c
+++ b/dlls/gdi32/dc.c
@@ -147,6 +147,9 @@ static driver_entry_point load_driver( LPCWSTR name )
     HMODULE module;
     struct graphics_driver *driver, *new_driver;
 
+    FIXME( "%s not supported\n", debugstr_w( name ));
+    return NULL;
+
     if ((module = GetModuleHandleW( name )))
     {
         EnterCriticalSection( &driver_section );

From 619fafb8491badcd887d727975effd6671ea4f5b Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 12:58:15 +0200
Subject: [PATCH 02/19] win32u: Use syscall interface for NtGdiOpenDCW.

---
 dlls/win32u/gdiobj.c         |  1 -
 dlls/win32u/syscall.c        |  1 +
 dlls/win32u/win32u.spec      |  2 +-
 dlls/win32u/win32u_private.h |  3 ---
 dlls/win32u/wrappers.c       |  9 ---------
 dlls/wow64win/gdi.c          | 18 ++++++++++++++++++
 dlls/wow64win/syscall.h      |  1 +
 7 files changed, 21 insertions(+), 14 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index f88efbaa6798..2088ba3218b7 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1101,7 +1101,6 @@ static struct unix_funcs unix_funcs =
     NtGdiModifyWorldTransform,
     NtGdiMoveTo,
     NtGdiOffsetClipRgn,
-    NtGdiOpenDCW,
     NtGdiPatBlt,
     NtGdiPlgBlt,
     NtGdiPolyDraw,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 32812a3d8816..b1b6345f491d 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -83,6 +83,7 @@ static void * const syscalls[] =
     NtGdiHfontCreate,
     NtGdiInitSpool,
     NtGdiOffsetRgn,
+    NtGdiOpenDCW,
     NtGdiPathToRegion,
     NtGdiPtInRegion,
     NtGdiRectInRegion,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index c3ed3c0559a9..e4e0f3d4c69c 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -547,7 +547,7 @@
 @ stdcall NtGdiMoveTo(long long long ptr)
 @ stdcall NtGdiOffsetClipRgn(long long long)
 @ stdcall -syscall NtGdiOffsetRgn(long long long)
-@ stdcall NtGdiOpenDCW(ptr ptr ptr long long ptr ptr ptr)
+@ stdcall -syscall NtGdiOpenDCW(ptr ptr ptr long long ptr ptr ptr)
 @ stub NtGdiPATHOBJ_bEnum
 @ stub NtGdiPATHOBJ_bEnumClipLines
 @ stub NtGdiPATHOBJ_vEnumStart
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 8e294b7924ad..080ccf9fd7b6 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -130,9 +130,6 @@ struct unix_funcs
     BOOL     (WINAPI *pNtGdiModifyWorldTransform)( HDC hdc, const XFORM *xform, DWORD mode );
     BOOL     (WINAPI *pNtGdiMoveTo)( HDC hdc, INT x, INT y, POINT *pt );
     INT      (WINAPI *pNtGdiOffsetClipRgn)( HDC hdc, INT x, INT y );
-    HDC      (WINAPI *pNtGdiOpenDCW)( UNICODE_STRING *device, const DEVMODEW *devmode,
-                                      UNICODE_STRING *output, ULONG type, BOOL is_display,
-                                      HANDLE hspool, DRIVER_INFO_2W *driver_info, void *pdev );
     BOOL     (WINAPI *pNtGdiPatBlt)( HDC hdc, INT left, INT top, INT width, INT height, DWORD rop );
     BOOL     (WINAPI *pNtGdiPlgBlt)( HDC hdc, const POINT *point, HDC hdc_src, INT x_src, INT y_src,
                                      INT width, INT height, HBITMAP mask, INT x_mask, INT y_mask,
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index e128705ef378..004833dc3b4f 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -426,15 +426,6 @@ INT WINAPI NtGdiOffsetClipRgn( HDC hdc, INT x, INT y )
     return unix_funcs->pNtGdiOffsetClipRgn( hdc, x, y );
 }
 
-HDC WINAPI NtGdiOpenDCW( UNICODE_STRING *device, const DEVMODEW *devmode,
-                         UNICODE_STRING *output, ULONG type, BOOL is_display,
-                         HANDLE hspool, DRIVER_INFO_2W *driver_info, void *pdev )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiOpenDCW( device, devmode, output, type, is_display,
-                                      hspool, driver_info, pdev );
-}
-
 BOOL WINAPI NtGdiPatBlt( HDC hdc, INT left, INT top, INT width, INT height, DWORD rop )
 {
     if (!unix_funcs) return FALSE;
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index 6fa36b5f3a3d..abb15da1884c 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -623,6 +623,24 @@ NTSTATUS WINAPI wow64_NtGdiOffsetRgn( UINT *args )
     return NtGdiOffsetRgn( hrgn, x, y );
 }
 
+NTSTATUS WINAPI wow64_NtGdiOpenDCW( UINT *args )
+{
+    UNICODE_STRING32 *device32 = get_ptr( &args );
+    const DEVMODEW *devmode = get_ptr( &args );
+    UNICODE_STRING32 *output32 = get_ptr( &args );
+    ULONG type = get_ulong( &args );
+    BOOL is_display = get_ulong( &args );
+    HANDLE hspool = get_handle( &args );
+    DRIVER_INFO_2W *driver_info = get_ptr( &args );
+    void *pdev = get_ptr( &args );
+
+    UNICODE_STRING device, output;
+    HDC ret = NtGdiOpenDCW( unicode_str_32to64( &device, device32 ), devmode,
+                            unicode_str_32to64( &output, output32 ), type,
+                            is_display, hspool, driver_info, pdev );
+    return HandleToUlong( ret );
+}
+
 NTSTATUS WINAPI wow64_NtGdiPathToRegion( UINT *args )
 {
     HDC hdc = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index ecf79f69cce0..dd69d03d0922 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -69,6 +69,7 @@
     SYSCALL_ENTRY( NtGdiHfontCreate ) \
     SYSCALL_ENTRY( NtGdiInitSpool ) \
     SYSCALL_ENTRY( NtGdiOffsetRgn ) \
+    SYSCALL_ENTRY( NtGdiOpenDCW ) \
     SYSCALL_ENTRY( NtGdiPathToRegion ) \
     SYSCALL_ENTRY( NtGdiPtInRegion ) \
     SYSCALL_ENTRY( NtGdiRectInRegion ) \

From 51fd54f74f220cd9e6e0cc6b7c30ac4d4b11e738 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 13:20:35 +0200
Subject: [PATCH 03/19] win32u: Use syscall interface for more painting
 functions.

---
 dlls/win32u/gdiobj.c         |  8 ----
 dlls/win32u/syscall.c        |  8 ++++
 dlls/win32u/win32u.spec      | 16 +++----
 dlls/win32u/win32u_private.h | 10 ----
 dlls/win32u/wrappers.c       | 50 --------------------
 dlls/wow64win/gdi.c          | 89 ++++++++++++++++++++++++++++++++++++
 dlls/wow64win/syscall.h      |  8 ++++
 7 files changed, 113 insertions(+), 76 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index 2088ba3218b7..4db5bd98f86b 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1034,7 +1034,6 @@ static struct unix_funcs unix_funcs =
     NtGdiAbortPath,
     NtGdiAlphaBlend,
     NtGdiAngleArc,
-    NtGdiArcInternal,
     NtGdiBeginPath,
     NtGdiBitBlt,
     NtGdiCloseFigure,
@@ -1055,7 +1054,6 @@ static struct unix_funcs unix_funcs =
     NtGdiDdDDISetVidPnSourceOwner,
     NtGdiDeleteObjectApp,
     NtGdiDoPalette,
-    NtGdiEllipse,
     NtGdiEndDoc,
     NtGdiEndPath,
     NtGdiEndPage,
@@ -1085,7 +1083,6 @@ static struct unix_funcs unix_funcs =
     NtGdiGetKerningPairs,
     NtGdiGetNearestColor,
     NtGdiGetOutlineTextMetricsInternalW,
-    NtGdiGetPixel,
     NtGdiGetRandomRgn,
     NtGdiGetRasterizerCaps,
     NtGdiGetRealizationInfo,
@@ -1096,10 +1093,8 @@ static struct unix_funcs unix_funcs =
     NtGdiGradientFill,
     NtGdiIntersectClipRect,
     NtGdiInvertRgn,
-    NtGdiLineTo,
     NtGdiMaskBlt,
     NtGdiModifyWorldTransform,
-    NtGdiMoveTo,
     NtGdiOffsetClipRgn,
     NtGdiPatBlt,
     NtGdiPlgBlt,
@@ -1107,11 +1102,9 @@ static struct unix_funcs unix_funcs =
     NtGdiPolyPolyDraw,
     NtGdiPtVisible,
     NtGdiRectVisible,
-    NtGdiRectangle,
     NtGdiResetDC,
     NtGdiResizePalette,
     NtGdiRestoreDC,
-    NtGdiRoundRect,
     NtGdiScaleViewportExtEx,
     NtGdiScaleWindowExtEx,
     NtGdiSelectBitmap,
@@ -1123,7 +1116,6 @@ static struct unix_funcs unix_funcs =
     NtGdiSetDIBitsToDeviceInternal,
     NtGdiSetDeviceGammaRamp,
     NtGdiSetLayout,
-    NtGdiSetPixel,
     NtGdiSetSystemPaletteUse,
     NtGdiStartDoc,
     NtGdiStartPage,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index b1b6345f491d..96d99a07b06d 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -38,6 +38,7 @@ static void * const syscalls[] =
 {
     NtGdiAddFontMemResourceEx,
     NtGdiAddFontResourceW,
+    NtGdiArcInternal,
     NtGdiCombineRgn,
     NtGdiCreateBitmap,
     NtGdiCreateClientObj,
@@ -59,6 +60,7 @@ static void * const syscalls[] =
     NtGdiDeleteClientObj,
     NtGdiDescribePixelFormat,
     NtGdiDrawStream,
+    NtGdiEllipse,
     NtGdiEqualRgn,
     NtGdiExtCreatePen,
     NtGdiExtCreateRegion,
@@ -75,6 +77,7 @@ static void * const syscalls[] =
     NtGdiGetFontFileInfo,
     NtGdiGetNearestPaletteIndex,
     NtGdiGetPath,
+    NtGdiGetPixel,
     NtGdiGetRegionData,
     NtGdiGetRgnBox,
     NtGdiGetSpoolMessage,
@@ -82,13 +85,17 @@ static void * const syscalls[] =
     NtGdiGetTransform,
     NtGdiHfontCreate,
     NtGdiInitSpool,
+    NtGdiLineTo,
+    NtGdiMoveTo,
     NtGdiOffsetRgn,
     NtGdiOpenDCW,
     NtGdiPathToRegion,
     NtGdiPtInRegion,
     NtGdiRectInRegion,
+    NtGdiRectangle,
     NtGdiRemoveFontMemResourceEx,
     NtGdiRemoveFontResourceW,
+    NtGdiRoundRect,
     NtGdiSaveDC,
     NtGdiSetBitmapBits,
     NtGdiSetBitmapDimension,
@@ -96,6 +103,7 @@ static void * const syscalls[] =
     NtGdiSetColorAdjustment,
     NtGdiSetMagicColors,
     NtGdiSetMetaRgn,
+    NtGdiSetPixel,
     NtGdiSetPixelFormat,
     NtGdiSetRectRgn,
     NtGdiSetTextJustification,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index e4e0f3d4c69c..a51e9cb2df6e 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -115,7 +115,7 @@
 @ stdcall NtGdiAlphaBlend(long long long long long long long long long long long ptr)
 @ stdcall NtGdiAngleArc(long long long long float float)
 @ stub NtGdiAnyLinkedFonts
-@ stdcall NtGdiArcInternal(long long long long long long long long long long)
+@ stdcall -syscall NtGdiArcInternal(long long long long long long long long long long)
 @ stub NtGdiBRUSHOBJ_DeleteRbrush
 @ stub NtGdiBRUSHOBJ_hGetColorTransform
 @ stub NtGdiBRUSHOBJ_pvAllocRbrush
@@ -376,7 +376,7 @@
 @ stub NtGdiDrawEscape
 @ stdcall -syscall NtGdiDrawStream(long long ptr)
 @ stub NtGdiDwmCreatedBitmapRemotingOutput
-@ stdcall NtGdiEllipse(long long long long long)
+@ stdcall -syscall NtGdiEllipse(long long long long long)
 @ stub NtGdiEnableEudc
 @ stdcall NtGdiEndDoc(long)
 @ stub NtGdiEndGdiRendering
@@ -501,7 +501,7 @@
 @ stub NtGdiGetPerBandInfo
 @ stub NtGdiGetPhysicalMonitorDescription
 @ stub NtGdiGetPhysicalMonitors
-@ stdcall NtGdiGetPixel(long long long)
+@ stdcall -syscall NtGdiGetPixel(long long long)
 @ stub NtGdiGetProcessSessionFonts
 @ stub NtGdiGetPublicFontTableChangeCookie
 @ stdcall NtGdiGetRandomRgn(long long long)
@@ -535,7 +535,7 @@
 @ stdcall -syscall NtGdiInitSpool()
 @ stdcall NtGdiIntersectClipRect(long long long long long)
 @ stdcall NtGdiInvertRgn(long long)
-@ stdcall NtGdiLineTo(long long long)
+@ stdcall -syscall NtGdiLineTo(long long long)
 @ stub NtGdiMakeFontDir
 @ stub NtGdiMakeInfoDC
 @ stub NtGdiMakeObjectUnXferable
@@ -544,7 +544,7 @@
 @ stub NtGdiMirrorWindowOrg
 @ stdcall NtGdiModifyWorldTransform(long ptr long)
 @ stub NtGdiMonoBitmap
-@ stdcall NtGdiMoveTo(long long long ptr)
+@ stdcall -syscall NtGdiMoveTo(long long long ptr)
 @ stdcall NtGdiOffsetClipRgn(long long long)
 @ stdcall -syscall NtGdiOffsetRgn(long long long)
 @ stdcall -syscall NtGdiOpenDCW(ptr ptr ptr long long ptr ptr ptr)
@@ -566,14 +566,14 @@
 @ stub NtGdiQueryFonts
 @ stdcall -syscall NtGdiRectInRegion(long ptr)
 @ stdcall NtGdiRectVisible(long ptr)
-@ stdcall NtGdiRectangle(long long long long long)
+@ stdcall -syscall NtGdiRectangle(long long long long long)
 @ stdcall -syscall NtGdiRemoveFontMemResourceEx(long)
 @ stdcall -syscall NtGdiRemoveFontResourceW(wstr long long long long ptr)
 @ stub NtGdiRemoveMergeFont
 @ stdcall NtGdiResetDC(long ptr ptr ptr ptr)
 @ stdcall NtGdiResizePalette(long long)
 @ stdcall NtGdiRestoreDC(long long)
-@ stdcall NtGdiRoundRect(long long long long long long long)
+@ stdcall -syscall NtGdiRoundRect(long long long long long long long)
 @ stub NtGdiSTROBJ_bEnum
 @ stub NtGdiSTROBJ_bEnumPositionsOnly
 @ stub NtGdiSTROBJ_bGetAdvanceWidths
@@ -609,7 +609,7 @@
 @ stub NtGdiSetMiterLimit
 @ stub NtGdiSetOPMSigningKeyAndSequenceNumbers
 @ stub NtGdiSetPUMPDOBJ
-@ stdcall NtGdiSetPixel(long long long long)
+@ stdcall -syscall NtGdiSetPixel(long long long long)
 @ stdcall -syscall NtGdiSetPixelFormat(long long)
 @ stub NtGdiSetPrivateDeviceGammaRamp
 @ stdcall -syscall NtGdiSetRectRgn(long long long long long)
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 080ccf9fd7b6..3974de819d59 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -42,8 +42,6 @@ struct unix_funcs
                                          BLENDFUNCTION blend_function, HANDLE xform );
     BOOL     (WINAPI *pNtGdiAngleArc)( HDC hdc, INT x, INT y, DWORD radius, FLOAT start_angle,
                                        FLOAT sweep_angle );
-    BOOL     (WINAPI *pNtGdiArcInternal)( UINT type, HDC hdc, INT left, INT top, INT right, INT bottom,
-                                          INT xstart, INT ystart, INT xend, INT yend );
     BOOL     (WINAPI *pNtGdiBeginPath)( HDC hdc );
     BOOL     (WINAPI *pNtGdiBitBlt)( HDC hdc_dst, INT x_dst, INT y_dst, INT width, INT height, HDC hdc_src,
                                      INT x_src, INT y_src, DWORD rop, DWORD bk_color, FLONG fl );
@@ -69,7 +67,6 @@ struct unix_funcs
     BOOL     (WINAPI *pNtGdiDeleteObjectApp)( HGDIOBJ obj );
     LONG     (WINAPI *pNtGdiDoPalette)( HGDIOBJ handle, WORD start, WORD count, void *entries,
                                         DWORD func, BOOL inbound );
-    BOOL     (WINAPI *pNtGdiEllipse)( HDC hdc, INT left, INT top, INT right, INT bottom );
     INT      (WINAPI *pNtGdiEndDoc)(HDC hdc);
     BOOL     (WINAPI *pNtGdiEndPath)( HDC hdc );
     INT      (WINAPI *pNtGdiEndPage)( HDC hdc );
@@ -110,7 +107,6 @@ struct unix_funcs
     COLORREF (WINAPI *pNtGdiGetNearestColor)( HDC hdc, COLORREF color );
     UINT     (WINAPI *pNtGdiGetOutlineTextMetricsInternalW)( HDC hdc, UINT cbData,
                                                              OUTLINETEXTMETRICW *otm, ULONG opts );
-    COLORREF (WINAPI *pNtGdiGetPixel)( HDC hdc, INT x, INT y );
     INT      (WINAPI *pNtGdiGetRandomRgn)( HDC hdc, HRGN region, INT code );
     BOOL     (WINAPI *pNtGdiGetRasterizerCaps)( RASTERIZER_STATUS *status, UINT size );
     BOOL     (WINAPI *pNtGdiGetRealizationInfo)( HDC hdc, struct font_realization_info *info );
@@ -123,12 +119,10 @@ struct unix_funcs
                                            void *grad_array, ULONG ngrad, ULONG mode );
     INT      (WINAPI *pNtGdiIntersectClipRect)( HDC hdc, INT left, INT top, INT right, INT bottom );
     BOOL     (WINAPI *pNtGdiInvertRgn)( HDC hdc, HRGN hrgn );
-    BOOL     (WINAPI *pNtGdiLineTo)( HDC hdc, INT x, INT y );
     BOOL     (WINAPI *pNtGdiMaskBlt)( HDC hdc, INT x_dst, INT y_dst, INT width_dst, INT height_dst,
                                       HDC hdc_src, INT x_src, INT y_src, HBITMAP mask,
                                       INT x_mask, INT y_mask, DWORD rop, DWORD bk_color );
     BOOL     (WINAPI *pNtGdiModifyWorldTransform)( HDC hdc, const XFORM *xform, DWORD mode );
-    BOOL     (WINAPI *pNtGdiMoveTo)( HDC hdc, INT x, INT y, POINT *pt );
     INT      (WINAPI *pNtGdiOffsetClipRgn)( HDC hdc, INT x, INT y );
     BOOL     (WINAPI *pNtGdiPatBlt)( HDC hdc, INT left, INT top, INT width, INT height, DWORD rop );
     BOOL     (WINAPI *pNtGdiPlgBlt)( HDC hdc, const POINT *point, HDC hdc_src, INT x_src, INT y_src,
@@ -139,13 +133,10 @@ struct unix_funcs
                                            DWORD count, UINT function );
     BOOL     (WINAPI *pNtGdiPtVisible)( HDC hdc, INT x, INT y );
     BOOL     (WINAPI *pNtGdiRectVisible)( HDC hdc, const RECT *rect );
-    BOOL     (WINAPI *pNtGdiRectangle)( HDC hdc, INT left, INT top, INT right, INT bottom );
     BOOL     (WINAPI *pNtGdiResetDC)( HDC hdc, const DEVMODEW *devmode, BOOL *banding,
                                       DRIVER_INFO_2W *driver_info, void *dev );
     BOOL     (WINAPI *pNtGdiResizePalette)( HPALETTE palette, UINT count );
     BOOL     (WINAPI *pNtGdiRestoreDC)( HDC hdc, INT level );
-    BOOL     (WINAPI *pNtGdiRoundRect)( HDC hdc, INT left, INT top, INT right,
-                                        INT bottom, INT ell_width, INT ell_height );
     BOOL     (WINAPI *pNtGdiScaleViewportExtEx)( HDC hdc, INT x_num, INT x_denom,
                                                  INT y_num, INT y_denom, SIZE *size );
     BOOL     (WINAPI *pNtGdiScaleWindowExtEx)( HDC hdc, INT x_num, INT x_denom,
@@ -163,7 +154,6 @@ struct unix_funcs
                                                         BOOL xform_coords, HANDLE xform );
     BOOL     (WINAPI *pNtGdiSetDeviceGammaRamp)( HDC hdc, void *ptr );
     DWORD    (WINAPI *pNtGdiSetLayout)( HDC hdc, LONG wox, DWORD layout );
-    COLORREF (WINAPI *pNtGdiSetPixel)( HDC hdc, INT x, INT y, COLORREF color );
     UINT     (WINAPI *pNtGdiSetSystemPaletteUse)( HDC hdc, UINT use );
     INT      (WINAPI *pNtGdiStartDoc)( HDC hdc, const DOCINFOW *doc, BOOL *banding, INT job );
     INT      (WINAPI *pNtGdiStartPage)( HDC hdc );
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index 004833dc3b4f..ee87d6f3302a 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -51,13 +51,6 @@ BOOL WINAPI NtGdiAngleArc( HDC hdc, INT x, INT y, DWORD radius, FLOAT start_angl
     return unix_funcs->pNtGdiAngleArc( hdc, x, y, radius, start_angle, sweep_angle );
 }
 
-BOOL WINAPI NtGdiArcInternal( UINT type, HDC hdc, INT left, INT top, INT right, INT bottom,
-                              INT xstart, INT ystart, INT xend, INT yend )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiArcInternal( type, hdc, left, top, right, bottom, xstart, ystart, xend, yend );
-}
-
 BOOL WINAPI NtGdiBeginPath( HDC hdc )
 {
     if (!unix_funcs) return FALSE;
@@ -125,12 +118,6 @@ LONG WINAPI NtGdiDoPalette( HGDIOBJ handle, WORD start, WORD count, void *entrie
     return unix_funcs->pNtGdiDoPalette( handle, start, count, entries, func, inbound );
 }
 
-BOOL WINAPI NtGdiEllipse( HDC hdc, INT left, INT top, INT right, INT bottom )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiEllipse( hdc, left, top, right, bottom );
-}
-
 INT WINAPI NtGdiEndDoc( HDC hdc )
 {
     if (!unix_funcs) return SP_ERROR;
@@ -325,12 +312,6 @@ UINT WINAPI NtGdiGetOutlineTextMetricsInternalW( HDC hdc, UINT cbData,
     return unix_funcs->pNtGdiGetOutlineTextMetricsInternalW( hdc, cbData, otm, opts );
 }
 
-COLORREF WINAPI NtGdiGetPixel( HDC hdc, INT x, INT y )
-{
-    if (!unix_funcs) return CLR_INVALID;
-    return unix_funcs->pNtGdiGetPixel( hdc, x, y );
-}
-
 INT WINAPI NtGdiGetRandomRgn( HDC hdc, HRGN region, INT code )
 {
     if (!unix_funcs) return -1;
@@ -393,12 +374,6 @@ BOOL WINAPI NtGdiInvertRgn( HDC hdc, HRGN hrgn )
     return unix_funcs->pNtGdiInvertRgn( hdc, hrgn );
 }
 
-BOOL WINAPI NtGdiLineTo( HDC hdc, INT x, INT y )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiLineTo( hdc, x, y );
-}
-
 BOOL WINAPI NtGdiMaskBlt( HDC hdc, INT x_dst, INT y_dst, INT width_dst, INT height_dst,
                           HDC hdc_src, INT x_src, INT y_src, HBITMAP mask,
                           INT x_mask, INT y_mask, DWORD rop, DWORD bk_color )
@@ -414,12 +389,6 @@ BOOL WINAPI NtGdiModifyWorldTransform( HDC hdc, const XFORM *xform, DWORD mode )
     return unix_funcs->pNtGdiModifyWorldTransform( hdc, xform, mode );
 }
 
-BOOL WINAPI NtGdiMoveTo( HDC hdc, INT x, INT y, POINT *pt )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiMoveTo( hdc, x, y, pt );
-}
-
 INT WINAPI NtGdiOffsetClipRgn( HDC hdc, INT x, INT y )
 {
     if (!unix_funcs) return ERROR;
@@ -466,12 +435,6 @@ BOOL WINAPI NtGdiRectVisible( HDC hdc, const RECT *rect )
     return unix_funcs->pNtGdiRectVisible( hdc, rect );
 }
 
-BOOL WINAPI NtGdiRectangle( HDC hdc, INT left, INT top, INT right, INT bottom )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiRectangle( hdc, left, top, right, bottom );
-}
-
 BOOL WINAPI NtGdiResetDC( HDC hdc, const DEVMODEW *devmode, BOOL *banding,
                           DRIVER_INFO_2W *driver_info, void *dev )
 {
@@ -491,13 +454,6 @@ BOOL WINAPI NtGdiRestoreDC( HDC hdc, INT level )
     return unix_funcs->pNtGdiRestoreDC( hdc, level );
 }
 
-BOOL WINAPI NtGdiRoundRect( HDC hdc, INT left, INT top, INT right,
-                            INT bottom, INT ell_width, INT ell_height )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiRoundRect( hdc, left, top, right, bottom, ell_width, ell_height );
-}
-
 BOOL WINAPI NtGdiScaleViewportExtEx( HDC hdc, INT x_num, INT x_denom,
                                      INT y_num, INT y_denom, SIZE *size )
 {
@@ -572,12 +528,6 @@ DWORD WINAPI NtGdiSetLayout( HDC hdc, LONG wox, DWORD layout )
     return unix_funcs->pNtGdiSetLayout( hdc, wox, layout );
 }
 
-COLORREF WINAPI NtGdiSetPixel( HDC hdc, INT x, INT y, COLORREF color )
-{
-    if (!unix_funcs) return CLR_INVALID;
-    return unix_funcs->pNtGdiSetPixel( hdc, x, y, color );
-}
-
 UINT WINAPI NtGdiSetSystemPaletteUse( HDC hdc, UINT use )
 {
     if (!unix_funcs) return SYSPAL_ERROR;
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index abb15da1884c..78bb57a7ef97 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -79,6 +79,22 @@ NTSTATUS WINAPI wow64_NtGdiAddFontResourceW( UINT *args )
     return NtGdiAddFontResourceW( str, size, files, flags, tid, dv );
 }
 
+NTSTATUS WINAPI wow64_NtGdiArcInternal( UINT *args )
+{
+    UINT type = get_ulong( &args );
+    HDC hdc = get_handle( &args );
+    INT left = get_ulong( &args );
+    INT top = get_ulong( &args );
+    INT right = get_ulong( &args );
+    INT bottom = get_ulong( &args );
+    INT xstart = get_ulong( &args );
+    INT ystart = get_ulong( &args );
+    INT xend = get_ulong( &args );
+    INT yend = get_ulong( &args );
+
+    return NtGdiArcInternal( type, hdc, left, top, right, bottom, xstart, ystart, xend, yend );
+}
+
 NTSTATUS WINAPI wow64_NtGdiCombineRgn( UINT *args )
 {
     HRGN dest = get_handle( &args );
@@ -318,6 +334,17 @@ NTSTATUS WINAPI wow64_NtGdiDrawStream( UINT *args )
     return NtGdiDrawStream( hdc, in, pvin );
 }
 
+NTSTATUS WINAPI wow64_NtGdiEllipse( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT left = get_ulong( &args );
+    INT top = get_ulong( &args );
+    INT right = get_ulong( &args );
+    INT bottom = get_ulong( &args );
+
+    return NtGdiEllipse( hdc, left, top, right, bottom );
+}
+
 NTSTATUS WINAPI wow64_NtGdiEqualRgn( UINT *args )
 {
     HRGN hrgn1 = get_handle( &args );
@@ -555,6 +582,45 @@ NTSTATUS WINAPI wow64_NtGdiGetPath( UINT *args )
     return NtGdiGetPath( hdc, points, types, size );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetPixel( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x = get_ulong( &args );
+    INT y = get_ulong( &args );
+
+    return NtGdiGetPixel( hdc, x, y );
+}
+
+NTSTATUS WINAPI wow64_NtGdiLineTo( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x = get_ulong( &args );
+    INT y = get_ulong( &args );
+
+    return NtGdiLineTo( hdc, x, y );
+}
+
+NTSTATUS WINAPI wow64_NtGdiMoveTo( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x = get_ulong( &args );
+    INT y = get_ulong( &args );
+    POINT *pt = get_ptr( &args );
+
+    return NtGdiMoveTo( hdc, x, y, pt );
+}
+
+NTSTATUS WINAPI wow64_NtGdiRectangle( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT left = get_ulong( &args );
+    INT top = get_ulong( &args );
+    INT right = get_ulong( &args );
+    INT bottom = get_ulong( &args );
+
+    return NtGdiRectangle( hdc, left, top, right, bottom );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetRegionData( UINT *args )
 {
     HRGN hrgn = get_ptr( &args );
@@ -572,6 +638,19 @@ NTSTATUS WINAPI wow64_NtGdiGetRgnBox( UINT *args )
     return NtGdiGetRgnBox( hrgn, rect );
 }
 
+NTSTATUS WINAPI wow64_NtGdiRoundRect( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT left = get_ulong( &args );
+    INT top = get_ulong( &args );
+    INT right = get_ulong( &args );
+    INT bottom = get_ulong( &args );
+    INT ell_width = get_ulong( &args );
+    INT ell_height = get_ulong( &args );
+
+    return NtGdiRoundRect( hdc, left, top, right, bottom, ell_width, ell_height );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetSpoolMessage( UINT *args )
 {
     void *ptr1 = get_ptr( &args );
@@ -744,6 +823,16 @@ NTSTATUS WINAPI wow64_NtGdiSetMetaRgn( UINT *args )
     return NtGdiSetMetaRgn( hdc );
 }
 
+NTSTATUS WINAPI wow64_NtGdiSetPixel( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x = get_ulong( &args );
+    INT y = get_ulong( &args );
+    COLORREF color = get_ulong( &args );
+
+    return NtGdiSetPixel( hdc, x, y, color );
+}
+
 NTSTATUS WINAPI wow64_NtGdiSetPixelFormat( UINT *args )
 {
     HDC hdc = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index dd69d03d0922..97796f63fb7d 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -24,6 +24,7 @@
 #define ALL_WIN32_SYSCALLS \
     SYSCALL_ENTRY( NtGdiAddFontMemResourceEx ) \
     SYSCALL_ENTRY( NtGdiAddFontResourceW ) \
+    SYSCALL_ENTRY( NtGdiArcInternal ) \
     SYSCALL_ENTRY( NtGdiCombineRgn ) \
     SYSCALL_ENTRY( NtGdiCreateBitmap ) \
     SYSCALL_ENTRY( NtGdiCreateClientObj ) \
@@ -45,6 +46,7 @@
     SYSCALL_ENTRY( NtGdiDeleteClientObj ) \
     SYSCALL_ENTRY( NtGdiDescribePixelFormat ) \
     SYSCALL_ENTRY( NtGdiDrawStream ) \
+    SYSCALL_ENTRY( NtGdiEllipse ) \
     SYSCALL_ENTRY( NtGdiEqualRgn ) \
     SYSCALL_ENTRY( NtGdiExtCreatePen ) \
     SYSCALL_ENTRY( NtGdiExtCreateRegion ) \
@@ -61,6 +63,7 @@
     SYSCALL_ENTRY( NtGdiGetFontFileInfo ) \
     SYSCALL_ENTRY( NtGdiGetNearestPaletteIndex ) \
     SYSCALL_ENTRY( NtGdiGetPath ) \
+    SYSCALL_ENTRY( NtGdiGetPixel ) \
     SYSCALL_ENTRY( NtGdiGetRegionData ) \
     SYSCALL_ENTRY( NtGdiGetRgnBox ) \
     SYSCALL_ENTRY( NtGdiGetSpoolMessage ) \
@@ -68,13 +71,17 @@
     SYSCALL_ENTRY( NtGdiGetTransform ) \
     SYSCALL_ENTRY( NtGdiHfontCreate ) \
     SYSCALL_ENTRY( NtGdiInitSpool ) \
+    SYSCALL_ENTRY( NtGdiLineTo ) \
+    SYSCALL_ENTRY( NtGdiMoveTo ) \
     SYSCALL_ENTRY( NtGdiOffsetRgn ) \
     SYSCALL_ENTRY( NtGdiOpenDCW ) \
     SYSCALL_ENTRY( NtGdiPathToRegion ) \
     SYSCALL_ENTRY( NtGdiPtInRegion ) \
     SYSCALL_ENTRY( NtGdiRectInRegion ) \
+    SYSCALL_ENTRY( NtGdiRectangle ) \
     SYSCALL_ENTRY( NtGdiRemoveFontMemResourceEx ) \
     SYSCALL_ENTRY( NtGdiRemoveFontResourceW ) \
+    SYSCALL_ENTRY( NtGdiRoundRect ) \
     SYSCALL_ENTRY( NtGdiSaveDC ) \
     SYSCALL_ENTRY( NtGdiSetBitmapBits ) \
     SYSCALL_ENTRY( NtGdiSetBitmapDimension ) \
@@ -82,6 +89,7 @@
     SYSCALL_ENTRY( NtGdiSetColorAdjustment ) \
     SYSCALL_ENTRY( NtGdiSetMagicColors ) \
     SYSCALL_ENTRY( NtGdiSetMetaRgn ) \
+    SYSCALL_ENTRY( NtGdiSetPixel ) \
     SYSCALL_ENTRY( NtGdiSetPixelFormat ) \
     SYSCALL_ENTRY( NtGdiSetRectRgn ) \
     SYSCALL_ENTRY( NtGdiSetTextJustification ) \

From ef0ae91e8f1d9a1dbfb3cedef29e4813d0088273 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 14:47:56 +0200
Subject: [PATCH 04/19] win32u: Use syscall interface for more painting
 functions.

FIXME: get_float() works, but it does not seem right, take a closer look
---
 dlls/win32u/gdiobj.c             |  8 ---
 dlls/win32u/syscall.c            |  8 +++
 dlls/win32u/win32u.spec          | 16 +++---
 dlls/win32u/win32u_private.h     | 11 -----
 dlls/win32u/wrappers.c           | 50 -------------------
 dlls/wow64win/gdi.c              | 84 ++++++++++++++++++++++++++++++++
 dlls/wow64win/syscall.h          |  8 +++
 dlls/wow64win/wow64win_private.h |  1 +
 8 files changed, 109 insertions(+), 77 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index 4db5bd98f86b..d15e5367f15a 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1033,7 +1033,6 @@ static struct unix_funcs unix_funcs =
     NtGdiAbortDoc,
     NtGdiAbortPath,
     NtGdiAlphaBlend,
-    NtGdiAngleArc,
     NtGdiBeginPath,
     NtGdiBitBlt,
     NtGdiCloseFigure,
@@ -1060,13 +1059,10 @@ static struct unix_funcs unix_funcs =
     NtGdiEnumFonts,
     NtGdiExcludeClipRect,
     NtGdiExtEscape,
-    NtGdiExtFloodFill,
     NtGdiExtTextOutW,
     NtGdiExtSelectClipRgn,
     NtGdiFillPath,
-    NtGdiFillRgn,
     NtGdiFontIsLinked,
-    NtGdiFrameRgn,
     NtGdiGetAndSetDCDword,
     NtGdiGetAppClipBox,
     NtGdiGetBoundsRect,
@@ -1090,16 +1086,12 @@ static struct unix_funcs unix_funcs =
     NtGdiGetTextExtentExW,
     NtGdiGetTextFaceW,
     NtGdiGetTextMetricsW,
-    NtGdiGradientFill,
     NtGdiIntersectClipRect,
-    NtGdiInvertRgn,
     NtGdiMaskBlt,
     NtGdiModifyWorldTransform,
     NtGdiOffsetClipRgn,
     NtGdiPatBlt,
     NtGdiPlgBlt,
-    NtGdiPolyDraw,
-    NtGdiPolyPolyDraw,
     NtGdiPtVisible,
     NtGdiRectVisible,
     NtGdiResetDC,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 96d99a07b06d..b165601c9c20 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -38,6 +38,7 @@ static void * const syscalls[] =
 {
     NtGdiAddFontMemResourceEx,
     NtGdiAddFontResourceW,
+    NtGdiAngleArc,
     NtGdiArcInternal,
     NtGdiCombineRgn,
     NtGdiCreateBitmap,
@@ -64,9 +65,12 @@ static void * const syscalls[] =
     NtGdiEqualRgn,
     NtGdiExtCreatePen,
     NtGdiExtCreateRegion,
+    NtGdiExtFloodFill,
     NtGdiExtGetObjectW,
+    NtGdiFillRgn,
     NtGdiFlattenPath,
     NtGdiFlush,
+    NtGdiFrameRgn,
     NtGdiGetBitmapBits,
     NtGdiGetBitmapDimension,
     NtGdiGetColorAdjustment,
@@ -83,13 +87,17 @@ static void * const syscalls[] =
     NtGdiGetSpoolMessage,
     NtGdiGetSystemPaletteUse,
     NtGdiGetTransform,
+    NtGdiGradientFill,
     NtGdiHfontCreate,
     NtGdiInitSpool,
+    NtGdiInvertRgn,
     NtGdiLineTo,
     NtGdiMoveTo,
     NtGdiOffsetRgn,
     NtGdiOpenDCW,
     NtGdiPathToRegion,
+    NtGdiPolyDraw,
+    NtGdiPolyPolyDraw,
     NtGdiPtInRegion,
     NtGdiRectInRegion,
     NtGdiRectangle,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index a51e9cb2df6e..5ec958c5f286 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -113,7 +113,7 @@
 @ stub NtGdiAddRemoteFontToDC
 @ stub NtGdiAddRemoteMMInstanceToDC
 @ stdcall NtGdiAlphaBlend(long long long long long long long long long long long ptr)
-@ stdcall NtGdiAngleArc(long long long long float float)
+@ stdcall -syscall NtGdiAngleArc(long long long long float float)
 @ stub NtGdiAnyLinkedFonts
 @ stdcall -syscall NtGdiArcInternal(long long long long long long long long long long)
 @ stub NtGdiBRUSHOBJ_DeleteRbrush
@@ -421,7 +421,7 @@
 @ stdcall -syscall NtGdiExtCreatePen(long long long long long long long ptr long long long)
 @ stdcall -syscall NtGdiExtCreateRegion(ptr long ptr)
 @ stdcall NtGdiExtEscape(long wstr long long long ptr long ptr)
-@ stdcall NtGdiExtFloodFill(long long long long long)
+@ stdcall -syscall NtGdiExtFloodFill(long long long long long)
 @ stdcall -syscall NtGdiExtGetObjectW(long long ptr)
 @ stdcall NtGdiExtSelectClipRgn(long long long)
 @ stdcall NtGdiExtTextOutW(long long long long ptr ptr long ptr long)
@@ -434,12 +434,12 @@
 @ stub NtGdiFONTOBJ_pxoGetXform
 @ stub NtGdiFONTOBJ_vGetInfo
 @ stdcall NtGdiFillPath(long)
-@ stdcall NtGdiFillRgn(long long long)
+@ stdcall -syscall NtGdiFillRgn(long long long)
 @ stdcall -syscall NtGdiFlattenPath(long)
 @ stdcall -syscall NtGdiFlush()
 @ stdcall NtGdiFontIsLinked(long)
 @ stub NtGdiForceUFIMapping
-@ stdcall NtGdiFrameRgn(long long long long long)
+@ stdcall -syscall NtGdiFrameRgn(long long long long long)
 @ stub NtGdiFullscreenControl
 @ stdcall NtGdiGetAndSetDCDword(long long long ptr)
 @ stdcall NtGdiGetAppClipBox(long ptr)
@@ -524,7 +524,7 @@
 @ stub NtGdiGetUFI
 @ stub NtGdiGetUFIPathname
 @ stub NtGdiGetWidthTable
-@ stdcall NtGdiGradientFill(long ptr long ptr long long)
+@ stdcall -syscall NtGdiGradientFill(long ptr long ptr long long)
 @ stub NtGdiHLSurfGetInformation
 @ stub NtGdiHLSurfSetInformation
 @ stub NtGdiHT_Get8BPPFormatPalette
@@ -534,7 +534,7 @@
 @ stub NtGdiInit
 @ stdcall -syscall NtGdiInitSpool()
 @ stdcall NtGdiIntersectClipRect(long long long long long)
-@ stdcall NtGdiInvertRgn(long long)
+@ stdcall -syscall NtGdiInvertRgn(long long)
 @ stdcall -syscall NtGdiLineTo(long long long)
 @ stub NtGdiMakeFontDir
 @ stub NtGdiMakeInfoDC
@@ -556,9 +556,9 @@
 @ stdcall NtGdiPatBlt(long long long long long long)
 @ stdcall -syscall NtGdiPathToRegion(long)
 @ stdcall NtGdiPlgBlt(long ptr long long long long long long long long long)
-@ stdcall NtGdiPolyDraw(long ptr ptr long)
+@ stdcall -syscall NtGdiPolyDraw(long ptr ptr long)
 @ stub NtGdiPolyPatBlt
-@ stdcall NtGdiPolyPolyDraw(long ptr ptr long long)
+@ stdcall -syscall NtGdiPolyPolyDraw(long ptr ptr long long)
 @ stub NtGdiPolyTextOutW
 @ stdcall -syscall NtGdiPtInRegion(long long long)
 @ stdcall NtGdiPtVisible(long long long)
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 3974de819d59..7812044c6883 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -40,8 +40,6 @@ struct unix_funcs
     BOOL     (WINAPI *pNtGdiAlphaBlend)( HDC hdc_dst, int x_dst, int y_dst, int width_dst, int height_dst,
                                          HDC hdc_src, int x_src, int y_src, int width_src, int height_src,
                                          BLENDFUNCTION blend_function, HANDLE xform );
-    BOOL     (WINAPI *pNtGdiAngleArc)( HDC hdc, INT x, INT y, DWORD radius, FLOAT start_angle,
-                                       FLOAT sweep_angle );
     BOOL     (WINAPI *pNtGdiBeginPath)( HDC hdc );
     BOOL     (WINAPI *pNtGdiBitBlt)( HDC hdc_dst, INT x_dst, INT y_dst, INT width, INT height, HDC hdc_src,
                                      INT x_src, INT y_src, DWORD rop, DWORD bk_color, FLONG fl );
@@ -75,14 +73,11 @@ struct unix_funcs
     INT      (WINAPI *pNtGdiExcludeClipRect)( HDC hdc, INT left, INT top, INT right, INT bottom );
     INT      (WINAPI *pNtGdiExtEscape)( HDC hdc, WCHAR *driver, INT driver_id, INT escape, INT input_size,
                                         const char *input, INT output_size, char *output );
-    BOOL     (WINAPI *pNtGdiExtFloodFill)( HDC hdc, INT x, INT y, COLORREF color, UINT type );
     BOOL     (WINAPI *pNtGdiExtTextOutW)( HDC hdc, INT x, INT y, UINT flags, const RECT *rect,
                                           const WCHAR *str, UINT count, const INT *dx, DWORD cp );
     INT      (WINAPI *pNtGdiExtSelectClipRgn)( HDC hdc, HRGN region, INT mode );
     BOOL     (WINAPI *pNtGdiFillPath)( HDC hdc );
-    BOOL     (WINAPI *pNtGdiFillRgn)( HDC hdc, HRGN hrgn, HBRUSH hbrush );
     BOOL     (WINAPI *pNtGdiFontIsLinked)( HDC hdc );
-    BOOL     (WINAPI *pNtGdiFrameRgn)( HDC hdc, HRGN hrgn, HBRUSH brush, INT width, INT height );
     BOOL     (WINAPI *pNtGdiGetAndSetDCDword)( HDC hdc, UINT method, DWORD value, DWORD *result );
     INT      (WINAPI *pNtGdiGetAppClipBox)( HDC hdc, RECT *rect );
     UINT     (WINAPI *pNtGdiGetBoundsRect)( HDC hdc, RECT *rect, UINT flags );
@@ -115,10 +110,7 @@ struct unix_funcs
                                                INT *nfit, INT *dxs, SIZE *size, UINT flags );
     INT      (WINAPI *pNtGdiGetTextFaceW)( HDC hdc, INT count, WCHAR *name, BOOL alias_name );
     BOOL     (WINAPI *pNtGdiGetTextMetricsW)( HDC hdc, TEXTMETRICW *metrics, ULONG flags );
-    BOOL     (WINAPI *pNtGdiGradientFill)( HDC hdc, TRIVERTEX *vert_array, ULONG nvert,
-                                           void *grad_array, ULONG ngrad, ULONG mode );
     INT      (WINAPI *pNtGdiIntersectClipRect)( HDC hdc, INT left, INT top, INT right, INT bottom );
-    BOOL     (WINAPI *pNtGdiInvertRgn)( HDC hdc, HRGN hrgn );
     BOOL     (WINAPI *pNtGdiMaskBlt)( HDC hdc, INT x_dst, INT y_dst, INT width_dst, INT height_dst,
                                       HDC hdc_src, INT x_src, INT y_src, HBITMAP mask,
                                       INT x_mask, INT y_mask, DWORD rop, DWORD bk_color );
@@ -128,9 +120,6 @@ struct unix_funcs
     BOOL     (WINAPI *pNtGdiPlgBlt)( HDC hdc, const POINT *point, HDC hdc_src, INT x_src, INT y_src,
                                      INT width, INT height, HBITMAP mask, INT x_mask, INT y_mask,
                                      DWORD bk_color );
-    BOOL     (WINAPI *pNtGdiPolyDraw)(HDC hdc, const POINT *points, const BYTE *types, DWORD count );
-    ULONG    (WINAPI *pNtGdiPolyPolyDraw)( HDC hdc, const POINT *points, const ULONG *counts,
-                                           DWORD count, UINT function );
     BOOL     (WINAPI *pNtGdiPtVisible)( HDC hdc, INT x, INT y );
     BOOL     (WINAPI *pNtGdiRectVisible)( HDC hdc, const RECT *rect );
     BOOL     (WINAPI *pNtGdiResetDC)( HDC hdc, const DEVMODEW *devmode, BOOL *banding,
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index ee87d6f3302a..50bfec72e3d8 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -45,12 +45,6 @@ BOOL WINAPI NtGdiAlphaBlend( HDC hdc_dst, int x_dst, int y_dst, int width_dst, i
                                          x_src, y_src, width_src, height_src, blend_function, xform );
 }
 
-BOOL WINAPI NtGdiAngleArc( HDC hdc, INT x, INT y, DWORD radius, FLOAT start_angle, FLOAT sweep_angle )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiAngleArc( hdc, x, y, radius, start_angle, sweep_angle );
-}
-
 BOOL WINAPI NtGdiBeginPath( HDC hdc )
 {
     if (!unix_funcs) return FALSE;
@@ -164,12 +158,6 @@ INT WINAPI NtGdiExtEscape( HDC hdc, WCHAR *driver, INT driver_id, INT escape, IN
                                         output_size, output );
 }
 
-BOOL WINAPI NtGdiExtFloodFill( HDC hdc, INT x, INT y, COLORREF color, UINT type )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiExtFloodFill( hdc, x, y, color, type );
-}
-
 BOOL WINAPI NtGdiExtTextOutW( HDC hdc, INT x, INT y, UINT flags, const RECT *rect,
                               const WCHAR *str, UINT count, const INT *dx, DWORD cp )
 {
@@ -189,24 +177,12 @@ BOOL WINAPI NtGdiFillPath( HDC hdc )
     return unix_funcs->pNtGdiFillPath( hdc );
 }
 
-BOOL WINAPI NtGdiFillRgn( HDC hdc, HRGN hrgn, HBRUSH hbrush )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiFillRgn( hdc, hrgn, hbrush );
-}
-
 BOOL WINAPI NtGdiFontIsLinked( HDC hdc )
 {
     if (!unix_funcs) return FALSE;
     return unix_funcs->pNtGdiFontIsLinked( hdc );
 }
 
-BOOL WINAPI NtGdiFrameRgn( HDC hdc, HRGN hrgn, HBRUSH brush, INT width, INT height )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiFrameRgn( hdc, hrgn, brush, width, height );
-}
-
 BOOL WINAPI NtGdiGetAndSetDCDword( HDC hdc, UINT method, DWORD value, DWORD *result )
 {
     if (!unix_funcs) return FALSE;
@@ -355,25 +331,12 @@ BOOL WINAPI NtGdiGetTextMetricsW( HDC hdc, TEXTMETRICW *metrics, ULONG flags )
     return unix_funcs->pNtGdiGetTextMetricsW( hdc, metrics, flags );
 }
 
-BOOL WINAPI NtGdiGradientFill( HDC hdc, TRIVERTEX *vert_array, ULONG nvert,
-                               void *grad_array, ULONG ngrad, ULONG mode )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiGradientFill( hdc, vert_array, nvert, grad_array, ngrad, mode );
-}
-
 INT WINAPI NtGdiIntersectClipRect( HDC hdc, INT left, INT top, INT right, INT bottom )
 {
     if (!unix_funcs) return ERROR;
     return unix_funcs->pNtGdiIntersectClipRect( hdc, left, top, right, bottom );
 }
 
-BOOL WINAPI NtGdiInvertRgn( HDC hdc, HRGN hrgn )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiInvertRgn( hdc, hrgn );
-}
-
 BOOL WINAPI NtGdiMaskBlt( HDC hdc, INT x_dst, INT y_dst, INT width_dst, INT height_dst,
                           HDC hdc_src, INT x_src, INT y_src, HBITMAP mask,
                           INT x_mask, INT y_mask, DWORD rop, DWORD bk_color )
@@ -410,19 +373,6 @@ BOOL WINAPI NtGdiPlgBlt( HDC hdc, const POINT *point, HDC hdc_src, INT x_src, IN
                                      x_mask, y_mask, bk_color );
 }
 
-BOOL WINAPI NtGdiPolyDraw( HDC hdc, const POINT *points, const BYTE *types, DWORD count )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiPolyDraw( hdc, points, types, count );
-}
-
-ULONG WINAPI NtGdiPolyPolyDraw( HDC hdc, const POINT *points, const ULONG *counts,
-                                DWORD count, UINT function )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiPolyPolyDraw( hdc, points, counts, count, function );
-}
-
 BOOL WINAPI NtGdiPtVisible( HDC hdc, INT x, INT y )
 {
     if (!unix_funcs) return FALSE;
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index 78bb57a7ef97..2b7644b318eb 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -79,6 +79,18 @@ NTSTATUS WINAPI wow64_NtGdiAddFontResourceW( UINT *args )
     return NtGdiAddFontResourceW( str, size, files, flags, tid, dv );
 }
 
+NTSTATUS WINAPI wow64_NtGdiAngleArc( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x = get_ulong( &args );
+    INT y = get_ulong( &args );
+    DWORD radius = get_ulong( &args );
+    FLOAT start_angle = get_float( &args );
+    FLOAT sweep_angle = get_float( &args );
+
+    return NtGdiAngleArc( hdc, x, y, radius, start_angle, sweep_angle );
+}
+
 NTSTATUS WINAPI wow64_NtGdiArcInternal( UINT *args )
 {
     UINT type = get_ulong( &args );
@@ -381,6 +393,17 @@ NTSTATUS WINAPI wow64_NtGdiExtCreateRegion( UINT *args )
     return HandleToUlong( NtGdiExtCreateRegion( xform, count, data ));
 }
 
+NTSTATUS WINAPI wow64_NtGdiExtFloodFill( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x = get_ulong( &args );
+    INT y = get_ulong( &args );
+    COLORREF color = get_ulong( &args );
+    UINT type = get_ulong( &args );
+
+    return NtGdiExtFloodFill( hdc, x, y, color, type );
+}
+
 NTSTATUS WINAPI wow64_NtGdiExtGetObjectW( UINT *args )
 {
     HGDIOBJ handle = get_handle( &args );
@@ -474,6 +497,15 @@ NTSTATUS WINAPI wow64_NtGdiExtGetObjectW( UINT *args )
     }
 }
 
+NTSTATUS WINAPI wow64_NtGdiFillRgn( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HRGN hrgn = get_handle( &args );
+    HBRUSH hbrush = get_handle( &args );
+
+    return NtGdiFillRgn( hdc, hrgn, hbrush );
+}
+
 NTSTATUS WINAPI wow64_NtGdiFlattenPath( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -486,6 +518,17 @@ NTSTATUS WINAPI wow64_NtGdiFlush( UINT *args )
     return NtGdiFlush();
 }
 
+NTSTATUS WINAPI wow64_NtGdiFrameRgn( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HRGN hrgn = get_handle( &args );
+    HBRUSH brush = get_handle( &args );
+    INT width = get_ulong( &args );
+    INT height = get_ulong( &args );
+
+    return NtGdiFrameRgn( hdc, hrgn, brush, width, height );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetBitmapBits( UINT *args )
 {
     HBITMAP bitmap = get_handle( &args );
@@ -591,6 +634,26 @@ NTSTATUS WINAPI wow64_NtGdiGetPixel( UINT *args )
     return NtGdiGetPixel( hdc, x, y );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGradientFill( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    TRIVERTEX *vert_array = get_ptr( &args );
+    ULONG nvert = get_ulong( &args );
+    void *grad_array = get_ptr( &args );
+    ULONG ngrad = get_ulong( &args );
+    ULONG mode = get_ulong( &args );
+
+    return NtGdiGradientFill( hdc, vert_array, nvert, grad_array, ngrad, mode );
+}
+
+NTSTATUS WINAPI wow64_NtGdiInvertRgn( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HRGN hrgn = get_handle( &args );
+
+    return NtGdiInvertRgn( hdc, hrgn );
+}
+
 NTSTATUS WINAPI wow64_NtGdiLineTo( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -610,6 +673,27 @@ NTSTATUS WINAPI wow64_NtGdiMoveTo( UINT *args )
     return NtGdiMoveTo( hdc, x, y, pt );
 }
 
+NTSTATUS WINAPI wow64_NtGdiPolyDraw( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    const POINT *points = get_ptr( &args );
+    const BYTE *types = get_ptr( &args );
+    DWORD count = get_ulong( &args );
+
+    return NtGdiPolyDraw( hdc, points, types, count );
+}
+
+NTSTATUS WINAPI wow64_NtGdiPolyPolyDraw( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    const POINT *points = get_ptr( &args );
+    const ULONG *counts = get_ptr( &args );
+    DWORD count = get_ulong( &args );
+    UINT function = get_ulong( &args );
+
+    return NtGdiPolyPolyDraw( hdc, points, counts, count, function );
+}
+
 NTSTATUS WINAPI wow64_NtGdiRectangle( UINT *args )
 {
     HDC hdc = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index 97796f63fb7d..1adb756afe47 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -24,6 +24,7 @@
 #define ALL_WIN32_SYSCALLS \
     SYSCALL_ENTRY( NtGdiAddFontMemResourceEx ) \
     SYSCALL_ENTRY( NtGdiAddFontResourceW ) \
+    SYSCALL_ENTRY( NtGdiAngleArc ) \
     SYSCALL_ENTRY( NtGdiArcInternal ) \
     SYSCALL_ENTRY( NtGdiCombineRgn ) \
     SYSCALL_ENTRY( NtGdiCreateBitmap ) \
@@ -50,9 +51,12 @@
     SYSCALL_ENTRY( NtGdiEqualRgn ) \
     SYSCALL_ENTRY( NtGdiExtCreatePen ) \
     SYSCALL_ENTRY( NtGdiExtCreateRegion ) \
+    SYSCALL_ENTRY( NtGdiExtFloodFill ) \
     SYSCALL_ENTRY( NtGdiExtGetObjectW ) \
+    SYSCALL_ENTRY( NtGdiFillRgn ) \
     SYSCALL_ENTRY( NtGdiFlattenPath ) \
     SYSCALL_ENTRY( NtGdiFlush ) \
+    SYSCALL_ENTRY( NtGdiFrameRgn ) \
     SYSCALL_ENTRY( NtGdiGetBitmapBits ) \
     SYSCALL_ENTRY( NtGdiGetBitmapDimension ) \
     SYSCALL_ENTRY( NtGdiGetColorAdjustment ) \
@@ -69,13 +73,17 @@
     SYSCALL_ENTRY( NtGdiGetSpoolMessage ) \
     SYSCALL_ENTRY( NtGdiGetSystemPaletteUse ) \
     SYSCALL_ENTRY( NtGdiGetTransform ) \
+    SYSCALL_ENTRY( NtGdiGradientFill ) \
     SYSCALL_ENTRY( NtGdiHfontCreate ) \
     SYSCALL_ENTRY( NtGdiInitSpool ) \
+    SYSCALL_ENTRY( NtGdiInvertRgn ) \
     SYSCALL_ENTRY( NtGdiLineTo ) \
     SYSCALL_ENTRY( NtGdiMoveTo ) \
     SYSCALL_ENTRY( NtGdiOffsetRgn ) \
     SYSCALL_ENTRY( NtGdiOpenDCW ) \
     SYSCALL_ENTRY( NtGdiPathToRegion ) \
+    SYSCALL_ENTRY( NtGdiPolyDraw ) \
+    SYSCALL_ENTRY( NtGdiPolyPolyDraw ) \
     SYSCALL_ENTRY( NtGdiPtInRegion ) \
     SYSCALL_ENTRY( NtGdiRectInRegion ) \
     SYSCALL_ENTRY( NtGdiRectangle ) \
diff --git a/dlls/wow64win/wow64win_private.h b/dlls/wow64win/wow64win_private.h
index 643875c69ce1..6f23030c418c 100644
--- a/dlls/wow64win/wow64win_private.h
+++ b/dlls/wow64win/wow64win_private.h
@@ -54,6 +54,7 @@ typedef struct
 static inline ULONG get_ulong( UINT **args ) { return *(*args)++; }
 static inline HANDLE get_handle( UINT **args ) { return LongToHandle( *(*args)++ ); }
 static inline void *get_ptr( UINT **args ) { return ULongToPtr( *(*args)++ ); }
+static inline float get_float( UINT **args ) { return *(*(float **)args)++; }
 
 static inline void **addr_32to64( void **addr, ULONG *addr32 )
 {

From e7a1a6fb437aadac085b03c04ff2d74d4bcdc603 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 14:59:29 +0200
Subject: [PATCH 05/19] win32u: Use syscall interface for more printer
 functions.

---
 dlls/win32u/gdiobj.c         |  5 ----
 dlls/win32u/syscall.c        |  5 ++++
 dlls/win32u/win32u.spec      | 10 +++----
 dlls/win32u/win32u_private.h |  5 ----
 dlls/win32u/wrappers.c       | 30 ---------------------
 dlls/wow64win/gdi.c          | 52 ++++++++++++++++++++++++++++++++++++
 dlls/wow64win/syscall.h      |  5 ++++
 7 files changed, 67 insertions(+), 45 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index d15e5367f15a..240703e14897 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1030,7 +1030,6 @@ BOOL WINAPI NtGdiSetColorAdjustment( HDC hdc, const COLORADJUSTMENT *ca )
 
 static struct unix_funcs unix_funcs =
 {
-    NtGdiAbortDoc,
     NtGdiAbortPath,
     NtGdiAlphaBlend,
     NtGdiBeginPath,
@@ -1053,9 +1052,7 @@ static struct unix_funcs unix_funcs =
     NtGdiDdDDISetVidPnSourceOwner,
     NtGdiDeleteObjectApp,
     NtGdiDoPalette,
-    NtGdiEndDoc,
     NtGdiEndPath,
-    NtGdiEndPage,
     NtGdiEnumFonts,
     NtGdiExcludeClipRect,
     NtGdiExtEscape,
@@ -1109,8 +1106,6 @@ static struct unix_funcs unix_funcs =
     NtGdiSetDeviceGammaRamp,
     NtGdiSetLayout,
     NtGdiSetSystemPaletteUse,
-    NtGdiStartDoc,
-    NtGdiStartPage,
     NtGdiStretchBlt,
     NtGdiStretchDIBitsInternal,
     NtGdiStrokeAndFillPath,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index b165601c9c20..80cfc9f99f26 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -36,6 +36,7 @@
 
 static void * const syscalls[] =
 {
+    NtGdiAbortDoc,
     NtGdiAddFontMemResourceEx,
     NtGdiAddFontResourceW,
     NtGdiAngleArc,
@@ -62,6 +63,8 @@ static void * const syscalls[] =
     NtGdiDescribePixelFormat,
     NtGdiDrawStream,
     NtGdiEllipse,
+    NtGdiEndDoc,
+    NtGdiEndPage,
     NtGdiEqualRgn,
     NtGdiExtCreatePen,
     NtGdiExtCreateRegion,
@@ -116,6 +119,8 @@ static void * const syscalls[] =
     NtGdiSetRectRgn,
     NtGdiSetTextJustification,
     NtGdiSetVirtualResolution,
+    NtGdiStartDoc,
+    NtGdiStartPage,
     NtGdiSwapBuffers,
     NtGdiTransformPoints,
     NtUserActivateKeyboardLayout,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index 5ec958c5f286..d8fe9d3227bc 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -104,7 +104,7 @@
 @ stub NtFlipObjectRemovePoolBuffer
 @ stub NtFlipObjectSetContent
 @ stub NtFlipObjectSetMaximumBackchannelQueueDepth
-@ stdcall NtGdiAbortDoc(long)
+@ stdcall -syscall NtGdiAbortDoc(long)
 @ stdcall NtGdiAbortPath(long)
 @ stub NtGdiAddEmbFontToDC
 @ stdcall -syscall NtGdiAddFontMemResourceEx(ptr long ptr long ptr)
@@ -378,9 +378,9 @@
 @ stub NtGdiDwmCreatedBitmapRemotingOutput
 @ stdcall -syscall NtGdiEllipse(long long long long long)
 @ stub NtGdiEnableEudc
-@ stdcall NtGdiEndDoc(long)
+@ stdcall -syscall NtGdiEndDoc(long)
 @ stub NtGdiEndGdiRendering
-@ stdcall NtGdiEndPage(long)
+@ stdcall -syscall NtGdiEndPage(long)
 @ stdcall NtGdiEndPath(long)
 @ stub NtGdiEngAlphaBlend
 @ stub NtGdiEngAssociateSurface
@@ -618,8 +618,8 @@
 @ stdcall -syscall NtGdiSetTextJustification(long long long)
 @ stub NtGdiSetUMPDSandboxState
 @ stdcall -syscall NtGdiSetVirtualResolution(long long long long long)
-@ stdcall NtGdiStartDoc(long ptr ptr long)
-@ stdcall NtGdiStartPage(long)
+@ stdcall -syscall NtGdiStartDoc(long ptr ptr long)
+@ stdcall -syscall NtGdiStartPage(long)
 @ stdcall NtGdiStretchBlt(long long long long long long long long long long long long)
 @ stdcall NtGdiStretchDIBitsInternal(long long long long long long long long long ptr ptr long long long long long)
 @ stdcall NtGdiStrokeAndFillPath(long)
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 7812044c6883..f6d3164947a9 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -35,7 +35,6 @@
 struct unix_funcs
 {
     /* win32u functions */
-    INT      (WINAPI *pNtGdiAbortDoc)( HDC hdc );
     BOOL     (WINAPI *pNtGdiAbortPath)( HDC hdc );
     BOOL     (WINAPI *pNtGdiAlphaBlend)( HDC hdc_dst, int x_dst, int y_dst, int width_dst, int height_dst,
                                          HDC hdc_src, int x_src, int y_src, int width_src, int height_src,
@@ -65,9 +64,7 @@ struct unix_funcs
     BOOL     (WINAPI *pNtGdiDeleteObjectApp)( HGDIOBJ obj );
     LONG     (WINAPI *pNtGdiDoPalette)( HGDIOBJ handle, WORD start, WORD count, void *entries,
                                         DWORD func, BOOL inbound );
-    INT      (WINAPI *pNtGdiEndDoc)(HDC hdc);
     BOOL     (WINAPI *pNtGdiEndPath)( HDC hdc );
-    INT      (WINAPI *pNtGdiEndPage)( HDC hdc );
     BOOL     (WINAPI *pNtGdiEnumFonts)( HDC hdc, ULONG type, ULONG win32_compat, ULONG face_name_len,
                                         const WCHAR *face_name, ULONG charset, ULONG *count, void *buf );
     INT      (WINAPI *pNtGdiExcludeClipRect)( HDC hdc, INT left, INT top, INT right, INT bottom );
@@ -144,8 +141,6 @@ struct unix_funcs
     BOOL     (WINAPI *pNtGdiSetDeviceGammaRamp)( HDC hdc, void *ptr );
     DWORD    (WINAPI *pNtGdiSetLayout)( HDC hdc, LONG wox, DWORD layout );
     UINT     (WINAPI *pNtGdiSetSystemPaletteUse)( HDC hdc, UINT use );
-    INT      (WINAPI *pNtGdiStartDoc)( HDC hdc, const DOCINFOW *doc, BOOL *banding, INT job );
-    INT      (WINAPI *pNtGdiStartPage)( HDC hdc );
     BOOL     (WINAPI *pNtGdiStretchBlt)( HDC hdc, INT x_dst, INT y_dst, INT width_dst, INT height_dst,
                                          HDC hdc_src, INT x_src, INT y_src, INT width_src, INT height_src,
                                          DWORD rop, COLORREF bk_color );
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index 50bfec72e3d8..e8d6ab55dfe5 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -24,12 +24,6 @@
 
 static const struct unix_funcs *unix_funcs;
 
-INT WINAPI NtGdiAbortDoc( HDC hdc )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiAbortDoc( hdc );
-}
-
 BOOL WINAPI NtGdiAbortPath( HDC hdc )
 {
     if (!unix_funcs) return FALSE;
@@ -112,24 +106,12 @@ LONG WINAPI NtGdiDoPalette( HGDIOBJ handle, WORD start, WORD count, void *entrie
     return unix_funcs->pNtGdiDoPalette( handle, start, count, entries, func, inbound );
 }
 
-INT WINAPI NtGdiEndDoc( HDC hdc )
-{
-    if (!unix_funcs) return SP_ERROR;
-    return unix_funcs->pNtGdiEndDoc( hdc );
-}
-
 BOOL WINAPI NtGdiEndPath( HDC hdc )
 {
     if (!unix_funcs) return FALSE;
     return unix_funcs->pNtGdiEndPath( hdc );
 }
 
-INT WINAPI NtGdiEndPage( HDC hdc )
-{
-    if (!unix_funcs) return SP_ERROR;
-    return unix_funcs->pNtGdiEndPage( hdc );
-}
-
 BOOL WINAPI NtUserEndPaint( HWND hwnd, const PAINTSTRUCT *ps )
 {
     if (!unix_funcs) return FALSE;
@@ -484,18 +466,6 @@ UINT WINAPI NtGdiSetSystemPaletteUse( HDC hdc, UINT use )
     return unix_funcs->pNtGdiSetSystemPaletteUse( hdc, use );
 }
 
-INT WINAPI NtGdiStartDoc( HDC hdc, const DOCINFOW *doc, BOOL *banding, INT job )
-{
-    if (!unix_funcs) return SP_ERROR;
-    return unix_funcs->pNtGdiStartDoc( hdc, doc, banding, job );
-}
-
-INT WINAPI NtGdiStartPage( HDC hdc )
-{
-    if (!unix_funcs) return SP_ERROR;
-    return unix_funcs->pNtGdiStartPage( hdc );
-}
-
 BOOL WINAPI NtGdiStretchBlt( HDC hdc, INT x_dst, INT y_dst, INT width_dst, INT height_dst,
                              HDC hdc_src, INT x_src, INT y_src, INT width_src, INT height_src,
                              DWORD rop, COLORREF bk_color )
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index 2b7644b318eb..e40e3557c9b2 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -56,6 +56,13 @@ static DWORD gdi_handle_type( HGDIOBJ obj )
     return handle & NTGDI_HANDLE_TYPE_MASK;
 }
 
+NTSTATUS WINAPI wow64_NtGdiAbortDoc( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiAbortDoc( hdc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiAddFontMemResourceEx( UINT *args )
 {
     void *ptr = get_ptr( &args );
@@ -357,6 +364,20 @@ NTSTATUS WINAPI wow64_NtGdiEllipse( UINT *args )
     return NtGdiEllipse( hdc, left, top, right, bottom );
 }
 
+NTSTATUS WINAPI wow64_NtGdiEndDoc( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiEndDoc( hdc );
+}
+
+NTSTATUS WINAPI wow64_NtGdiEndPage( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiEndPage( hdc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiEqualRgn( UINT *args )
 {
     HRGN hrgn1 = get_handle( &args );
@@ -956,6 +977,37 @@ NTSTATUS WINAPI wow64_NtGdiSetVirtualResolution( UINT *args )
     return NtGdiSetVirtualResolution( hdc, horz_res, vert_res, horz_size, vert_size );
 }
 
+NTSTATUS WINAPI wow64_NtGdiStartDoc( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    const struct
+    {
+        INT   cbSize;
+        ULONG lpszDocName;
+        ULONG lpszOutput;
+        ULONG lpszDatatype;
+        DWORD fwType;
+    } *doc32 = get_ptr( &args );
+    BOOL *banding = get_ptr( &args );
+    INT job = get_ulong( &args );
+
+    DOCINFOW doc;
+    doc.cbSize = sizeof(doc);
+    doc.lpszDocName = UlongToPtr( doc32->lpszDocName );
+    doc.lpszOutput = UlongToPtr( doc32->lpszOutput );
+    doc.lpszDatatype = UlongToPtr( doc32->lpszDatatype );
+    doc.fwType = doc32->fwType;
+
+    return NtGdiStartDoc( hdc, &doc, banding, job );
+}
+
+NTSTATUS WINAPI wow64_NtGdiStartPage( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiStartPage( hdc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiSwapBuffers( UINT *args )
 {
     HDC hdc = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index 1adb756afe47..1b31e6469169 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -22,6 +22,7 @@
 #define __WOW64WIN_SYSCALL_H
 
 #define ALL_WIN32_SYSCALLS \
+    SYSCALL_ENTRY( NtGdiAbortDoc ) \
     SYSCALL_ENTRY( NtGdiAddFontMemResourceEx ) \
     SYSCALL_ENTRY( NtGdiAddFontResourceW ) \
     SYSCALL_ENTRY( NtGdiAngleArc ) \
@@ -48,6 +49,8 @@
     SYSCALL_ENTRY( NtGdiDescribePixelFormat ) \
     SYSCALL_ENTRY( NtGdiDrawStream ) \
     SYSCALL_ENTRY( NtGdiEllipse ) \
+    SYSCALL_ENTRY( NtGdiEndDoc ) \
+    SYSCALL_ENTRY( NtGdiEndPage ) \
     SYSCALL_ENTRY( NtGdiEqualRgn ) \
     SYSCALL_ENTRY( NtGdiExtCreatePen ) \
     SYSCALL_ENTRY( NtGdiExtCreateRegion ) \
@@ -102,6 +105,8 @@
     SYSCALL_ENTRY( NtGdiSetRectRgn ) \
     SYSCALL_ENTRY( NtGdiSetTextJustification ) \
     SYSCALL_ENTRY( NtGdiSetVirtualResolution ) \
+    SYSCALL_ENTRY( NtGdiStartDoc ) \
+    SYSCALL_ENTRY( NtGdiStartPage ) \
     SYSCALL_ENTRY( NtGdiSwapBuffers ) \
     SYSCALL_ENTRY( NtGdiTransformPoints ) \
     SYSCALL_ENTRY( NtUserActivateKeyboardLayout ) \

From e84007e9030869b5b04b81c36961b12c4c73d855 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 15:14:30 +0200
Subject: [PATCH 06/19] win32u: Use syscall interface for more path functions.

---
 dlls/win32u/gdiobj.c         |  9 -----
 dlls/win32u/syscall.c        |  9 +++++
 dlls/win32u/win32u.spec      | 18 +++++-----
 dlls/win32u/win32u_private.h |  9 -----
 dlls/win32u/wrappers.c       | 54 ------------------------------
 dlls/wow64win/gdi.c          | 64 ++++++++++++++++++++++++++++++++++++
 dlls/wow64win/syscall.h      |  9 +++++
 7 files changed, 91 insertions(+), 81 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index 240703e14897..c78b8850e910 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1030,11 +1030,8 @@ BOOL WINAPI NtGdiSetColorAdjustment( HDC hdc, const COLORADJUSTMENT *ca )
 
 static struct unix_funcs unix_funcs =
 {
-    NtGdiAbortPath,
     NtGdiAlphaBlend,
-    NtGdiBeginPath,
     NtGdiBitBlt,
-    NtGdiCloseFigure,
     NtGdiComputeXformCoefficients,
     NtGdiCreateCompatibleBitmap,
     NtGdiCreateCompatibleDC,
@@ -1052,13 +1049,11 @@ static struct unix_funcs unix_funcs =
     NtGdiDdDDISetVidPnSourceOwner,
     NtGdiDeleteObjectApp,
     NtGdiDoPalette,
-    NtGdiEndPath,
     NtGdiEnumFonts,
     NtGdiExcludeClipRect,
     NtGdiExtEscape,
     NtGdiExtTextOutW,
     NtGdiExtSelectClipRgn,
-    NtGdiFillPath,
     NtGdiFontIsLinked,
     NtGdiGetAndSetDCDword,
     NtGdiGetAppClipBox,
@@ -1098,7 +1093,6 @@ static struct unix_funcs unix_funcs =
     NtGdiScaleWindowExtEx,
     NtGdiSelectBitmap,
     NtGdiSelectBrush,
-    NtGdiSelectClipPath,
     NtGdiSelectFont,
     NtGdiSelectPen,
     NtGdiSetBoundsRect,
@@ -1108,12 +1102,9 @@ static struct unix_funcs unix_funcs =
     NtGdiSetSystemPaletteUse,
     NtGdiStretchBlt,
     NtGdiStretchDIBitsInternal,
-    NtGdiStrokeAndFillPath,
-    NtGdiStrokePath,
     NtGdiTransparentBlt,
     NtGdiUnrealizeObject,
     NtGdiUpdateColors,
-    NtGdiWidenPath,
     NtUserDrawCaptionTemp,
     NtUserDrawMenuBarTemp,
     NtUserEndPaint,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 80cfc9f99f26..bbb53cea93a0 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -37,10 +37,13 @@
 static void * const syscalls[] =
 {
     NtGdiAbortDoc,
+    NtGdiAbortPath,
     NtGdiAddFontMemResourceEx,
     NtGdiAddFontResourceW,
     NtGdiAngleArc,
     NtGdiArcInternal,
+    NtGdiBeginPath,
+    NtGdiCloseFigure,
     NtGdiCombineRgn,
     NtGdiCreateBitmap,
     NtGdiCreateClientObj,
@@ -65,11 +68,13 @@ static void * const syscalls[] =
     NtGdiEllipse,
     NtGdiEndDoc,
     NtGdiEndPage,
+    NtGdiEndPath,
     NtGdiEqualRgn,
     NtGdiExtCreatePen,
     NtGdiExtCreateRegion,
     NtGdiExtFloodFill,
     NtGdiExtGetObjectW,
+    NtGdiFillPath,
     NtGdiFillRgn,
     NtGdiFlattenPath,
     NtGdiFlush,
@@ -108,6 +113,7 @@ static void * const syscalls[] =
     NtGdiRemoveFontResourceW,
     NtGdiRoundRect,
     NtGdiSaveDC,
+    NtGdiSelectClipPath,
     NtGdiSetBitmapBits,
     NtGdiSetBitmapDimension,
     NtGdiSetBrushOrg,
@@ -121,8 +127,11 @@ static void * const syscalls[] =
     NtGdiSetVirtualResolution,
     NtGdiStartDoc,
     NtGdiStartPage,
+    NtGdiStrokeAndFillPath,
+    NtGdiStrokePath,
     NtGdiSwapBuffers,
     NtGdiTransformPoints,
+    NtGdiWidenPath,
     NtUserActivateKeyboardLayout,
     NtUserAddClipboardFormatListener,
     NtUserAssociateInputContext,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index d8fe9d3227bc..46f97f794361 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -105,7 +105,7 @@
 @ stub NtFlipObjectSetContent
 @ stub NtFlipObjectSetMaximumBackchannelQueueDepth
 @ stdcall -syscall NtGdiAbortDoc(long)
-@ stdcall NtGdiAbortPath(long)
+@ stdcall -syscall NtGdiAbortPath(long)
 @ stub NtGdiAddEmbFontToDC
 @ stdcall -syscall NtGdiAddFontMemResourceEx(ptr long ptr long ptr)
 @ stdcall -syscall NtGdiAddFontResourceW(wstr long long long long ptr)
@@ -122,7 +122,7 @@
 @ stub NtGdiBRUSHOBJ_pvGetRbrush
 @ stub NtGdiBRUSHOBJ_ulGetBrushColor
 @ stub NtGdiBeginGdiRendering
-@ stdcall NtGdiBeginPath(long)
+@ stdcall -syscall NtGdiBeginPath(long)
 @ stdcall NtGdiBitBlt(long long long long long long long long long long float)
 @ stub NtGdiCLIPOBJ_bEnum
 @ stub NtGdiCLIPOBJ_cEnumStart
@@ -132,7 +132,7 @@
 @ stub NtGdiCheckBitmapBits
 @ stub NtGdiClearBitmapAttributes
 @ stub NtGdiClearBrushAttributes
-@ stdcall NtGdiCloseFigure(long)
+@ stdcall -syscall NtGdiCloseFigure(long)
 @ stub NtGdiColorCorrectPalette
 @ stdcall -syscall NtGdiCombineRgn(long long long long)
 @ stub NtGdiCombineTransform
@@ -381,7 +381,7 @@
 @ stdcall -syscall NtGdiEndDoc(long)
 @ stub NtGdiEndGdiRendering
 @ stdcall -syscall NtGdiEndPage(long)
-@ stdcall NtGdiEndPath(long)
+@ stdcall -syscall NtGdiEndPath(long)
 @ stub NtGdiEngAlphaBlend
 @ stub NtGdiEngAssociateSurface
 @ stub NtGdiEngBitBlt
@@ -433,7 +433,7 @@
 @ stub NtGdiFONTOBJ_pvTrueTypeFontFile
 @ stub NtGdiFONTOBJ_pxoGetXform
 @ stub NtGdiFONTOBJ_vGetInfo
-@ stdcall NtGdiFillPath(long)
+@ stdcall -syscall NtGdiFillPath(long)
 @ stdcall -syscall NtGdiFillRgn(long long long)
 @ stdcall -syscall NtGdiFlattenPath(long)
 @ stdcall -syscall NtGdiFlush()
@@ -586,7 +586,7 @@
 @ stdcall NtGdiScaleWindowExtEx(long long long long long ptr)
 @ stdcall NtGdiSelectBitmap(long long)
 @ stdcall NtGdiSelectBrush(long long)
-@ stdcall NtGdiSelectClipPath(long long)
+@ stdcall -syscall NtGdiSelectClipPath(long long)
 @ stdcall NtGdiSelectFont(long long)
 @ stdcall NtGdiSelectPen(long long)
 @ stub NtGdiSetBitmapAttributes
@@ -622,8 +622,8 @@
 @ stdcall -syscall NtGdiStartPage(long)
 @ stdcall NtGdiStretchBlt(long long long long long long long long long long long long)
 @ stdcall NtGdiStretchDIBitsInternal(long long long long long long long long long ptr ptr long long long long long)
-@ stdcall NtGdiStrokeAndFillPath(long)
-@ stdcall NtGdiStrokePath(long)
+@ stdcall -syscall NtGdiStrokeAndFillPath(long)
+@ stdcall -syscall NtGdiStrokePath(long)
 @ stdcall -syscall NtGdiSwapBuffers(long)
 @ stdcall -syscall NtGdiTransformPoints(long ptr ptr long long)
 @ stdcall NtGdiTransparentBlt(long long long long long long long long long long long)
@@ -633,7 +633,7 @@
 @ stdcall NtGdiUnrealizeObject(long)
 @ stdcall NtGdiUpdateColors(long)
 @ stub NtGdiUpdateTransform
-@ stdcall NtGdiWidenPath(long)
+@ stdcall -syscall NtGdiWidenPath(long)
 @ stub NtGdiXFORMOBJ_bApplyXform
 @ stub NtGdiXFORMOBJ_iGetXform
 @ stub NtGdiXLATEOBJ_cGetPalette
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index f6d3164947a9..acb9732dadc4 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -35,14 +35,11 @@
 struct unix_funcs
 {
     /* win32u functions */
-    BOOL     (WINAPI *pNtGdiAbortPath)( HDC hdc );
     BOOL     (WINAPI *pNtGdiAlphaBlend)( HDC hdc_dst, int x_dst, int y_dst, int width_dst, int height_dst,
                                          HDC hdc_src, int x_src, int y_src, int width_src, int height_src,
                                          BLENDFUNCTION blend_function, HANDLE xform );
-    BOOL     (WINAPI *pNtGdiBeginPath)( HDC hdc );
     BOOL     (WINAPI *pNtGdiBitBlt)( HDC hdc_dst, INT x_dst, INT y_dst, INT width, INT height, HDC hdc_src,
                                      INT x_src, INT y_src, DWORD rop, DWORD bk_color, FLONG fl );
-    BOOL     (WINAPI *pNtGdiCloseFigure)( HDC hdc );
     BOOL     (WINAPI *pNtGdiComputeXformCoefficients)( HDC hdc );
     HBITMAP  (WINAPI *pNtGdiCreateCompatibleBitmap)( HDC hdc, INT width, INT height );
     HDC      (WINAPI *pNtGdiCreateCompatibleDC)( HDC hdc );
@@ -64,7 +61,6 @@ struct unix_funcs
     BOOL     (WINAPI *pNtGdiDeleteObjectApp)( HGDIOBJ obj );
     LONG     (WINAPI *pNtGdiDoPalette)( HGDIOBJ handle, WORD start, WORD count, void *entries,
                                         DWORD func, BOOL inbound );
-    BOOL     (WINAPI *pNtGdiEndPath)( HDC hdc );
     BOOL     (WINAPI *pNtGdiEnumFonts)( HDC hdc, ULONG type, ULONG win32_compat, ULONG face_name_len,
                                         const WCHAR *face_name, ULONG charset, ULONG *count, void *buf );
     INT      (WINAPI *pNtGdiExcludeClipRect)( HDC hdc, INT left, INT top, INT right, INT bottom );
@@ -73,7 +69,6 @@ struct unix_funcs
     BOOL     (WINAPI *pNtGdiExtTextOutW)( HDC hdc, INT x, INT y, UINT flags, const RECT *rect,
                                           const WCHAR *str, UINT count, const INT *dx, DWORD cp );
     INT      (WINAPI *pNtGdiExtSelectClipRgn)( HDC hdc, HRGN region, INT mode );
-    BOOL     (WINAPI *pNtGdiFillPath)( HDC hdc );
     BOOL     (WINAPI *pNtGdiFontIsLinked)( HDC hdc );
     BOOL     (WINAPI *pNtGdiGetAndSetDCDword)( HDC hdc, UINT method, DWORD value, DWORD *result );
     INT      (WINAPI *pNtGdiGetAppClipBox)( HDC hdc, RECT *rect );
@@ -129,7 +124,6 @@ struct unix_funcs
                                                INT y_num, INT y_denom, SIZE *size );
     HGDIOBJ  (WINAPI *pNtGdiSelectBitmap)( HDC hdc, HGDIOBJ handle );
     HGDIOBJ  (WINAPI *pNtGdiSelectBrush)( HDC hdc, HGDIOBJ handle );
-    BOOL     (WINAPI *pNtGdiSelectClipPath)( HDC hdc, INT mode );
     HGDIOBJ  (WINAPI *pNtGdiSelectFont)( HDC hdc, HGDIOBJ handle );
     HGDIOBJ  (WINAPI *pNtGdiSelectPen)( HDC hdc, HGDIOBJ handle );
     UINT     (WINAPI *pNtGdiSetBoundsRect)( HDC hdc, const RECT *rect, UINT flags );
@@ -149,14 +143,11 @@ struct unix_funcs
                                                     INT height_src, const void *bits, const BITMAPINFO *bmi,
                                                     UINT coloruse, DWORD rop, UINT max_info, UINT max_bits,
                                                     HANDLE xform );
-    BOOL     (WINAPI *pNtGdiStrokeAndFillPath)( HDC hdc );
-    BOOL     (WINAPI *pNtGdiStrokePath)( HDC hdc );
     BOOL     (WINAPI *pNtGdiTransparentBlt)( HDC hdc, int x_dst, int y_dst, int width_dst, int height_dst,
                                              HDC hdc_src, int x_src, int y_src, int width_src, int height_src,
                                              UINT color );
     BOOL     (WINAPI *pNtGdiUnrealizeObject)( HGDIOBJ obj );
     BOOL     (WINAPI *pNtGdiUpdateColors)( HDC hdc );
-    BOOL     (WINAPI *pNtGdiWidenPath)( HDC hdc );
     BOOL     (WINAPI *pNtUserDrawCaptionTemp)( HWND hwnd, HDC hdc, const RECT *rect, HFONT font,
                                                HICON icon, const WCHAR *str, UINT flags );
     DWORD    (WINAPI *pNtUserDrawMenuBarTemp)( HWND hwnd, HDC hdc, RECT *rect, HMENU handle, HFONT font );
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index e8d6ab55dfe5..9ad14424c2ac 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -24,12 +24,6 @@
 
 static const struct unix_funcs *unix_funcs;
 
-BOOL WINAPI NtGdiAbortPath( HDC hdc )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiAbortPath( hdc );
-}
-
 BOOL WINAPI NtGdiAlphaBlend( HDC hdc_dst, int x_dst, int y_dst, int width_dst, int height_dst,
                              HDC hdc_src, int x_src, int y_src, int width_src, int height_src,
                              BLENDFUNCTION blend_function, HANDLE xform )
@@ -39,12 +33,6 @@ BOOL WINAPI NtGdiAlphaBlend( HDC hdc_dst, int x_dst, int y_dst, int width_dst, i
                                          x_src, y_src, width_src, height_src, blend_function, xform );
 }
 
-BOOL WINAPI NtGdiBeginPath( HDC hdc )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiBeginPath( hdc );
-}
-
 BOOL WINAPI NtGdiBitBlt( HDC hdc_dst, INT x_dst, INT y_dst, INT width, INT height, HDC hdc_src,
                          INT x_src, INT y_src, DWORD rop, DWORD bk_color, FLONG fl )
 {
@@ -53,12 +41,6 @@ BOOL WINAPI NtGdiBitBlt( HDC hdc_dst, INT x_dst, INT y_dst, INT width, INT heigh
                                      rop, bk_color, fl );
 }
 
-BOOL WINAPI NtGdiCloseFigure( HDC hdc )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiCloseFigure( hdc );
-}
-
 BOOL WINAPI NtGdiComputeXformCoefficients( HDC hdc )
 {
     if (!unix_funcs) return FALSE;
@@ -106,12 +88,6 @@ LONG WINAPI NtGdiDoPalette( HGDIOBJ handle, WORD start, WORD count, void *entrie
     return unix_funcs->pNtGdiDoPalette( handle, start, count, entries, func, inbound );
 }
 
-BOOL WINAPI NtGdiEndPath( HDC hdc )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiEndPath( hdc );
-}
-
 BOOL WINAPI NtUserEndPaint( HWND hwnd, const PAINTSTRUCT *ps )
 {
     if (!unix_funcs) return FALSE;
@@ -153,12 +129,6 @@ INT WINAPI NtGdiExtSelectClipRgn( HDC hdc, HRGN region, INT mode )
     return unix_funcs->pNtGdiExtSelectClipRgn( hdc, region, mode );
 }
 
-BOOL WINAPI NtGdiFillPath( HDC hdc )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiFillPath( hdc );
-}
-
 BOOL WINAPI NtGdiFontIsLinked( HDC hdc )
 {
     if (!unix_funcs) return FALSE;
@@ -412,12 +382,6 @@ HGDIOBJ WINAPI NtGdiSelectBrush( HDC hdc, HGDIOBJ handle )
     return unix_funcs->pNtGdiSelectBrush( hdc, handle );
 }
 
-BOOL WINAPI NtGdiSelectClipPath( HDC hdc, INT mode )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiSelectClipPath( hdc, mode );
-}
-
 HGDIOBJ WINAPI NtGdiSelectFont( HDC hdc, HGDIOBJ handle )
 {
     if (!unix_funcs) return 0;
@@ -487,18 +451,6 @@ INT WINAPI NtGdiStretchDIBitsInternal( HDC hdc, INT x_dst, INT y_dst, INT width_
                                                     coloruse, rop, max_info, max_bits, xform );
 }
 
-BOOL WINAPI NtGdiStrokeAndFillPath( HDC hdc )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiStrokeAndFillPath( hdc );
-}
-
-BOOL WINAPI NtGdiStrokePath( HDC hdc )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiStrokePath( hdc );
-}
-
 BOOL WINAPI NtGdiTransparentBlt( HDC hdc, int x_dst, int y_dst, int width_dst, int height_dst,
                                  HDC hdc_src, int x_src, int y_src, int width_src, int height_src,
                                  UINT color )
@@ -520,12 +472,6 @@ BOOL WINAPI NtGdiUpdateColors( HDC hdc )
     return unix_funcs->pNtGdiUpdateColors( hdc );
 }
 
-BOOL WINAPI NtGdiWidenPath( HDC hdc )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiWidenPath( hdc );
-}
-
 NTSTATUS WINAPI NtGdiDdDDICheckVidPnExclusiveOwnership( const D3DKMT_CHECKVIDPNEXCLUSIVEOWNERSHIP *desc )
 {
     if (!unix_funcs) return STATUS_NOT_SUPPORTED;
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index e40e3557c9b2..4464cd576f7f 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -63,6 +63,13 @@ NTSTATUS WINAPI wow64_NtGdiAbortDoc( UINT *args )
     return NtGdiAbortDoc( hdc );
 }
 
+NTSTATUS WINAPI wow64_NtGdiAbortPath( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiAbortPath( hdc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiAddFontMemResourceEx( UINT *args )
 {
     void *ptr = get_ptr( &args );
@@ -114,6 +121,20 @@ NTSTATUS WINAPI wow64_NtGdiArcInternal( UINT *args )
     return NtGdiArcInternal( type, hdc, left, top, right, bottom, xstart, ystart, xend, yend );
 }
 
+NTSTATUS WINAPI wow64_NtGdiBeginPath( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiBeginPath( hdc );
+}
+
+NTSTATUS WINAPI wow64_NtGdiCloseFigure( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiCloseFigure( hdc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiCombineRgn( UINT *args )
 {
     HRGN dest = get_handle( &args );
@@ -378,6 +399,13 @@ NTSTATUS WINAPI wow64_NtGdiEndPage( UINT *args )
     return NtGdiEndPage( hdc );
 }
 
+NTSTATUS WINAPI wow64_NtGdiEndPath( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiEndPath( hdc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiEqualRgn( UINT *args )
 {
     HRGN hrgn1 = get_handle( &args );
@@ -518,6 +546,13 @@ NTSTATUS WINAPI wow64_NtGdiExtGetObjectW( UINT *args )
     }
 }
 
+NTSTATUS WINAPI wow64_NtGdiFillPath( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiFillPath( hdc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiFillRgn( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -875,6 +910,14 @@ NTSTATUS WINAPI wow64_NtGdiSaveDC( UINT *args )
     return NtGdiSaveDC( hdc );
 }
 
+NTSTATUS WINAPI wow64_NtGdiSelectClipPath( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT mode = get_ulong( &args );
+
+    return NtGdiSelectClipPath( hdc, mode );
+}
+
 NTSTATUS WINAPI wow64_NtGdiSetBitmapBits( UINT *args )
 {
     HBITMAP hbitmap = get_handle( &args );
@@ -1008,6 +1051,20 @@ NTSTATUS WINAPI wow64_NtGdiStartPage( UINT *args )
     return NtGdiStartPage( hdc );
 }
 
+NTSTATUS WINAPI wow64_NtGdiStrokeAndFillPath( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiStrokeAndFillPath( hdc );
+}
+
+NTSTATUS WINAPI wow64_NtGdiStrokePath( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiStrokePath( hdc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiSwapBuffers( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1025,3 +1082,10 @@ NTSTATUS WINAPI wow64_NtGdiTransformPoints( UINT *args )
 
     return NtGdiTransformPoints( hdc, points_in, points_out, count, mode );
 }
+
+NTSTATUS WINAPI wow64_NtGdiWidenPath( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiWidenPath( hdc );
+}
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index 1b31e6469169..1a1f635af65c 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -23,10 +23,13 @@
 
 #define ALL_WIN32_SYSCALLS \
     SYSCALL_ENTRY( NtGdiAbortDoc ) \
+    SYSCALL_ENTRY( NtGdiAbortPath ) \
     SYSCALL_ENTRY( NtGdiAddFontMemResourceEx ) \
     SYSCALL_ENTRY( NtGdiAddFontResourceW ) \
     SYSCALL_ENTRY( NtGdiAngleArc ) \
     SYSCALL_ENTRY( NtGdiArcInternal ) \
+    SYSCALL_ENTRY( NtGdiBeginPath ) \
+    SYSCALL_ENTRY( NtGdiCloseFigure ) \
     SYSCALL_ENTRY( NtGdiCombineRgn ) \
     SYSCALL_ENTRY( NtGdiCreateBitmap ) \
     SYSCALL_ENTRY( NtGdiCreateClientObj ) \
@@ -51,11 +54,13 @@
     SYSCALL_ENTRY( NtGdiEllipse ) \
     SYSCALL_ENTRY( NtGdiEndDoc ) \
     SYSCALL_ENTRY( NtGdiEndPage ) \
+    SYSCALL_ENTRY( NtGdiEndPath ) \
     SYSCALL_ENTRY( NtGdiEqualRgn ) \
     SYSCALL_ENTRY( NtGdiExtCreatePen ) \
     SYSCALL_ENTRY( NtGdiExtCreateRegion ) \
     SYSCALL_ENTRY( NtGdiExtFloodFill ) \
     SYSCALL_ENTRY( NtGdiExtGetObjectW ) \
+    SYSCALL_ENTRY( NtGdiFillPath ) \
     SYSCALL_ENTRY( NtGdiFillRgn ) \
     SYSCALL_ENTRY( NtGdiFlattenPath ) \
     SYSCALL_ENTRY( NtGdiFlush ) \
@@ -94,6 +99,7 @@
     SYSCALL_ENTRY( NtGdiRemoveFontResourceW ) \
     SYSCALL_ENTRY( NtGdiRoundRect ) \
     SYSCALL_ENTRY( NtGdiSaveDC ) \
+    SYSCALL_ENTRY( NtGdiSelectClipPath ) \
     SYSCALL_ENTRY( NtGdiSetBitmapBits ) \
     SYSCALL_ENTRY( NtGdiSetBitmapDimension ) \
     SYSCALL_ENTRY( NtGdiSetBrushOrg ) \
@@ -107,8 +113,11 @@
     SYSCALL_ENTRY( NtGdiSetVirtualResolution ) \
     SYSCALL_ENTRY( NtGdiStartDoc ) \
     SYSCALL_ENTRY( NtGdiStartPage ) \
+    SYSCALL_ENTRY( NtGdiStrokeAndFillPath ) \
+    SYSCALL_ENTRY( NtGdiStrokePath ) \
     SYSCALL_ENTRY( NtGdiSwapBuffers ) \
     SYSCALL_ENTRY( NtGdiTransformPoints ) \
+    SYSCALL_ENTRY( NtGdiWidenPath ) \
     SYSCALL_ENTRY( NtUserActivateKeyboardLayout ) \
     SYSCALL_ENTRY( NtUserAddClipboardFormatListener ) \
     SYSCALL_ENTRY( NtUserAssociateInputContext ) \

From 23be90e4791a690bab8343017c5d85b851e6e6f9 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 15:34:03 +0200
Subject: [PATCH 07/19] win32u: Use syscall interface for bitblt functions.

FIXME: better BLENDFUNCTION handling
---
 dlls/win32u/gdiobj.c         |  11 ---
 dlls/win32u/syscall.c        |  11 +++
 dlls/win32u/win32u.spec      |  22 ++---
 dlls/win32u/win32u_private.h |  24 -----
 dlls/win32u/wrappers.c       |  85 ------------------
 dlls/wow64win/gdi.c          | 164 +++++++++++++++++++++++++++++++++++
 dlls/wow64win/syscall.h      |  11 +++
 7 files changed, 197 insertions(+), 131 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index c78b8850e910..1df4c83ed55c 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1030,9 +1030,6 @@ BOOL WINAPI NtGdiSetColorAdjustment( HDC hdc, const COLORADJUSTMENT *ca )
 
 static struct unix_funcs unix_funcs =
 {
-    NtGdiAlphaBlend,
-    NtGdiBitBlt,
-    NtGdiComputeXformCoefficients,
     NtGdiCreateCompatibleBitmap,
     NtGdiCreateCompatibleDC,
     NtGdiCreateDIBitmapInternal,
@@ -1079,18 +1076,12 @@ static struct unix_funcs unix_funcs =
     NtGdiGetTextFaceW,
     NtGdiGetTextMetricsW,
     NtGdiIntersectClipRect,
-    NtGdiMaskBlt,
-    NtGdiModifyWorldTransform,
     NtGdiOffsetClipRgn,
-    NtGdiPatBlt,
-    NtGdiPlgBlt,
     NtGdiPtVisible,
     NtGdiRectVisible,
     NtGdiResetDC,
     NtGdiResizePalette,
     NtGdiRestoreDC,
-    NtGdiScaleViewportExtEx,
-    NtGdiScaleWindowExtEx,
     NtGdiSelectBitmap,
     NtGdiSelectBrush,
     NtGdiSelectFont,
@@ -1100,9 +1091,7 @@ static struct unix_funcs unix_funcs =
     NtGdiSetDeviceGammaRamp,
     NtGdiSetLayout,
     NtGdiSetSystemPaletteUse,
-    NtGdiStretchBlt,
     NtGdiStretchDIBitsInternal,
-    NtGdiTransparentBlt,
     NtGdiUnrealizeObject,
     NtGdiUpdateColors,
     NtUserDrawCaptionTemp,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index bbb53cea93a0..7d69fcf92143 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -40,11 +40,14 @@ static void * const syscalls[] =
     NtGdiAbortPath,
     NtGdiAddFontMemResourceEx,
     NtGdiAddFontResourceW,
+    NtGdiAlphaBlend,
     NtGdiAngleArc,
     NtGdiArcInternal,
     NtGdiBeginPath,
+    NtGdiBitBlt,
     NtGdiCloseFigure,
     NtGdiCombineRgn,
+    NtGdiComputeXformCoefficients,
     NtGdiCreateBitmap,
     NtGdiCreateClientObj,
     NtGdiCreateDIBBrush,
@@ -100,10 +103,14 @@ static void * const syscalls[] =
     NtGdiInitSpool,
     NtGdiInvertRgn,
     NtGdiLineTo,
+    NtGdiMaskBlt,
+    NtGdiModifyWorldTransform,
     NtGdiMoveTo,
     NtGdiOffsetRgn,
     NtGdiOpenDCW,
+    NtGdiPatBlt,
     NtGdiPathToRegion,
+    NtGdiPlgBlt,
     NtGdiPolyDraw,
     NtGdiPolyPolyDraw,
     NtGdiPtInRegion,
@@ -113,6 +120,8 @@ static void * const syscalls[] =
     NtGdiRemoveFontResourceW,
     NtGdiRoundRect,
     NtGdiSaveDC,
+    NtGdiScaleViewportExtEx,
+    NtGdiScaleWindowExtEx,
     NtGdiSelectClipPath,
     NtGdiSetBitmapBits,
     NtGdiSetBitmapDimension,
@@ -127,10 +136,12 @@ static void * const syscalls[] =
     NtGdiSetVirtualResolution,
     NtGdiStartDoc,
     NtGdiStartPage,
+    NtGdiStretchBlt,
     NtGdiStrokeAndFillPath,
     NtGdiStrokePath,
     NtGdiSwapBuffers,
     NtGdiTransformPoints,
+    NtGdiTransparentBlt,
     NtGdiWidenPath,
     NtUserActivateKeyboardLayout,
     NtUserAddClipboardFormatListener,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index 46f97f794361..60a21b2880ff 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -112,7 +112,7 @@
 @ stub NtGdiAddInitialFonts
 @ stub NtGdiAddRemoteFontToDC
 @ stub NtGdiAddRemoteMMInstanceToDC
-@ stdcall NtGdiAlphaBlend(long long long long long long long long long long long ptr)
+@ stdcall -syscall NtGdiAlphaBlend(long long long long long long long long long long long ptr)
 @ stdcall -syscall NtGdiAngleArc(long long long long float float)
 @ stub NtGdiAnyLinkedFonts
 @ stdcall -syscall NtGdiArcInternal(long long long long long long long long long long)
@@ -123,7 +123,7 @@
 @ stub NtGdiBRUSHOBJ_ulGetBrushColor
 @ stub NtGdiBeginGdiRendering
 @ stdcall -syscall NtGdiBeginPath(long)
-@ stdcall NtGdiBitBlt(long long long long long long long long long long float)
+@ stdcall -syscall NtGdiBitBlt(long long long long long long long long long long float)
 @ stub NtGdiCLIPOBJ_bEnum
 @ stub NtGdiCLIPOBJ_cEnumStart
 @ stub NtGdiCLIPOBJ_ppoGetPath
@@ -136,7 +136,7 @@
 @ stub NtGdiColorCorrectPalette
 @ stdcall -syscall NtGdiCombineRgn(long long long long)
 @ stub NtGdiCombineTransform
-@ stdcall NtGdiComputeXformCoefficients(long)
+@ stdcall -syscall NtGdiComputeXformCoefficients(long)
 @ stub NtGdiConfigureOPMProtectedOutput
 @ stub NtGdiConvertMetafileRect
 @ stdcall -syscall NtGdiCreateBitmap(long long long long ptr)
@@ -540,9 +540,9 @@
 @ stub NtGdiMakeInfoDC
 @ stub NtGdiMakeObjectUnXferable
 @ stub NtGdiMakeObjectXferable
-@ stdcall NtGdiMaskBlt(long long long long long long long long long long long long long)
+@ stdcall -syscall NtGdiMaskBlt(long long long long long long long long long long long long long)
 @ stub NtGdiMirrorWindowOrg
-@ stdcall NtGdiModifyWorldTransform(long ptr long)
+@ stdcall -syscall NtGdiModifyWorldTransform(long ptr long)
 @ stub NtGdiMonoBitmap
 @ stdcall -syscall NtGdiMoveTo(long long long ptr)
 @ stdcall NtGdiOffsetClipRgn(long long long)
@@ -553,9 +553,9 @@
 @ stub NtGdiPATHOBJ_vEnumStart
 @ stub NtGdiPATHOBJ_vEnumStartClipLines
 @ stub NtGdiPATHOBJ_vGetBounds
-@ stdcall NtGdiPatBlt(long long long long long long)
+@ stdcall -syscall NtGdiPatBlt(long long long long long long)
 @ stdcall -syscall NtGdiPathToRegion(long)
-@ stdcall NtGdiPlgBlt(long ptr long long long long long long long long long)
+@ stdcall -syscall NtGdiPlgBlt(long ptr long long long long long long long long long)
 @ stdcall -syscall NtGdiPolyDraw(long ptr ptr long)
 @ stub NtGdiPolyPatBlt
 @ stdcall -syscall NtGdiPolyPolyDraw(long ptr ptr long long)
@@ -582,8 +582,8 @@
 @ stdcall -syscall NtGdiSaveDC(long)
 @ stub NtGdiScaleRgn
 @ stub NtGdiScaleValues
-@ stdcall NtGdiScaleViewportExtEx(long long long long long ptr)
-@ stdcall NtGdiScaleWindowExtEx(long long long long long ptr)
+@ stdcall -syscall NtGdiScaleViewportExtEx(long long long long long ptr)
+@ stdcall -syscall NtGdiScaleWindowExtEx(long long long long long ptr)
 @ stdcall NtGdiSelectBitmap(long long)
 @ stdcall NtGdiSelectBrush(long long)
 @ stdcall -syscall NtGdiSelectClipPath(long long)
@@ -620,13 +620,13 @@
 @ stdcall -syscall NtGdiSetVirtualResolution(long long long long long)
 @ stdcall -syscall NtGdiStartDoc(long ptr ptr long)
 @ stdcall -syscall NtGdiStartPage(long)
-@ stdcall NtGdiStretchBlt(long long long long long long long long long long long long)
+@ stdcall -syscall NtGdiStretchBlt(long long long long long long long long long long long long)
 @ stdcall NtGdiStretchDIBitsInternal(long long long long long long long long long ptr ptr long long long long long)
 @ stdcall -syscall NtGdiStrokeAndFillPath(long)
 @ stdcall -syscall NtGdiStrokePath(long)
 @ stdcall -syscall NtGdiSwapBuffers(long)
 @ stdcall -syscall NtGdiTransformPoints(long ptr ptr long long)
-@ stdcall NtGdiTransparentBlt(long long long long long long long long long long long)
+@ stdcall -syscall NtGdiTransparentBlt(long long long long long long long long long long long)
 @ stub NtGdiUMPDEngFreeUserMem
 @ stub NtGdiUnloadPrinterDriver
 @ stub NtGdiUnmapMemFont
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index acb9732dadc4..b3b070e5f2be 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -35,12 +35,6 @@
 struct unix_funcs
 {
     /* win32u functions */
-    BOOL     (WINAPI *pNtGdiAlphaBlend)( HDC hdc_dst, int x_dst, int y_dst, int width_dst, int height_dst,
-                                         HDC hdc_src, int x_src, int y_src, int width_src, int height_src,
-                                         BLENDFUNCTION blend_function, HANDLE xform );
-    BOOL     (WINAPI *pNtGdiBitBlt)( HDC hdc_dst, INT x_dst, INT y_dst, INT width, INT height, HDC hdc_src,
-                                     INT x_src, INT y_src, DWORD rop, DWORD bk_color, FLONG fl );
-    BOOL     (WINAPI *pNtGdiComputeXformCoefficients)( HDC hdc );
     HBITMAP  (WINAPI *pNtGdiCreateCompatibleBitmap)( HDC hdc, INT width, INT height );
     HDC      (WINAPI *pNtGdiCreateCompatibleDC)( HDC hdc );
     HBITMAP  (WINAPI *pNtGdiCreateDIBitmapInternal)( HDC hdc, INT width, INT height, DWORD init,
@@ -103,25 +97,13 @@ struct unix_funcs
     INT      (WINAPI *pNtGdiGetTextFaceW)( HDC hdc, INT count, WCHAR *name, BOOL alias_name );
     BOOL     (WINAPI *pNtGdiGetTextMetricsW)( HDC hdc, TEXTMETRICW *metrics, ULONG flags );
     INT      (WINAPI *pNtGdiIntersectClipRect)( HDC hdc, INT left, INT top, INT right, INT bottom );
-    BOOL     (WINAPI *pNtGdiMaskBlt)( HDC hdc, INT x_dst, INT y_dst, INT width_dst, INT height_dst,
-                                      HDC hdc_src, INT x_src, INT y_src, HBITMAP mask,
-                                      INT x_mask, INT y_mask, DWORD rop, DWORD bk_color );
-    BOOL     (WINAPI *pNtGdiModifyWorldTransform)( HDC hdc, const XFORM *xform, DWORD mode );
     INT      (WINAPI *pNtGdiOffsetClipRgn)( HDC hdc, INT x, INT y );
-    BOOL     (WINAPI *pNtGdiPatBlt)( HDC hdc, INT left, INT top, INT width, INT height, DWORD rop );
-    BOOL     (WINAPI *pNtGdiPlgBlt)( HDC hdc, const POINT *point, HDC hdc_src, INT x_src, INT y_src,
-                                     INT width, INT height, HBITMAP mask, INT x_mask, INT y_mask,
-                                     DWORD bk_color );
     BOOL     (WINAPI *pNtGdiPtVisible)( HDC hdc, INT x, INT y );
     BOOL     (WINAPI *pNtGdiRectVisible)( HDC hdc, const RECT *rect );
     BOOL     (WINAPI *pNtGdiResetDC)( HDC hdc, const DEVMODEW *devmode, BOOL *banding,
                                       DRIVER_INFO_2W *driver_info, void *dev );
     BOOL     (WINAPI *pNtGdiResizePalette)( HPALETTE palette, UINT count );
     BOOL     (WINAPI *pNtGdiRestoreDC)( HDC hdc, INT level );
-    BOOL     (WINAPI *pNtGdiScaleViewportExtEx)( HDC hdc, INT x_num, INT x_denom,
-                                                 INT y_num, INT y_denom, SIZE *size );
-    BOOL     (WINAPI *pNtGdiScaleWindowExtEx)( HDC hdc, INT x_num, INT x_denom,
-                                               INT y_num, INT y_denom, SIZE *size );
     HGDIOBJ  (WINAPI *pNtGdiSelectBitmap)( HDC hdc, HGDIOBJ handle );
     HGDIOBJ  (WINAPI *pNtGdiSelectBrush)( HDC hdc, HGDIOBJ handle );
     HGDIOBJ  (WINAPI *pNtGdiSelectFont)( HDC hdc, HGDIOBJ handle );
@@ -135,17 +117,11 @@ struct unix_funcs
     BOOL     (WINAPI *pNtGdiSetDeviceGammaRamp)( HDC hdc, void *ptr );
     DWORD    (WINAPI *pNtGdiSetLayout)( HDC hdc, LONG wox, DWORD layout );
     UINT     (WINAPI *pNtGdiSetSystemPaletteUse)( HDC hdc, UINT use );
-    BOOL     (WINAPI *pNtGdiStretchBlt)( HDC hdc, INT x_dst, INT y_dst, INT width_dst, INT height_dst,
-                                         HDC hdc_src, INT x_src, INT y_src, INT width_src, INT height_src,
-                                         DWORD rop, COLORREF bk_color );
     INT      (WINAPI *pNtGdiStretchDIBitsInternal)( HDC hdc, INT x_dst, INT y_dst, INT width_dst,
                                                     INT height_dst, INT x_src, INT y_src, INT width_src,
                                                     INT height_src, const void *bits, const BITMAPINFO *bmi,
                                                     UINT coloruse, DWORD rop, UINT max_info, UINT max_bits,
                                                     HANDLE xform );
-    BOOL     (WINAPI *pNtGdiTransparentBlt)( HDC hdc, int x_dst, int y_dst, int width_dst, int height_dst,
-                                             HDC hdc_src, int x_src, int y_src, int width_src, int height_src,
-                                             UINT color );
     BOOL     (WINAPI *pNtGdiUnrealizeObject)( HGDIOBJ obj );
     BOOL     (WINAPI *pNtGdiUpdateColors)( HDC hdc );
     BOOL     (WINAPI *pNtUserDrawCaptionTemp)( HWND hwnd, HDC hdc, const RECT *rect, HFONT font,
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index 9ad14424c2ac..4cd756fd5756 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -24,29 +24,6 @@
 
 static const struct unix_funcs *unix_funcs;
 
-BOOL WINAPI NtGdiAlphaBlend( HDC hdc_dst, int x_dst, int y_dst, int width_dst, int height_dst,
-                             HDC hdc_src, int x_src, int y_src, int width_src, int height_src,
-                             BLENDFUNCTION blend_function, HANDLE xform )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiAlphaBlend( hdc_dst, x_dst, y_dst, width_dst, height_dst, hdc_src,
-                                         x_src, y_src, width_src, height_src, blend_function, xform );
-}
-
-BOOL WINAPI NtGdiBitBlt( HDC hdc_dst, INT x_dst, INT y_dst, INT width, INT height, HDC hdc_src,
-                         INT x_src, INT y_src, DWORD rop, DWORD bk_color, FLONG fl )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiBitBlt( hdc_dst, x_dst, y_dst, width, height, hdc_src, x_src, y_src,
-                                     rop, bk_color, fl );
-}
-
-BOOL WINAPI NtGdiComputeXformCoefficients( HDC hdc )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiComputeXformCoefficients( hdc );
-}
-
 HBITMAP WINAPI NtGdiCreateCompatibleBitmap( HDC hdc, INT width, INT height )
 {
     if (!unix_funcs) return 0;
@@ -289,42 +266,12 @@ INT WINAPI NtGdiIntersectClipRect( HDC hdc, INT left, INT top, INT right, INT bo
     return unix_funcs->pNtGdiIntersectClipRect( hdc, left, top, right, bottom );
 }
 
-BOOL WINAPI NtGdiMaskBlt( HDC hdc, INT x_dst, INT y_dst, INT width_dst, INT height_dst,
-                          HDC hdc_src, INT x_src, INT y_src, HBITMAP mask,
-                          INT x_mask, INT y_mask, DWORD rop, DWORD bk_color )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiMaskBlt( hdc, x_dst, y_dst, width_dst, height_dst, hdc_src,
-                                      x_src, y_src, mask, x_mask, y_mask, rop, bk_color );
-}
-
-BOOL WINAPI NtGdiModifyWorldTransform( HDC hdc, const XFORM *xform, DWORD mode )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiModifyWorldTransform( hdc, xform, mode );
-}
-
 INT WINAPI NtGdiOffsetClipRgn( HDC hdc, INT x, INT y )
 {
     if (!unix_funcs) return ERROR;
     return unix_funcs->pNtGdiOffsetClipRgn( hdc, x, y );
 }
 
-BOOL WINAPI NtGdiPatBlt( HDC hdc, INT left, INT top, INT width, INT height, DWORD rop )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiPatBlt( hdc, left, top, width, height, rop );
-}
-
-BOOL WINAPI NtGdiPlgBlt( HDC hdc, const POINT *point, HDC hdc_src, INT x_src, INT y_src,
-                         INT width, INT height, HBITMAP mask, INT x_mask, INT y_mask,
-                         DWORD bk_color )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiPlgBlt( hdc, point, hdc_src, x_src, y_src, width, height, mask,
-                                     x_mask, y_mask, bk_color );
-}
-
 BOOL WINAPI NtGdiPtVisible( HDC hdc, INT x, INT y )
 {
     if (!unix_funcs) return FALSE;
@@ -356,20 +303,6 @@ BOOL WINAPI NtGdiRestoreDC( HDC hdc, INT level )
     return unix_funcs->pNtGdiRestoreDC( hdc, level );
 }
 
-BOOL WINAPI NtGdiScaleViewportExtEx( HDC hdc, INT x_num, INT x_denom,
-                                     INT y_num, INT y_denom, SIZE *size )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiScaleViewportExtEx( hdc, x_num, x_denom, y_num, y_denom, size );
-}
-
-BOOL WINAPI NtGdiScaleWindowExtEx( HDC hdc, INT x_num, INT x_denom,
-                                   INT y_num, INT y_denom, SIZE *size )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiScaleWindowExtEx( hdc, x_num, x_denom, y_num, y_denom, size );
-}
-
 HGDIOBJ WINAPI NtGdiSelectBitmap( HDC hdc, HGDIOBJ handle )
 {
     if (!unix_funcs) return 0;
@@ -430,15 +363,6 @@ UINT WINAPI NtGdiSetSystemPaletteUse( HDC hdc, UINT use )
     return unix_funcs->pNtGdiSetSystemPaletteUse( hdc, use );
 }
 
-BOOL WINAPI NtGdiStretchBlt( HDC hdc, INT x_dst, INT y_dst, INT width_dst, INT height_dst,
-                             HDC hdc_src, INT x_src, INT y_src, INT width_src, INT height_src,
-                             DWORD rop, COLORREF bk_color )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiStretchBlt( hdc, x_dst, y_dst, width_dst, height_dst, hdc_src,
-                                         x_src, y_src, width_src, height_src, rop, bk_color );
-}
-
 INT WINAPI NtGdiStretchDIBitsInternal( HDC hdc, INT x_dst, INT y_dst, INT width_dst,
                                        INT height_dst, INT x_src, INT y_src, INT width_src,
                                        INT height_src, const void *bits, const BITMAPINFO *bmi,
@@ -451,15 +375,6 @@ INT WINAPI NtGdiStretchDIBitsInternal( HDC hdc, INT x_dst, INT y_dst, INT width_
                                                     coloruse, rop, max_info, max_bits, xform );
 }
 
-BOOL WINAPI NtGdiTransparentBlt( HDC hdc, int x_dst, int y_dst, int width_dst, int height_dst,
-                                 HDC hdc_src, int x_src, int y_src, int width_src, int height_src,
-                                 UINT color )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiTransparentBlt( hdc, x_dst, y_dst, width_dst, height_dst, hdc_src,
-                                             x_src, y_src, width_src, height_src, color );
-}
-
 BOOL WINAPI NtGdiUnrealizeObject( HGDIOBJ obj )
 {
     if (!unix_funcs) return FALSE;
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index 4464cd576f7f..22dbc1ad7905 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -93,6 +93,25 @@ NTSTATUS WINAPI wow64_NtGdiAddFontResourceW( UINT *args )
     return NtGdiAddFontResourceW( str, size, files, flags, tid, dv );
 }
 
+NTSTATUS WINAPI wow64_NtGdiAlphaBlend( UINT *args )
+{
+    HDC hdc_dst = get_handle( &args );
+    int x_dst = get_ulong( &args );
+    int y_dst = get_ulong( &args );
+    int width_dst = get_ulong( &args );
+    int height_dst = get_ulong( &args );
+    HDC hdc_src = get_handle( &args );
+    int x_src = get_ulong( &args );
+    int y_src = get_ulong( &args );
+    int width_src = get_ulong( &args );
+    int height_src = get_ulong( &args );
+    BLENDFUNCTION blend_function = *(*(BLENDFUNCTION **)&args)++;
+    HANDLE xform = get_handle( &args );
+
+    return NtGdiAlphaBlend( hdc_dst, x_dst, y_dst, width_dst, height_dst, hdc_src,
+                            x_src, y_src, width_src, height_src, blend_function, xform );
+}
+
 NTSTATUS WINAPI wow64_NtGdiAngleArc( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -128,6 +147,24 @@ NTSTATUS WINAPI wow64_NtGdiBeginPath( UINT *args )
     return NtGdiBeginPath( hdc );
 }
 
+NTSTATUS WINAPI wow64_NtGdiBitBlt( UINT *args )
+{
+    HDC hdc_dst = get_handle( &args );
+    INT x_dst = get_ulong( &args );
+    INT y_dst = get_ulong( &args );
+    INT width = get_ulong( &args );
+    INT height = get_ulong( &args );
+    HDC hdc_src = get_handle( &args );
+    INT x_src = get_ulong( &args );
+    INT y_src = get_ulong( &args );
+    DWORD rop = get_ulong( &args );
+    DWORD bk_color = get_ulong( &args );
+    FLONG fl = get_float( &args );
+
+    return NtGdiBitBlt( hdc_dst, x_dst, y_dst, width, height, hdc_src,
+                        x_src, y_src, rop, bk_color, fl );
+}
+
 NTSTATUS WINAPI wow64_NtGdiCloseFigure( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -145,6 +182,13 @@ NTSTATUS WINAPI wow64_NtGdiCombineRgn( UINT *args )
     return NtGdiCombineRgn( dest, src1, src2, mode );
 }
 
+NTSTATUS WINAPI wow64_NtGdiComputeXformCoefficients( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiComputeXformCoefficients( hdc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiCreateBitmap( UINT *args )
 {
     INT width = get_ulong( &args );
@@ -719,6 +763,35 @@ NTSTATUS WINAPI wow64_NtGdiLineTo( UINT *args )
     return NtGdiLineTo( hdc, x, y );
 }
 
+NTSTATUS WINAPI wow64_NtGdiMaskBlt( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x_dst = get_ulong( &args );
+    INT y_dst = get_ulong( &args );
+    INT width_dst = get_ulong( &args );
+    INT height_dst = get_ulong( &args );
+    HDC hdc_src = get_handle( &args );
+    INT x_src = get_ulong( &args );
+    INT y_src = get_ulong( &args );
+    HBITMAP mask = get_handle( &args );
+    INT x_mask = get_ulong( &args );
+    INT y_mask = get_ulong( &args );
+    DWORD rop = get_ulong( &args );
+    DWORD bk_color = get_ulong( &args );
+
+    return NtGdiMaskBlt( hdc, x_dst, y_dst, width_dst, height_dst, hdc_src,
+                         x_src, y_src, mask, x_mask, y_mask, rop, bk_color );
+}
+
+NTSTATUS WINAPI wow64_NtGdiModifyWorldTransform( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    const XFORM *xform = get_ptr( &args );
+    DWORD mode = get_ulong( &args );
+
+    return NtGdiModifyWorldTransform( hdc, xform, mode );
+}
+
 NTSTATUS WINAPI wow64_NtGdiMoveTo( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -860,6 +933,18 @@ NTSTATUS WINAPI wow64_NtGdiOpenDCW( UINT *args )
     return HandleToUlong( ret );
 }
 
+NTSTATUS WINAPI wow64_NtGdiPatBlt( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT left = get_ulong( &args );
+    INT top = get_ulong( &args );
+    INT width = get_ulong( &args );
+    INT height = get_ulong( &args );
+    DWORD rop = get_ulong( &args );
+
+    return NtGdiPatBlt( hdc, left, top, width, height, rop );
+}
+
 NTSTATUS WINAPI wow64_NtGdiPathToRegion( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -867,6 +952,24 @@ NTSTATUS WINAPI wow64_NtGdiPathToRegion( UINT *args )
     return HandleToUlong( NtGdiPathToRegion( hdc ));
 }
 
+NTSTATUS WINAPI wow64_NtGdiPlgBlt( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    const POINT *point = get_ptr( &args );
+    HDC hdc_src = get_handle( &args );
+    INT x_src = get_ulong( &args );
+    INT y_src = get_ulong( &args );
+    INT width = get_ulong( &args );
+    INT height = get_ulong( &args );
+    HBITMAP mask = get_handle( &args );
+    INT x_mask = get_ulong( &args );
+    INT y_mask = get_ulong( &args );
+    DWORD bk_color = get_ulong( &args );
+
+    return NtGdiPlgBlt( hdc, point, hdc_src, x_src, y_src, width, height,
+                        mask, x_mask, y_mask, bk_color );
+}
+
 NTSTATUS WINAPI wow64_NtGdiPtInRegion( UINT *args )
 {
     HRGN hrgn = get_handle( &args );
@@ -910,6 +1013,30 @@ NTSTATUS WINAPI wow64_NtGdiSaveDC( UINT *args )
     return NtGdiSaveDC( hdc );
 }
 
+NTSTATUS WINAPI wow64_NtGdiScaleViewportExtEx( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x_num = get_ulong( &args );
+    INT x_denom = get_ulong( &args );
+    INT y_num = get_ulong( &args );
+    INT y_denom = get_ulong( &args );
+    SIZE *size = get_ptr( &args );
+
+    return NtGdiScaleViewportExtEx( hdc, x_num, x_denom, y_num, y_denom, size );
+}
+
+NTSTATUS WINAPI wow64_NtGdiScaleWindowExtEx( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x_num = get_ulong( &args );
+    INT x_denom = get_ulong( &args );
+    INT y_num = get_ulong( &args );
+    INT y_denom = get_ulong( &args );
+    SIZE *size = get_ptr( &args );
+
+    return NtGdiScaleWindowExtEx( hdc, x_num, x_denom, y_num, y_denom, size );
+}
+
 NTSTATUS WINAPI wow64_NtGdiSelectClipPath( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1051,6 +1178,25 @@ NTSTATUS WINAPI wow64_NtGdiStartPage( UINT *args )
     return NtGdiStartPage( hdc );
 }
 
+NTSTATUS WINAPI wow64_NtGdiStretchBlt( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x_dst = get_ulong( &args );
+    INT y_dst = get_ulong( &args );
+    INT width_dst = get_ulong( &args );
+    INT height_dst = get_ulong( &args );
+    HDC hdc_src = get_handle( &args );
+    INT x_src = get_ulong( &args );
+    INT y_src = get_ulong( &args );
+    INT width_src = get_ulong( &args );
+    INT height_src = get_ulong( &args );
+    DWORD rop = get_ulong( &args );
+    COLORREF bk_color = get_ulong( &args );
+
+    return NtGdiStretchBlt( hdc, x_dst, y_dst, width_dst, height_dst, hdc_src,
+                            x_src, y_src, width_src, height_src, rop, bk_color );
+}
+
 NTSTATUS WINAPI wow64_NtGdiStrokeAndFillPath( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1072,6 +1218,24 @@ NTSTATUS WINAPI wow64_NtGdiSwapBuffers( UINT *args )
     return NtGdiSwapBuffers( hdc );
 }
 
+NTSTATUS WINAPI wow64_NtGdiTransparentBlt( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    int x_dst = get_ulong( &args );
+    int y_dst = get_ulong( &args );
+    int width_dst = get_ulong( &args );
+    int height_dst = get_ulong( &args );
+    HDC hdc_src = get_handle( &args );
+    int x_src = get_ulong( &args );
+    int y_src = get_ulong( &args );
+    int width_src = get_ulong( &args );
+    int height_src = get_ulong( &args );
+    UINT color = get_ulong( &args );
+
+    return NtGdiTransparentBlt( hdc, x_dst, y_dst, width_dst, height_dst, hdc_src,
+                                x_src, y_src, width_src, height_src, color );
+}
+
 NTSTATUS WINAPI wow64_NtGdiTransformPoints( UINT *args )
 {
     HDC hdc = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index 1a1f635af65c..e38c3956ca41 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -26,11 +26,14 @@
     SYSCALL_ENTRY( NtGdiAbortPath ) \
     SYSCALL_ENTRY( NtGdiAddFontMemResourceEx ) \
     SYSCALL_ENTRY( NtGdiAddFontResourceW ) \
+    SYSCALL_ENTRY( NtGdiAlphaBlend ) \
     SYSCALL_ENTRY( NtGdiAngleArc ) \
     SYSCALL_ENTRY( NtGdiArcInternal ) \
     SYSCALL_ENTRY( NtGdiBeginPath ) \
+    SYSCALL_ENTRY( NtGdiBitBlt ) \
     SYSCALL_ENTRY( NtGdiCloseFigure ) \
     SYSCALL_ENTRY( NtGdiCombineRgn ) \
+    SYSCALL_ENTRY( NtGdiComputeXformCoefficients ) \
     SYSCALL_ENTRY( NtGdiCreateBitmap ) \
     SYSCALL_ENTRY( NtGdiCreateClientObj ) \
     SYSCALL_ENTRY( NtGdiCreateDIBBrush ) \
@@ -86,10 +89,14 @@
     SYSCALL_ENTRY( NtGdiInitSpool ) \
     SYSCALL_ENTRY( NtGdiInvertRgn ) \
     SYSCALL_ENTRY( NtGdiLineTo ) \
+    SYSCALL_ENTRY( NtGdiMaskBlt ) \
+    SYSCALL_ENTRY( NtGdiModifyWorldTransform ) \
     SYSCALL_ENTRY( NtGdiMoveTo ) \
     SYSCALL_ENTRY( NtGdiOffsetRgn ) \
     SYSCALL_ENTRY( NtGdiOpenDCW ) \
+    SYSCALL_ENTRY( NtGdiPatBlt ) \
     SYSCALL_ENTRY( NtGdiPathToRegion ) \
+    SYSCALL_ENTRY( NtGdiPlgBlt ) \
     SYSCALL_ENTRY( NtGdiPolyDraw ) \
     SYSCALL_ENTRY( NtGdiPolyPolyDraw ) \
     SYSCALL_ENTRY( NtGdiPtInRegion ) \
@@ -99,6 +106,8 @@
     SYSCALL_ENTRY( NtGdiRemoveFontResourceW ) \
     SYSCALL_ENTRY( NtGdiRoundRect ) \
     SYSCALL_ENTRY( NtGdiSaveDC ) \
+    SYSCALL_ENTRY( NtGdiScaleViewportExtEx ) \
+    SYSCALL_ENTRY( NtGdiScaleWindowExtEx ) \
     SYSCALL_ENTRY( NtGdiSelectClipPath ) \
     SYSCALL_ENTRY( NtGdiSetBitmapBits ) \
     SYSCALL_ENTRY( NtGdiSetBitmapDimension ) \
@@ -113,10 +122,12 @@
     SYSCALL_ENTRY( NtGdiSetVirtualResolution ) \
     SYSCALL_ENTRY( NtGdiStartDoc ) \
     SYSCALL_ENTRY( NtGdiStartPage ) \
+    SYSCALL_ENTRY( NtGdiStretchBlt ) \
     SYSCALL_ENTRY( NtGdiStrokeAndFillPath ) \
     SYSCALL_ENTRY( NtGdiStrokePath ) \
     SYSCALL_ENTRY( NtGdiSwapBuffers ) \
     SYSCALL_ENTRY( NtGdiTransformPoints ) \
+    SYSCALL_ENTRY( NtGdiTransparentBlt ) \
     SYSCALL_ENTRY( NtGdiWidenPath ) \
     SYSCALL_ENTRY( NtUserActivateKeyboardLayout ) \
     SYSCALL_ENTRY( NtUserAddClipboardFormatListener ) \

From 3435044ab812af873fb7f36c3dfcc97d9648077c Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 15:59:15 +0200
Subject: [PATCH 08/19] win32u: Use syscall interface for more bitmap
 functions.

---
 dlls/win32u/gdiobj.c         |  2 --
 dlls/win32u/syscall.c        |  2 ++
 dlls/win32u/win32u.spec      |  4 ++--
 dlls/win32u/win32u_private.h |  2 --
 dlls/win32u/wrappers.c       | 12 ------------
 dlls/wow64win/gdi.c          | 17 +++++++++++++++++
 dlls/wow64win/syscall.h      |  2 ++
 7 files changed, 23 insertions(+), 18 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index 1df4c83ed55c..93c20f5cac0b 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1030,7 +1030,6 @@ BOOL WINAPI NtGdiSetColorAdjustment( HDC hdc, const COLORADJUSTMENT *ca )
 
 static struct unix_funcs unix_funcs =
 {
-    NtGdiCreateCompatibleBitmap,
     NtGdiCreateCompatibleDC,
     NtGdiCreateDIBitmapInternal,
     NtGdiCreateMetafileDC,
@@ -1082,7 +1081,6 @@ static struct unix_funcs unix_funcs =
     NtGdiResetDC,
     NtGdiResizePalette,
     NtGdiRestoreDC,
-    NtGdiSelectBitmap,
     NtGdiSelectBrush,
     NtGdiSelectFont,
     NtGdiSelectPen,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 7d69fcf92143..82d12b833665 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -50,6 +50,7 @@ static void * const syscalls[] =
     NtGdiComputeXformCoefficients,
     NtGdiCreateBitmap,
     NtGdiCreateClientObj,
+    NtGdiCreateCompatibleBitmap,
     NtGdiCreateDIBBrush,
     NtGdiCreateDIBSection,
     NtGdiCreateEllipticRgn,
@@ -122,6 +123,7 @@ static void * const syscalls[] =
     NtGdiSaveDC,
     NtGdiScaleViewportExtEx,
     NtGdiScaleWindowExtEx,
+    NtGdiSelectBitmap,
     NtGdiSelectClipPath,
     NtGdiSetBitmapBits,
     NtGdiSetBitmapDimension,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index 60a21b2880ff..a943d0627678 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -145,7 +145,7 @@
 @ stdcall -syscall NtGdiCreateClientObj(long)
 @ stub NtGdiCreateColorSpace
 @ stub NtGdiCreateColorTransform
-@ stdcall NtGdiCreateCompatibleBitmap(long long long)
+@ stdcall -syscall NtGdiCreateCompatibleBitmap(long long long)
 @ stdcall NtGdiCreateCompatibleDC(long)
 @ stdcall -syscall NtGdiCreateDIBBrush(ptr long long long long ptr)
 @ stdcall -syscall NtGdiCreateDIBSection(long long long ptr long long long long ptr)
@@ -584,7 +584,7 @@
 @ stub NtGdiScaleValues
 @ stdcall -syscall NtGdiScaleViewportExtEx(long long long long long ptr)
 @ stdcall -syscall NtGdiScaleWindowExtEx(long long long long long ptr)
-@ stdcall NtGdiSelectBitmap(long long)
+@ stdcall -syscall NtGdiSelectBitmap(long long)
 @ stdcall NtGdiSelectBrush(long long)
 @ stdcall -syscall NtGdiSelectClipPath(long long)
 @ stdcall NtGdiSelectFont(long long)
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index b3b070e5f2be..581d4bd4e379 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -35,7 +35,6 @@
 struct unix_funcs
 {
     /* win32u functions */
-    HBITMAP  (WINAPI *pNtGdiCreateCompatibleBitmap)( HDC hdc, INT width, INT height );
     HDC      (WINAPI *pNtGdiCreateCompatibleDC)( HDC hdc );
     HBITMAP  (WINAPI *pNtGdiCreateDIBitmapInternal)( HDC hdc, INT width, INT height, DWORD init,
                                                      const void *bits, const BITMAPINFO *data,
@@ -104,7 +103,6 @@ struct unix_funcs
                                       DRIVER_INFO_2W *driver_info, void *dev );
     BOOL     (WINAPI *pNtGdiResizePalette)( HPALETTE palette, UINT count );
     BOOL     (WINAPI *pNtGdiRestoreDC)( HDC hdc, INT level );
-    HGDIOBJ  (WINAPI *pNtGdiSelectBitmap)( HDC hdc, HGDIOBJ handle );
     HGDIOBJ  (WINAPI *pNtGdiSelectBrush)( HDC hdc, HGDIOBJ handle );
     HGDIOBJ  (WINAPI *pNtGdiSelectFont)( HDC hdc, HGDIOBJ handle );
     HGDIOBJ  (WINAPI *pNtGdiSelectPen)( HDC hdc, HGDIOBJ handle );
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index 4cd756fd5756..4f51dbd2206f 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -24,12 +24,6 @@
 
 static const struct unix_funcs *unix_funcs;
 
-HBITMAP WINAPI NtGdiCreateCompatibleBitmap( HDC hdc, INT width, INT height )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiCreateCompatibleBitmap( hdc, width, height );
-}
-
 HDC WINAPI NtGdiCreateCompatibleDC( HDC hdc )
 {
     if (!unix_funcs) return 0;
@@ -303,12 +297,6 @@ BOOL WINAPI NtGdiRestoreDC( HDC hdc, INT level )
     return unix_funcs->pNtGdiRestoreDC( hdc, level );
 }
 
-HGDIOBJ WINAPI NtGdiSelectBitmap( HDC hdc, HGDIOBJ handle )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiSelectBitmap( hdc, handle );
-}
-
 HGDIOBJ WINAPI NtGdiSelectBrush( HDC hdc, HGDIOBJ handle )
 {
     if (!unix_funcs) return 0;
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index 22dbc1ad7905..a41f7e69b111 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -207,6 +207,15 @@ NTSTATUS WINAPI wow64_NtGdiCreateClientObj( UINT *args )
     return HandleToUlong( NtGdiCreateClientObj( type ));
 }
 
+NTSTATUS WINAPI wow64_NtGdiCreateCompatibleBitmap( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT width = get_ulong( &args );
+    INT height = get_ulong( &args );
+
+    return HandleToUlong( NtGdiCreateCompatibleBitmap( hdc, width, height ));
+}
+
 NTSTATUS WINAPI wow64_NtGdiCreateDIBBrush( UINT *args )
 {
     const void *data = get_ptr( &args );
@@ -1037,6 +1046,14 @@ NTSTATUS WINAPI wow64_NtGdiScaleWindowExtEx( UINT *args )
     return NtGdiScaleWindowExtEx( hdc, x_num, x_denom, y_num, y_denom, size );
 }
 
+NTSTATUS WINAPI wow64_NtGdiSelectBitmap( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HGDIOBJ handle = get_handle( &args );
+
+    return HandleToUlong( NtGdiSelectBitmap( hdc, handle ));
+}
+
 NTSTATUS WINAPI wow64_NtGdiSelectClipPath( UINT *args )
 {
     HDC hdc = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index e38c3956ca41..feec3fe2a79d 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -36,6 +36,7 @@
     SYSCALL_ENTRY( NtGdiComputeXformCoefficients ) \
     SYSCALL_ENTRY( NtGdiCreateBitmap ) \
     SYSCALL_ENTRY( NtGdiCreateClientObj ) \
+    SYSCALL_ENTRY( NtGdiCreateCompatibleBitmap ) \
     SYSCALL_ENTRY( NtGdiCreateDIBBrush ) \
     SYSCALL_ENTRY( NtGdiCreateDIBSection ) \
     SYSCALL_ENTRY( NtGdiCreateEllipticRgn ) \
@@ -108,6 +109,7 @@
     SYSCALL_ENTRY( NtGdiSaveDC ) \
     SYSCALL_ENTRY( NtGdiScaleViewportExtEx ) \
     SYSCALL_ENTRY( NtGdiScaleWindowExtEx ) \
+    SYSCALL_ENTRY( NtGdiSelectBitmap ) \
     SYSCALL_ENTRY( NtGdiSelectClipPath ) \
     SYSCALL_ENTRY( NtGdiSetBitmapBits ) \
     SYSCALL_ENTRY( NtGdiSetBitmapDimension ) \

From a104236705be2491ffa059ff9f092d357025cb74 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 20:02:03 +0200
Subject: [PATCH 09/19] win32u: Use syscall interface for D3DKMT functions.

---
 dlls/win32u/gdiobj.c         |  10 --
 dlls/win32u/syscall.c        |  10 ++
 dlls/win32u/win32u.spec      |  20 ++--
 dlls/win32u/win32u_private.h |  10 --
 dlls/win32u/wrappers.c       |  60 ------------
 dlls/wow64win/gdi.c          | 183 ++++++++++++++++++++++++++++++++++-
 dlls/wow64win/syscall.h      |  10 ++
 7 files changed, 212 insertions(+), 91 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index 93c20f5cac0b..d882f0dd0093 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1033,16 +1033,6 @@ static struct unix_funcs unix_funcs =
     NtGdiCreateCompatibleDC,
     NtGdiCreateDIBitmapInternal,
     NtGdiCreateMetafileDC,
-    NtGdiDdDDICheckVidPnExclusiveOwnership,
-    NtGdiDdDDICloseAdapter,
-    NtGdiDdDDICreateDCFromMemory,
-    NtGdiDdDDIDestroyDCFromMemory,
-    NtGdiDdDDIDestroyDevice,
-    NtGdiDdDDIEscape,
-    NtGdiDdDDIOpenAdapterFromDeviceName,
-    NtGdiDdDDIOpenAdapterFromLuid,
-    NtGdiDdDDIQueryVideoMemoryInfo,
-    NtGdiDdDDISetVidPnSourceOwner,
     NtGdiDeleteObjectApp,
     NtGdiDoPalette,
     NtGdiEnumFonts,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 82d12b833665..467c15ba23d2 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -62,10 +62,20 @@ static void * const syscalls[] =
     NtGdiCreateRectRgn,
     NtGdiCreateRoundRectRgn,
     NtGdiCreateSolidBrush,
+    NtGdiDdDDICheckVidPnExclusiveOwnership,
+    NtGdiDdDDICloseAdapter,
+    NtGdiDdDDICreateDCFromMemory,
     NtGdiDdDDICreateDevice,
+    NtGdiDdDDIDestroyDCFromMemory,
+    NtGdiDdDDIDestroyDevice,
+    NtGdiDdDDIEscape,
+    NtGdiDdDDIOpenAdapterFromDeviceName,
     NtGdiDdDDIOpenAdapterFromHdc,
+    NtGdiDdDDIOpenAdapterFromLuid,
     NtGdiDdDDIQueryStatistics,
+    NtGdiDdDDIQueryVideoMemoryInfo,
     NtGdiDdDDISetQueuedLimit,
+    NtGdiDdDDISetVidPnSourceOwner,
     NtGdiDeleteClientObj,
     NtGdiDescribePixelFormat,
     NtGdiDrawStream,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index a943d0627678..33c0bf197ba3 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -186,14 +186,14 @@
 @ stub NtGdiDdDDICheckMultiPlaneOverlaySupport3
 @ stub NtGdiDdDDICheckOcclusion
 @ stub NtGdiDdDDICheckSharedResourceAccess
-@ stdcall NtGdiDdDDICheckVidPnExclusiveOwnership(ptr)
-@ stdcall NtGdiDdDDICloseAdapter(ptr)
+@ stdcall -syscall NtGdiDdDDICheckVidPnExclusiveOwnership(ptr)
+@ stdcall -syscall NtGdiDdDDICloseAdapter(ptr)
 @ stub NtGdiDdDDIConfigureSharedResource
 @ stub NtGdiDdDDICreateAllocation
 @ stub NtGdiDdDDICreateBundleObject
 @ stub NtGdiDdDDICreateContext
 @ stub NtGdiDdDDICreateContextVirtual
-@ stdcall NtGdiDdDDICreateDCFromMemory(ptr)
+@ stdcall -syscall NtGdiDdDDICreateDCFromMemory(ptr)
 @ stdcall -syscall NtGdiDdDDICreateDevice(ptr)
 @ stub NtGdiDdDDICreateHwContext
 @ stub NtGdiDdDDICreateHwQueue
@@ -209,8 +209,8 @@
 @ stub NtGdiDdDDIDestroyAllocation
 @ stub NtGdiDdDDIDestroyAllocation2
 @ stub NtGdiDdDDIDestroyContext
-@ stdcall NtGdiDdDDIDestroyDCFromMemory(ptr)
-@ stdcall NtGdiDdDDIDestroyDevice(ptr)
+@ stdcall -syscall NtGdiDdDDIDestroyDCFromMemory(ptr)
+@ stdcall -syscall NtGdiDdDDIDestroyDevice(ptr)
 @ stub NtGdiDdDDIDestroyHwContext
 @ stub NtGdiDdDDIDestroyHwQueue
 @ stub NtGdiDdDDIDestroyKeyedMutex
@@ -224,7 +224,7 @@
 @ stub NtGdiDdDDIDispMgrTargetOperation
 @ stub NtGdiDdDDIEnumAdapters
 @ stub NtGdiDdDDIEnumAdapters2
-@ stdcall NtGdiDdDDIEscape(ptr)
+@ stdcall -syscall NtGdiDdDDIEscape(ptr)
 @ stub NtGdiDdDDIEvict
 @ stub NtGdiDdDDIExtractBundleObject
 @ stub NtGdiDdDDIFlipOverlay
@@ -268,9 +268,9 @@
 @ stub NtGdiDdDDINetDispStartMiracastDisplayDevice
 @ stub NtGdiDdDDINetDispStopMiracastDisplayDevice
 @ stub NtGdiDdDDIOfferAllocations
-@ stdcall NtGdiDdDDIOpenAdapterFromDeviceName(ptr)
+@ stdcall -syscall NtGdiDdDDIOpenAdapterFromDeviceName(ptr)
 @ stdcall -syscall NtGdiDdDDIOpenAdapterFromHdc(ptr)
-@ stdcall NtGdiDdDDIOpenAdapterFromLuid(ptr)
+@ stdcall -syscall NtGdiDdDDIOpenAdapterFromLuid(ptr)
 @ stub NtGdiDdDDIOpenBundleObjectNtHandleFromName
 @ stub NtGdiDdDDIOpenKeyedMutex
 @ stub NtGdiDdDDIOpenKeyedMutex2
@@ -307,7 +307,7 @@
 @ stub NtGdiDdDDIQueryResourceInfoFromNtHandle
 @ stdcall -syscall NtGdiDdDDIQueryStatistics(ptr)
 @ stub NtGdiDdDDIQueryVidPnExclusiveOwnership
-@ stdcall NtGdiDdDDIQueryVideoMemoryInfo(ptr)
+@ stdcall -syscall NtGdiDdDDIQueryVideoMemoryInfo(ptr)
 @ stub NtGdiDdDDIReclaimAllocations
 @ stub NtGdiDdDDIReclaimAllocations2
 @ stub NtGdiDdDDIReleaseKeyedMutex
@@ -335,7 +335,7 @@
 @ stub NtGdiDdDDISetStereoEnabled
 @ stub NtGdiDdDDISetSyncRefreshCountWaitTarget
 @ stub NtGdiDdDDISetVidPnSourceHwProtection
-@ stdcall NtGdiDdDDISetVidPnSourceOwner(ptr)
+@ stdcall -syscall NtGdiDdDDISetVidPnSourceOwner(ptr)
 @ stub NtGdiDdDDISetYieldPercentage
 @ stub NtGdiDdDDIShareObjects
 @ stub NtGdiDdDDISharedPrimaryLockNotification
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 581d4bd4e379..d415ae5b562b 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -41,16 +41,6 @@ struct unix_funcs
                                                      UINT coloruse, UINT max_info, UINT max_bits,
                                                      ULONG flags, HANDLE xform );
     HDC      (WINAPI *pNtGdiCreateMetafileDC)( HDC hdc );
-    NTSTATUS (WINAPI *pNtGdiDdDDICheckVidPnExclusiveOwnership)( const D3DKMT_CHECKVIDPNEXCLUSIVEOWNERSHIP *desc );
-    NTSTATUS (WINAPI *pNtGdiDdDDICloseAdapter)( const D3DKMT_CLOSEADAPTER *desc );
-    NTSTATUS (WINAPI *pNtGdiDdDDICreateDCFromMemory)( D3DKMT_CREATEDCFROMMEMORY *desc );
-    NTSTATUS (WINAPI *pNtGdiDdDDIDestroyDCFromMemory)( const D3DKMT_DESTROYDCFROMMEMORY *desc );
-    NTSTATUS (WINAPI *pNtGdiDdDDIDestroyDevice)( const D3DKMT_DESTROYDEVICE *desc );
-    NTSTATUS (WINAPI *pNtGdiDdDDIEscape)( const D3DKMT_ESCAPE *desc );
-    NTSTATUS (WINAPI *pNtGdiDdDDIOpenAdapterFromDeviceName)( D3DKMT_OPENADAPTERFROMDEVICENAME *desc );
-    NTSTATUS (WINAPI *pNtGdiDdDDIOpenAdapterFromLuid)( D3DKMT_OPENADAPTERFROMLUID *desc );
-    NTSTATUS (WINAPI *pNtGdiDdDDIQueryVideoMemoryInfo)( D3DKMT_QUERYVIDEOMEMORYINFO *desc );
-    NTSTATUS (WINAPI *pNtGdiDdDDISetVidPnSourceOwner)( const D3DKMT_SETVIDPNSOURCEOWNER *desc );
     BOOL     (WINAPI *pNtGdiDeleteObjectApp)( HGDIOBJ obj );
     LONG     (WINAPI *pNtGdiDoPalette)( HGDIOBJ handle, WORD start, WORD count, void *entries,
                                         DWORD func, BOOL inbound );
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index 4f51dbd2206f..7f2dae040cf5 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -375,66 +375,6 @@ BOOL WINAPI NtGdiUpdateColors( HDC hdc )
     return unix_funcs->pNtGdiUpdateColors( hdc );
 }
 
-NTSTATUS WINAPI NtGdiDdDDICheckVidPnExclusiveOwnership( const D3DKMT_CHECKVIDPNEXCLUSIVEOWNERSHIP *desc )
-{
-    if (!unix_funcs) return STATUS_NOT_SUPPORTED;
-    return unix_funcs->pNtGdiDdDDICheckVidPnExclusiveOwnership( desc );
-}
-
-NTSTATUS WINAPI NtGdiDdDDICloseAdapter( const D3DKMT_CLOSEADAPTER *desc )
-{
-    if (!unix_funcs) return STATUS_NOT_SUPPORTED;
-    return unix_funcs->pNtGdiDdDDICloseAdapter( desc );
-}
-
-NTSTATUS WINAPI NtGdiDdDDICreateDCFromMemory( D3DKMT_CREATEDCFROMMEMORY *desc )
-{
-    if (!unix_funcs) return STATUS_NOT_SUPPORTED;
-    return unix_funcs->pNtGdiDdDDICreateDCFromMemory( desc );
-}
-
-NTSTATUS WINAPI NtGdiDdDDIDestroyDCFromMemory( const D3DKMT_DESTROYDCFROMMEMORY *desc )
-{
-    if (!unix_funcs) return STATUS_NOT_SUPPORTED;
-    return unix_funcs->pNtGdiDdDDIDestroyDCFromMemory( desc );
-}
-
-NTSTATUS WINAPI NtGdiDdDDIDestroyDevice( const D3DKMT_DESTROYDEVICE *desc )
-{
-    if (!unix_funcs) return STATUS_NOT_SUPPORTED;
-    return unix_funcs->pNtGdiDdDDIDestroyDevice( desc );
-}
-
-NTSTATUS WINAPI NtGdiDdDDIEscape( const D3DKMT_ESCAPE *desc )
-{
-    if (!unix_funcs) return STATUS_NOT_SUPPORTED;
-    return unix_funcs->pNtGdiDdDDIEscape( desc );
-}
-
-NTSTATUS WINAPI NtGdiDdDDIOpenAdapterFromDeviceName( D3DKMT_OPENADAPTERFROMDEVICENAME *desc )
-{
-    if (!unix_funcs) return STATUS_NOT_SUPPORTED;
-    return unix_funcs->pNtGdiDdDDIOpenAdapterFromDeviceName( desc );
-}
-
-NTSTATUS WINAPI NtGdiDdDDIOpenAdapterFromLuid( D3DKMT_OPENADAPTERFROMLUID *desc )
-{
-    if (!unix_funcs) return STATUS_NOT_SUPPORTED;
-    return unix_funcs->pNtGdiDdDDIOpenAdapterFromLuid( desc );
-}
-
-NTSTATUS WINAPI NtGdiDdDDIQueryVideoMemoryInfo( D3DKMT_QUERYVIDEOMEMORYINFO *desc )
-{
-    if (!unix_funcs) return STATUS_NOT_SUPPORTED;
-    return unix_funcs->pNtGdiDdDDIQueryVideoMemoryInfo( desc );
-}
-
-NTSTATUS WINAPI NtGdiDdDDISetVidPnSourceOwner( const D3DKMT_SETVIDPNSOURCEOWNER *desc )
-{
-    if (!unix_funcs) return STATUS_NOT_SUPPORTED;
-    return unix_funcs->pNtGdiDdDDISetVidPnSourceOwner( desc );
-}
-
 BOOL WINAPI NtUserDrawCaptionTemp( HWND hwnd, HDC hdc, const RECT *rect, HFONT font,
                                    HICON icon, const WCHAR *str, UINT flags )
 {
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index a41f7e69b111..b511953ef975 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -333,6 +333,55 @@ NTSTATUS WINAPI wow64_NtGdiCreateSolidBrush( UINT *args )
     return HandleToUlong( NtGdiCreateSolidBrush( color, brush ));
 }
 
+NTSTATUS WINAPI wow64_NtGdiDdDDICheckVidPnExclusiveOwnership( UINT *args )
+{
+    const D3DKMT_CHECKVIDPNEXCLUSIVEOWNERSHIP *desc = get_ptr( &args );
+
+    return NtGdiDdDDICheckVidPnExclusiveOwnership( desc );
+}
+
+NTSTATUS WINAPI wow64_NtGdiDdDDICloseAdapter( UINT *args )
+{
+    const D3DKMT_CLOSEADAPTER *desc = get_ptr( &args );
+
+    return NtGdiDdDDICloseAdapter( desc );
+}
+
+NTSTATUS WINAPI wow64_NtGdiDdDDICreateDCFromMemory( UINT *args )
+{
+    struct _D3DKMT_CREATEDCFROMMEMORY
+    {
+        ULONG pMemory;
+        D3DDDIFORMAT Format;
+        UINT Width;
+        UINT Height;
+        UINT Pitch;
+        ULONG hDeviceDc;
+        ULONG pColorTable;
+        ULONG hDc;
+        ULONG hBitmap;
+    } *desc32 = get_ptr( &args );
+
+    D3DKMT_CREATEDCFROMMEMORY desc;
+    NTSTATUS status;
+
+    if (!desc32) return STATUS_INVALID_PARAMETER;
+    desc.pMemory = UlongToPtr( desc32->pMemory );
+    desc.Format = desc32->Format;
+    desc.Width = desc32->Width;
+    desc.Height = desc32->Height;
+    desc.Pitch = desc32->Pitch;
+    desc.hDeviceDc = UlongToHandle( desc32->hDeviceDc );
+    desc.pColorTable = UlongToPtr( desc32->pColorTable );
+
+    if (!(status = NtGdiDdDDICreateDCFromMemory( &desc )))
+    {
+        desc32->hDc = HandleToUlong( desc.hDc );
+        desc32->hBitmap = HandleToUlong( desc.hBitmap );
+    }
+    return status;
+}
+
 NTSTATUS WINAPI wow64_NtGdiDdDDICreateDevice( UINT *args )
 {
     struct
@@ -365,6 +414,77 @@ NTSTATUS WINAPI wow64_NtGdiDdDDICreateDevice( UINT *args )
     return status;
 }
 
+NTSTATUS WINAPI wow64_NtGdiDdDDIDestroyDCFromMemory( UINT *args )
+{
+    const struct
+    {
+        ULONG hDc;
+        ULONG hBitmap;
+    } *desc32 = get_ptr( &args );
+    D3DKMT_DESTROYDCFROMMEMORY desc;
+
+    if (!desc32) return STATUS_INVALID_PARAMETER;
+    desc.hDc = UlongToHandle( desc32->hDc );
+    desc.hBitmap = UlongToHandle( desc32->hBitmap );
+
+    return NtGdiDdDDIDestroyDCFromMemory( &desc );
+}
+
+NTSTATUS WINAPI wow64_NtGdiDdDDIDestroyDevice( UINT *args )
+{
+    const D3DKMT_DESTROYDEVICE *desc = get_ptr( &args );
+
+    return NtGdiDdDDIDestroyDevice( desc );
+}
+
+NTSTATUS WINAPI wow64_NtGdiDdDDIEscape( UINT *args )
+{
+    const struct
+    {
+        D3DKMT_HANDLE      hAdapter;
+        D3DKMT_HANDLE      hDevice;
+        D3DKMT_ESCAPETYPE  Type;
+        D3DDDI_ESCAPEFLAGS Flags;
+        ULONG              pPrivateDriverData;
+        UINT               PrivateDriverDataSize;
+        D3DKMT_HANDLE      hContext;
+    } *desc32 = get_ptr( &args );
+    D3DKMT_ESCAPE desc;
+
+    if (!desc32) return STATUS_INVALID_PARAMETER;
+    desc.hAdapter = desc32->hAdapter;
+    desc.hDevice = desc32->hDevice;
+    desc.Type = desc32->Type;
+    desc.Flags = desc32->Flags;
+    desc.pPrivateDriverData = UlongToPtr( desc32->pPrivateDriverData );
+    desc.PrivateDriverDataSize = desc32->PrivateDriverDataSize;
+    desc.hContext = desc32->hContext;
+
+    return NtGdiDdDDIEscape( &desc );
+}
+
+NTSTATUS WINAPI wow64_NtGdiDdDDIOpenAdapterFromDeviceName( UINT *args )
+{
+    struct _D3DKMT_OPENADAPTERFROMDEVICENAME
+    {
+        ULONG pDeviceName;
+        D3DKMT_HANDLE hAdapter;
+        LUID AdapterLuid;
+    } *desc32 = get_ptr( &args );
+    D3DKMT_OPENADAPTERFROMDEVICENAME desc;
+    NTSTATUS status;
+
+    if (!desc32) return STATUS_INVALID_PARAMETER;
+    desc.pDeviceName = UlongToPtr( desc32->pDeviceName );
+
+    if (!(status = NtGdiDdDDIOpenAdapterFromDeviceName( &desc )))
+    {
+        desc32->hAdapter = desc.hAdapter;
+        desc32->AdapterLuid = desc.AdapterLuid;
+    }
+    return status;
+}
+
 NTSTATUS WINAPI wow64_NtGdiDdDDIOpenAdapterFromHdc( UINT *args )
 {
     struct
@@ -375,9 +495,11 @@ NTSTATUS WINAPI wow64_NtGdiDdDDIOpenAdapterFromHdc( UINT *args )
         D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;
     } *desc32 = get_ptr( &args );
 
-    D3DKMT_OPENADAPTERFROMHDC desc = { UlongToHandle( desc32->hDc ) };
+    D3DKMT_OPENADAPTERFROMHDC desc;
     NTSTATUS status;
 
+    if (!desc32) return STATUS_INVALID_PARAMETER;
+    desc.hDc = UlongToHandle( desc32->hDc );
     if (!(status = NtGdiDdDDIOpenAdapterFromHdc( &desc )))
     {
         desc32->hAdapter = desc.hAdapter;
@@ -387,6 +509,13 @@ NTSTATUS WINAPI wow64_NtGdiDdDDIOpenAdapterFromHdc( UINT *args )
     return status;
 }
 
+NTSTATUS WINAPI wow64_NtGdiDdDDIOpenAdapterFromLuid( UINT *args )
+{
+    D3DKMT_OPENADAPTERFROMLUID *desc = get_ptr( &args );
+
+    return NtGdiDdDDIOpenAdapterFromLuid( desc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiDdDDIQueryStatistics( UINT *args )
 {
     D3DKMT_QUERYSTATISTICS *stats = get_ptr( &args );
@@ -394,6 +523,38 @@ NTSTATUS WINAPI wow64_NtGdiDdDDIQueryStatistics( UINT *args )
     return NtGdiDdDDIQueryStatistics( stats );
 }
 
+NTSTATUS WINAPI wow64_NtGdiDdDDIQueryVideoMemoryInfo( UINT *args )
+{
+    struct _D3DKMT_QUERYVIDEOMEMORYINFO
+    {
+        ULONG                       hProcess;
+        D3DKMT_HANDLE               hAdapter;
+        D3DKMT_MEMORY_SEGMENT_GROUP MemorySegmentGroup;
+        UINT64                      Budget;
+        UINT64                      CurrentUsage;
+        UINT64                      CurrentReservation;
+        UINT64                      AvailableForReservation;
+        UINT                        PhysicalAdapterIndex;
+    } *desc32 = get_ptr( &args );
+    D3DKMT_QUERYVIDEOMEMORYINFO desc;
+    NTSTATUS status;
+
+    if (!desc32) return STATUS_INVALID_PARAMETER;
+    desc.hProcess = LongToHandle( desc32->hProcess );
+    desc.hAdapter = desc32->hAdapter;
+    desc.MemorySegmentGroup = desc32->MemorySegmentGroup;
+    desc.PhysicalAdapterIndex = desc32->PhysicalAdapterIndex;
+
+    if (!(status = NtGdiDdDDIQueryVideoMemoryInfo( &desc )))
+    {
+        desc32->Budget = desc.Budget;
+        desc32->CurrentUsage = desc.CurrentUsage;
+        desc32->CurrentReservation = desc.CurrentReservation;
+        desc32->AvailableForReservation = desc.AvailableForReservation;
+    }
+    return status;
+}
+
 NTSTATUS WINAPI wow64_NtGdiDdDDISetQueuedLimit( UINT *args )
 {
     D3DKMT_SETQUEUEDLIMIT *desc = get_ptr( &args );
@@ -401,6 +562,26 @@ NTSTATUS WINAPI wow64_NtGdiDdDDISetQueuedLimit( UINT *args )
     return NtGdiDdDDISetQueuedLimit( desc );
 }
 
+NTSTATUS WINAPI wow64_NtGdiDdDDISetVidPnSourceOwner( UINT *args )
+{
+    const struct
+    {
+        D3DKMT_HANDLE hDevice;
+        ULONG pType;
+        ULONG pVidPnSourceId;
+        UINT VidPnSourceCount;
+    } *desc32 = get_ptr( &args );
+    D3DKMT_SETVIDPNSOURCEOWNER desc;
+
+    if (!desc32) return STATUS_INVALID_PARAMETER;
+    desc.hDevice = desc32->hDevice;
+    desc.pType = UlongToPtr( desc32->pType );
+    desc.pVidPnSourceId = UlongToPtr( desc32->pVidPnSourceId );
+    desc.VidPnSourceCount = desc32->VidPnSourceCount;
+
+    return NtGdiDdDDISetVidPnSourceOwner( &desc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiDeleteClientObj( UINT *args )
 {
     HGDIOBJ obj = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index feec3fe2a79d..b64f2850a831 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -48,10 +48,20 @@
     SYSCALL_ENTRY( NtGdiCreateRectRgn ) \
     SYSCALL_ENTRY( NtGdiCreateRoundRectRgn ) \
     SYSCALL_ENTRY( NtGdiCreateSolidBrush ) \
+    SYSCALL_ENTRY( NtGdiDdDDICheckVidPnExclusiveOwnership ) \
+    SYSCALL_ENTRY( NtGdiDdDDICloseAdapter ) \
+    SYSCALL_ENTRY( NtGdiDdDDICreateDCFromMemory ) \
     SYSCALL_ENTRY( NtGdiDdDDICreateDevice ) \
+    SYSCALL_ENTRY( NtGdiDdDDIDestroyDCFromMemory ) \
+    SYSCALL_ENTRY( NtGdiDdDDIDestroyDevice ) \
+    SYSCALL_ENTRY( NtGdiDdDDIEscape ) \
+    SYSCALL_ENTRY( NtGdiDdDDIOpenAdapterFromDeviceName ) \
     SYSCALL_ENTRY( NtGdiDdDDIOpenAdapterFromHdc ) \
+    SYSCALL_ENTRY( NtGdiDdDDIOpenAdapterFromLuid ) \
     SYSCALL_ENTRY( NtGdiDdDDIQueryStatistics ) \
+    SYSCALL_ENTRY( NtGdiDdDDIQueryVideoMemoryInfo ) \
     SYSCALL_ENTRY( NtGdiDdDDISetQueuedLimit ) \
+    SYSCALL_ENTRY( NtGdiDdDDISetVidPnSourceOwner ) \
     SYSCALL_ENTRY( NtGdiDeleteClientObj ) \
     SYSCALL_ENTRY( NtGdiDescribePixelFormat ) \
     SYSCALL_ENTRY( NtGdiDrawStream ) \

From 8c2f1742aa1e67bc75ea5669c94bceb5b871dbbf Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 20:21:13 +0200
Subject: [PATCH 10/19] win32u: Use syscall interface for DIB functions.

---
 dlls/win32u/gdiobj.c         |  4 --
 dlls/win32u/syscall.c        |  4 ++
 dlls/win32u/win32u.spec      |  8 ++--
 dlls/win32u/win32u_private.h | 17 --------
 dlls/win32u/wrappers.c       | 43 -------------------
 dlls/wow64win/gdi.c          | 83 ++++++++++++++++++++++++++++++++++++
 dlls/wow64win/syscall.h      |  4 ++
 7 files changed, 95 insertions(+), 68 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index d882f0dd0093..ef56fc24a5ba 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1031,7 +1031,6 @@ BOOL WINAPI NtGdiSetColorAdjustment( HDC hdc, const COLORADJUSTMENT *ca )
 static struct unix_funcs unix_funcs =
 {
     NtGdiCreateCompatibleDC,
-    NtGdiCreateDIBitmapInternal,
     NtGdiCreateMetafileDC,
     NtGdiDeleteObjectApp,
     NtGdiDoPalette,
@@ -1047,7 +1046,6 @@ static struct unix_funcs unix_funcs =
     NtGdiGetCharABCWidthsW,
     NtGdiGetCharWidthW,
     NtGdiGetCharWidthInfo,
-    NtGdiGetDIBitsInternal,
     NtGdiGetDeviceCaps,
     NtGdiGetDeviceGammaRamp,
     NtGdiGetFontData,
@@ -1075,11 +1073,9 @@ static struct unix_funcs unix_funcs =
     NtGdiSelectFont,
     NtGdiSelectPen,
     NtGdiSetBoundsRect,
-    NtGdiSetDIBitsToDeviceInternal,
     NtGdiSetDeviceGammaRamp,
     NtGdiSetLayout,
     NtGdiSetSystemPaletteUse,
-    NtGdiStretchDIBitsInternal,
     NtGdiUnrealizeObject,
     NtGdiUpdateColors,
     NtUserDrawCaptionTemp,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 467c15ba23d2..43d0c63d404b 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -53,6 +53,7 @@ static void * const syscalls[] =
     NtGdiCreateCompatibleBitmap,
     NtGdiCreateDIBBrush,
     NtGdiCreateDIBSection,
+    NtGdiCreateDIBitmapInternal,
     NtGdiCreateEllipticRgn,
     NtGdiCreateHalftonePalette,
     NtGdiCreateHatchBrushInternal,
@@ -99,6 +100,7 @@ static void * const syscalls[] =
     NtGdiGetDCDword,
     NtGdiGetDCObject,
     NtGdiGetDCPoint,
+    NtGdiGetDIBitsInternal,
     NtGdiGetFontFileData,
     NtGdiGetFontFileInfo,
     NtGdiGetNearestPaletteIndex,
@@ -139,6 +141,7 @@ static void * const syscalls[] =
     NtGdiSetBitmapDimension,
     NtGdiSetBrushOrg,
     NtGdiSetColorAdjustment,
+    NtGdiSetDIBitsToDeviceInternal,
     NtGdiSetMagicColors,
     NtGdiSetMetaRgn,
     NtGdiSetPixel,
@@ -149,6 +152,7 @@ static void * const syscalls[] =
     NtGdiStartDoc,
     NtGdiStartPage,
     NtGdiStretchBlt,
+    NtGdiStretchDIBitsInternal,
     NtGdiStrokeAndFillPath,
     NtGdiStrokePath,
     NtGdiSwapBuffers,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index 33c0bf197ba3..6f6685f3446c 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -149,7 +149,7 @@
 @ stdcall NtGdiCreateCompatibleDC(long)
 @ stdcall -syscall NtGdiCreateDIBBrush(ptr long long long long ptr)
 @ stdcall -syscall NtGdiCreateDIBSection(long long long ptr long long long long ptr)
-@ stdcall NtGdiCreateDIBitmapInternal(long long long long ptr ptr long long long long long)
+@ stdcall -syscall NtGdiCreateDIBitmapInternal(long long long long ptr ptr long long long long long)
 @ stdcall -syscall NtGdiCreateEllipticRgn(long long long long)
 @ stdcall -syscall NtGdiCreateHalftonePalette(long)
 @ stdcall -syscall NtGdiCreateHatchBrushInternal(long long long)
@@ -466,7 +466,7 @@
 @ stdcall -syscall NtGdiGetDCObject(long long)
 @ stdcall -syscall NtGdiGetDCPoint(long long ptr)
 @ stub NtGdiGetDCforBitmap
-@ stdcall NtGdiGetDIBitsInternal(long long long long ptr ptr long long long)
+@ stdcall -syscall NtGdiGetDIBitsInternal(long long long long ptr ptr long long long)
 @ stdcall NtGdiGetDeviceCaps(long long)
 @ stub NtGdiGetDeviceCapsAll
 @ stdcall NtGdiGetDeviceGammaRamp(long ptr)
@@ -597,7 +597,7 @@
 @ stdcall -syscall NtGdiSetBrushOrg(long long long ptr)
 @ stdcall -syscall NtGdiSetColorAdjustment(long ptr)
 @ stub NtGdiSetColorSpace
-@ stdcall NtGdiSetDIBitsToDeviceInternal(long long long long long long long long long ptr ptr long long long long long)
+@ stdcall -syscall NtGdiSetDIBitsToDeviceInternal(long long long long long long long long long ptr ptr long long long long long)
 @ stdcall NtGdiSetDeviceGammaRamp(ptr ptr)
 @ stub NtGdiSetFontEnumeration
 @ stub NtGdiSetFontXform
@@ -621,7 +621,7 @@
 @ stdcall -syscall NtGdiStartDoc(long ptr ptr long)
 @ stdcall -syscall NtGdiStartPage(long)
 @ stdcall -syscall NtGdiStretchBlt(long long long long long long long long long long long long)
-@ stdcall NtGdiStretchDIBitsInternal(long long long long long long long long long ptr ptr long long long long long)
+@ stdcall -syscall NtGdiStretchDIBitsInternal(long long long long long long long long long ptr ptr long long long long long)
 @ stdcall -syscall NtGdiStrokeAndFillPath(long)
 @ stdcall -syscall NtGdiStrokePath(long)
 @ stdcall -syscall NtGdiSwapBuffers(long)
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index d415ae5b562b..76fb07706a25 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -36,10 +36,6 @@ struct unix_funcs
 {
     /* win32u functions */
     HDC      (WINAPI *pNtGdiCreateCompatibleDC)( HDC hdc );
-    HBITMAP  (WINAPI *pNtGdiCreateDIBitmapInternal)( HDC hdc, INT width, INT height, DWORD init,
-                                                     const void *bits, const BITMAPINFO *data,
-                                                     UINT coloruse, UINT max_info, UINT max_bits,
-                                                     ULONG flags, HANDLE xform );
     HDC      (WINAPI *pNtGdiCreateMetafileDC)( HDC hdc );
     BOOL     (WINAPI *pNtGdiDeleteObjectApp)( HGDIOBJ obj );
     LONG     (WINAPI *pNtGdiDoPalette)( HGDIOBJ handle, WORD start, WORD count, void *entries,
@@ -61,9 +57,6 @@ struct unix_funcs
     BOOL     (WINAPI *pNtGdiGetCharWidthW)( HDC hdc, UINT first_char, UINT last_char, WCHAR *chars,
                                             ULONG flags, void *buffer );
     BOOL     (WINAPI *pNtGdiGetCharWidthInfo)( HDC hdc, struct char_width_info *info );
-    INT      (WINAPI *pNtGdiGetDIBitsInternal)( HDC hdc, HBITMAP hbitmap, UINT startscan, UINT lines,
-                                                void *bits, BITMAPINFO *info, UINT coloruse,
-                                                UINT max_bits, UINT max_info );
     INT      (WINAPI *pNtGdiGetDeviceCaps)( HDC hdc, INT cap );
     BOOL     (WINAPI *pNtGdiGetDeviceGammaRamp)( HDC hdc, void *ptr );
     DWORD    (WINAPI *pNtGdiGetFontData)( HDC hdc, DWORD table, DWORD offset, void *buffer, DWORD length );
@@ -97,19 +90,9 @@ struct unix_funcs
     HGDIOBJ  (WINAPI *pNtGdiSelectFont)( HDC hdc, HGDIOBJ handle );
     HGDIOBJ  (WINAPI *pNtGdiSelectPen)( HDC hdc, HGDIOBJ handle );
     UINT     (WINAPI *pNtGdiSetBoundsRect)( HDC hdc, const RECT *rect, UINT flags );
-    INT      (WINAPI *pNtGdiSetDIBitsToDeviceInternal)( HDC hdc, INT x_dst, INT y_dst, DWORD cx,
-                                                        DWORD cy, INT x_src, INT y_src, UINT startscan,
-                                                        UINT lines, const void *bits, const BITMAPINFO *bmi,
-                                                        UINT coloruse, UINT max_bits, UINT max_info,
-                                                        BOOL xform_coords, HANDLE xform );
     BOOL     (WINAPI *pNtGdiSetDeviceGammaRamp)( HDC hdc, void *ptr );
     DWORD    (WINAPI *pNtGdiSetLayout)( HDC hdc, LONG wox, DWORD layout );
     UINT     (WINAPI *pNtGdiSetSystemPaletteUse)( HDC hdc, UINT use );
-    INT      (WINAPI *pNtGdiStretchDIBitsInternal)( HDC hdc, INT x_dst, INT y_dst, INT width_dst,
-                                                    INT height_dst, INT x_src, INT y_src, INT width_src,
-                                                    INT height_src, const void *bits, const BITMAPINFO *bmi,
-                                                    UINT coloruse, DWORD rop, UINT max_info, UINT max_bits,
-                                                    HANDLE xform );
     BOOL     (WINAPI *pNtGdiUnrealizeObject)( HGDIOBJ obj );
     BOOL     (WINAPI *pNtGdiUpdateColors)( HDC hdc );
     BOOL     (WINAPI *pNtUserDrawCaptionTemp)( HWND hwnd, HDC hdc, const RECT *rect, HFONT font,
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index 7f2dae040cf5..dc3733dc90ee 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -30,16 +30,6 @@ HDC WINAPI NtGdiCreateCompatibleDC( HDC hdc )
     return unix_funcs->pNtGdiCreateCompatibleDC( hdc );
 }
 
-HBITMAP WINAPI NtGdiCreateDIBitmapInternal( HDC hdc, INT width, INT height, DWORD init,
-                                            const void *bits, const BITMAPINFO *data,
-                                            UINT coloruse, UINT max_info, UINT max_bits,
-                                            ULONG flags, HANDLE xform )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiCreateDIBitmapInternal( hdc, width, height, init, bits, data,
-                                                     coloruse, max_info, max_bits, flags, xform );
-}
-
 HDC WINAPI NtGdiCreateMetafileDC( HDC hdc )
 {
     if (!unix_funcs) return 0;
@@ -144,15 +134,6 @@ BOOL WINAPI NtGdiGetCharWidthInfo( HDC hdc, struct char_width_info *info )
     return unix_funcs->pNtGdiGetCharWidthInfo( hdc, info );
 }
 
-INT WINAPI NtGdiGetDIBitsInternal( HDC hdc, HBITMAP hbitmap, UINT startscan, UINT lines,
-                                   void *bits, BITMAPINFO *info, UINT coloruse,
-                                   UINT max_bits, UINT max_info )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiGetDIBitsInternal( hdc, hbitmap, startscan, lines, bits, info, coloruse,
-                                                max_bits, max_info );
-}
-
 INT WINAPI NtGdiGetDeviceCaps( HDC hdc, INT cap )
 {
     if (!unix_funcs) return 0;
@@ -321,18 +302,6 @@ UINT WINAPI NtGdiSetBoundsRect( HDC hdc, const RECT *rect, UINT flags )
     return unix_funcs->pNtGdiSetBoundsRect( hdc, rect, flags );
 }
 
-INT WINAPI NtGdiSetDIBitsToDeviceInternal( HDC hdc, INT x_dst, INT y_dst, DWORD cx,
-                                           DWORD cy, INT x_src, INT y_src, UINT startscan,
-                                           UINT lines, const void *bits, const BITMAPINFO *bmi,
-                                           UINT coloruse, UINT max_bits, UINT max_info,
-                                           BOOL xform_coords, HANDLE xform )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiSetDIBitsToDeviceInternal( hdc, x_dst, y_dst, cx, cy, x_src, y_src,
-                                                        startscan, lines, bits, bmi, coloruse,
-                                                        max_bits, max_info, xform_coords, xform );
-}
-
 BOOL WINAPI NtGdiSetDeviceGammaRamp( HDC hdc, void *ptr )
 {
     if (!unix_funcs) return FALSE;
@@ -351,18 +320,6 @@ UINT WINAPI NtGdiSetSystemPaletteUse( HDC hdc, UINT use )
     return unix_funcs->pNtGdiSetSystemPaletteUse( hdc, use );
 }
 
-INT WINAPI NtGdiStretchDIBitsInternal( HDC hdc, INT x_dst, INT y_dst, INT width_dst,
-                                       INT height_dst, INT x_src, INT y_src, INT width_src,
-                                       INT height_src, const void *bits, const BITMAPINFO *bmi,
-                                       UINT coloruse, DWORD rop, UINT max_info, UINT max_bits,
-                                       HANDLE xform )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiStretchDIBitsInternal( hdc, x_dst, y_dst, width_dst, height_dst,
-                                                    x_src, y_src, width_src, height_src, bits, bmi,
-                                                    coloruse, rop, max_info, max_bits, xform );
-}
-
 BOOL WINAPI NtGdiUnrealizeObject( HGDIOBJ obj )
 {
     if (!unix_funcs) return FALSE;
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index b511953ef975..eeb9004bf7b9 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -249,6 +249,25 @@ NTSTATUS WINAPI wow64_NtGdiCreateDIBSection( UINT *args )
     return HandleToUlong( ret );
 }
 
+NTSTATUS WINAPI wow64_NtGdiCreateDIBitmapInternal( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT width = get_ulong( &args );
+    INT height = get_ulong( &args );
+    DWORD init = get_ulong( &args );
+    const void *bits = get_ptr( &args );
+    const BITMAPINFO *data = get_ptr( &args );
+    UINT coloruse = get_ulong( &args );
+    UINT max_info = get_ulong( &args );
+    UINT max_bits = get_ulong( &args );
+    ULONG flags = get_ulong( &args );
+    HANDLE xform = get_handle( &args );
+
+    HBITMAP ret = NtGdiCreateDIBitmapInternal( hdc, width, height, init, bits, data,
+                                               coloruse, max_info, max_bits, flags, xform );
+    return HandleToUlong( ret );
+}
+
 NTSTATUS WINAPI wow64_NtGdiCreateEllipticRgn( UINT *args )
 {
     INT left = get_ulong( &args );
@@ -870,6 +889,22 @@ NTSTATUS WINAPI wow64_NtGdiGetDCPoint( UINT *args )
     return NtGdiGetDCPoint( hdc, method, result );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetDIBitsInternal( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HBITMAP hbitmap = get_handle( &args );
+    UINT startscan = get_ulong( &args );
+    UINT lines = get_ulong( &args );
+    void *bits = get_ptr( &args );
+    BITMAPINFO *info = get_ptr( &args );
+    UINT coloruse = get_ulong( &args );
+    UINT max_bits = get_ulong( &args );
+    UINT max_info = get_ulong( &args );
+
+    return NtGdiGetDIBitsInternal( hdc, hbitmap, startscan, lines, bits, info, coloruse,
+                                   max_bits, max_info );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetFontFileData( UINT *args )
 {
     DWORD instance_id = get_ulong( &args );
@@ -1280,6 +1315,30 @@ NTSTATUS WINAPI wow64_NtGdiSetColorAdjustment( UINT *args )
     return NtGdiSetColorAdjustment( hdc, ca );
 }
 
+NTSTATUS WINAPI wow64_NtGdiSetDIBitsToDeviceInternal( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x_dst = get_ulong( &args );
+    INT y_dst = get_ulong( &args );
+    DWORD cx = get_ulong( &args );
+    DWORD cy = get_ulong( &args );
+    INT x_src = get_ulong( &args );
+    INT y_src = get_ulong( &args );
+    UINT startscan = get_ulong( &args );
+    UINT lines = get_ulong( &args );
+    const void *bits = get_ptr( &args );
+    const BITMAPINFO *bmi = get_ptr( &args );
+    UINT coloruse = get_ulong( &args );
+    UINT max_bits = get_ulong( &args );
+    UINT max_info = get_ulong( &args );
+    BOOL xform_coords = get_ulong( &args );
+    HANDLE xform = get_handle( &args );
+
+    return NtGdiSetDIBitsToDeviceInternal( hdc, x_dst, y_dst, cx, cy, x_src, y_src,
+                                           startscan, lines, bits, bmi, coloruse,
+                                           max_bits, max_info, xform_coords, xform );
+}
+
 NTSTATUS WINAPI wow64_NtGdiSetMagicColors( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1395,6 +1454,30 @@ NTSTATUS WINAPI wow64_NtGdiStretchBlt( UINT *args )
                             x_src, y_src, width_src, height_src, rop, bk_color );
 }
 
+NTSTATUS WINAPI wow64_NtGdiStretchDIBitsInternal( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x_dst = get_ulong( &args );
+    INT y_dst = get_ulong( &args );
+    INT width_dst = get_ulong( &args );
+    INT height_dst = get_ulong( &args );
+    INT x_src = get_ulong( &args );
+    INT y_src = get_ulong( &args );
+    INT width_src = get_ulong( &args );
+    INT height_src = get_ulong( &args );
+    const void *bits = get_ptr( &args );
+    const BITMAPINFO *bmi = get_ptr( &args );
+    UINT coloruse = get_ulong( &args );
+    DWORD rop = get_ulong( &args );
+    UINT max_info = get_ulong( &args );
+    UINT max_bits = get_ulong( &args );
+    HANDLE xform = get_handle( &args );
+
+    return NtGdiStretchDIBitsInternal( hdc, x_dst, y_dst, width_dst, height_dst,
+                                       x_src, y_src, width_src, height_src, bits, bmi,
+                                       coloruse, rop, max_info, max_bits, xform );
+}
+
 NTSTATUS WINAPI wow64_NtGdiStrokeAndFillPath( UINT *args )
 {
     HDC hdc = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index b64f2850a831..cfd3edd6bab2 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -39,6 +39,7 @@
     SYSCALL_ENTRY( NtGdiCreateCompatibleBitmap ) \
     SYSCALL_ENTRY( NtGdiCreateDIBBrush ) \
     SYSCALL_ENTRY( NtGdiCreateDIBSection ) \
+    SYSCALL_ENTRY( NtGdiCreateDIBitmapInternal ) \
     SYSCALL_ENTRY( NtGdiCreateEllipticRgn ) \
     SYSCALL_ENTRY( NtGdiCreateHalftonePalette ) \
     SYSCALL_ENTRY( NtGdiCreateHatchBrushInternal ) \
@@ -85,6 +86,7 @@
     SYSCALL_ENTRY( NtGdiGetDCDword ) \
     SYSCALL_ENTRY( NtGdiGetDCObject ) \
     SYSCALL_ENTRY( NtGdiGetDCPoint ) \
+    SYSCALL_ENTRY( NtGdiGetDIBitsInternal ) \
     SYSCALL_ENTRY( NtGdiGetFontFileData ) \
     SYSCALL_ENTRY( NtGdiGetFontFileInfo ) \
     SYSCALL_ENTRY( NtGdiGetNearestPaletteIndex ) \
@@ -125,6 +127,7 @@
     SYSCALL_ENTRY( NtGdiSetBitmapDimension ) \
     SYSCALL_ENTRY( NtGdiSetBrushOrg ) \
     SYSCALL_ENTRY( NtGdiSetColorAdjustment ) \
+    SYSCALL_ENTRY( NtGdiSetDIBitsToDeviceInternal ) \
     SYSCALL_ENTRY( NtGdiSetMagicColors ) \
     SYSCALL_ENTRY( NtGdiSetMetaRgn ) \
     SYSCALL_ENTRY( NtGdiSetPixel ) \
@@ -135,6 +138,7 @@
     SYSCALL_ENTRY( NtGdiStartDoc ) \
     SYSCALL_ENTRY( NtGdiStartPage ) \
     SYSCALL_ENTRY( NtGdiStretchBlt ) \
+    SYSCALL_ENTRY( NtGdiStretchDIBitsInternal ) \
     SYSCALL_ENTRY( NtGdiStrokeAndFillPath ) \
     SYSCALL_ENTRY( NtGdiStrokePath ) \
     SYSCALL_ENTRY( NtGdiSwapBuffers ) \

From 3e7aa1d41af0937b4a61c491158ab22e950aebd2 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 23:12:29 +0200
Subject: [PATCH 11/19] win32u: Use syscall interface for more DC functions.

---
 dlls/win32u/gdiobj.c         |  5 -----
 dlls/win32u/syscall.c        |  5 +++++
 dlls/win32u/win32u.spec      | 10 ++++-----
 dlls/win32u/win32u_private.h |  6 ------
 dlls/win32u/wrappers.c       | 31 ----------------------------
 dlls/wow64win/gdi.c          | 40 ++++++++++++++++++++++++++++++++++++
 dlls/wow64win/syscall.h      |  5 +++++
 7 files changed, 55 insertions(+), 47 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index ef56fc24a5ba..431bd9360c91 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1030,8 +1030,6 @@ BOOL WINAPI NtGdiSetColorAdjustment( HDC hdc, const COLORADJUSTMENT *ca )
 
 static struct unix_funcs unix_funcs =
 {
-    NtGdiCreateCompatibleDC,
-    NtGdiCreateMetafileDC,
     NtGdiDeleteObjectApp,
     NtGdiDoPalette,
     NtGdiEnumFonts,
@@ -1066,9 +1064,7 @@ static struct unix_funcs unix_funcs =
     NtGdiOffsetClipRgn,
     NtGdiPtVisible,
     NtGdiRectVisible,
-    NtGdiResetDC,
     NtGdiResizePalette,
-    NtGdiRestoreDC,
     NtGdiSelectBrush,
     NtGdiSelectFont,
     NtGdiSelectPen,
@@ -1077,7 +1073,6 @@ static struct unix_funcs unix_funcs =
     NtGdiSetLayout,
     NtGdiSetSystemPaletteUse,
     NtGdiUnrealizeObject,
-    NtGdiUpdateColors,
     NtUserDrawCaptionTemp,
     NtUserDrawMenuBarTemp,
     NtUserEndPaint,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 43d0c63d404b..4de87edaa411 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -51,12 +51,14 @@ static void * const syscalls[] =
     NtGdiCreateBitmap,
     NtGdiCreateClientObj,
     NtGdiCreateCompatibleBitmap,
+    NtGdiCreateCompatibleDC,
     NtGdiCreateDIBBrush,
     NtGdiCreateDIBSection,
     NtGdiCreateDIBitmapInternal,
     NtGdiCreateEllipticRgn,
     NtGdiCreateHalftonePalette,
     NtGdiCreateHatchBrushInternal,
+    NtGdiCreateMetafileDC,
     NtGdiCreatePaletteInternal,
     NtGdiCreatePatternBrushInternal,
     NtGdiCreatePen,
@@ -131,6 +133,8 @@ static void * const syscalls[] =
     NtGdiRectangle,
     NtGdiRemoveFontMemResourceEx,
     NtGdiRemoveFontResourceW,
+    NtGdiResetDC,
+    NtGdiRestoreDC,
     NtGdiRoundRect,
     NtGdiSaveDC,
     NtGdiScaleViewportExtEx,
@@ -158,6 +162,7 @@ static void * const syscalls[] =
     NtGdiSwapBuffers,
     NtGdiTransformPoints,
     NtGdiTransparentBlt,
+    NtGdiUpdateColors,
     NtGdiWidenPath,
     NtUserActivateKeyboardLayout,
     NtUserAddClipboardFormatListener,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index 6f6685f3446c..aeb9dde70f2d 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -146,14 +146,14 @@
 @ stub NtGdiCreateColorSpace
 @ stub NtGdiCreateColorTransform
 @ stdcall -syscall NtGdiCreateCompatibleBitmap(long long long)
-@ stdcall NtGdiCreateCompatibleDC(long)
+@ stdcall -syscall NtGdiCreateCompatibleDC(long)
 @ stdcall -syscall NtGdiCreateDIBBrush(ptr long long long long ptr)
 @ stdcall -syscall NtGdiCreateDIBSection(long long long ptr long long long long ptr)
 @ stdcall -syscall NtGdiCreateDIBitmapInternal(long long long long ptr ptr long long long long long)
 @ stdcall -syscall NtGdiCreateEllipticRgn(long long long long)
 @ stdcall -syscall NtGdiCreateHalftonePalette(long)
 @ stdcall -syscall NtGdiCreateHatchBrushInternal(long long long)
-@ stdcall NtGdiCreateMetafileDC(long)
+@ stdcall -syscall NtGdiCreateMetafileDC(long)
 @ stub NtGdiCreateOPMProtectedOutput
 @ stub NtGdiCreateOPMProtectedOutputs
 @ stdcall -syscall NtGdiCreatePaletteInternal(ptr long)
@@ -570,9 +570,9 @@
 @ stdcall -syscall NtGdiRemoveFontMemResourceEx(long)
 @ stdcall -syscall NtGdiRemoveFontResourceW(wstr long long long long ptr)
 @ stub NtGdiRemoveMergeFont
-@ stdcall NtGdiResetDC(long ptr ptr ptr ptr)
+@ stdcall -syscall NtGdiResetDC(long ptr ptr ptr ptr)
 @ stdcall NtGdiResizePalette(long long)
-@ stdcall NtGdiRestoreDC(long long)
+@ stdcall -syscall NtGdiRestoreDC(long long)
 @ stdcall -syscall NtGdiRoundRect(long long long long long long long)
 @ stub NtGdiSTROBJ_bEnum
 @ stub NtGdiSTROBJ_bEnumPositionsOnly
@@ -631,7 +631,7 @@
 @ stub NtGdiUnloadPrinterDriver
 @ stub NtGdiUnmapMemFont
 @ stdcall NtGdiUnrealizeObject(long)
-@ stdcall NtGdiUpdateColors(long)
+@ stdcall -syscall NtGdiUpdateColors(long)
 @ stub NtGdiUpdateTransform
 @ stdcall -syscall NtGdiWidenPath(long)
 @ stub NtGdiXFORMOBJ_bApplyXform
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 76fb07706a25..06190c7e67c8 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -35,8 +35,6 @@
 struct unix_funcs
 {
     /* win32u functions */
-    HDC      (WINAPI *pNtGdiCreateCompatibleDC)( HDC hdc );
-    HDC      (WINAPI *pNtGdiCreateMetafileDC)( HDC hdc );
     BOOL     (WINAPI *pNtGdiDeleteObjectApp)( HGDIOBJ obj );
     LONG     (WINAPI *pNtGdiDoPalette)( HGDIOBJ handle, WORD start, WORD count, void *entries,
                                         DWORD func, BOOL inbound );
@@ -82,10 +80,7 @@ struct unix_funcs
     INT      (WINAPI *pNtGdiOffsetClipRgn)( HDC hdc, INT x, INT y );
     BOOL     (WINAPI *pNtGdiPtVisible)( HDC hdc, INT x, INT y );
     BOOL     (WINAPI *pNtGdiRectVisible)( HDC hdc, const RECT *rect );
-    BOOL     (WINAPI *pNtGdiResetDC)( HDC hdc, const DEVMODEW *devmode, BOOL *banding,
-                                      DRIVER_INFO_2W *driver_info, void *dev );
     BOOL     (WINAPI *pNtGdiResizePalette)( HPALETTE palette, UINT count );
-    BOOL     (WINAPI *pNtGdiRestoreDC)( HDC hdc, INT level );
     HGDIOBJ  (WINAPI *pNtGdiSelectBrush)( HDC hdc, HGDIOBJ handle );
     HGDIOBJ  (WINAPI *pNtGdiSelectFont)( HDC hdc, HGDIOBJ handle );
     HGDIOBJ  (WINAPI *pNtGdiSelectPen)( HDC hdc, HGDIOBJ handle );
@@ -94,7 +89,6 @@ struct unix_funcs
     DWORD    (WINAPI *pNtGdiSetLayout)( HDC hdc, LONG wox, DWORD layout );
     UINT     (WINAPI *pNtGdiSetSystemPaletteUse)( HDC hdc, UINT use );
     BOOL     (WINAPI *pNtGdiUnrealizeObject)( HGDIOBJ obj );
-    BOOL     (WINAPI *pNtGdiUpdateColors)( HDC hdc );
     BOOL     (WINAPI *pNtUserDrawCaptionTemp)( HWND hwnd, HDC hdc, const RECT *rect, HFONT font,
                                                HICON icon, const WCHAR *str, UINT flags );
     DWORD    (WINAPI *pNtUserDrawMenuBarTemp)( HWND hwnd, HDC hdc, RECT *rect, HMENU handle, HFONT font );
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index dc3733dc90ee..27da68d65d53 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -24,18 +24,6 @@
 
 static const struct unix_funcs *unix_funcs;
 
-HDC WINAPI NtGdiCreateCompatibleDC( HDC hdc )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiCreateCompatibleDC( hdc );
-}
-
-HDC WINAPI NtGdiCreateMetafileDC( HDC hdc )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiCreateMetafileDC( hdc );
-}
-
 BOOL WINAPI NtGdiDeleteObjectApp( HGDIOBJ obj )
 {
     if (!unix_funcs) return FALSE;
@@ -259,25 +247,12 @@ BOOL WINAPI NtGdiRectVisible( HDC hdc, const RECT *rect )
     return unix_funcs->pNtGdiRectVisible( hdc, rect );
 }
 
-BOOL WINAPI NtGdiResetDC( HDC hdc, const DEVMODEW *devmode, BOOL *banding,
-                          DRIVER_INFO_2W *driver_info, void *dev )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiResetDC( hdc, devmode, banding, driver_info, dev );
-}
-
 BOOL WINAPI NtGdiResizePalette( HPALETTE palette, UINT count )
 {
     if (!unix_funcs) return FALSE;
     return unix_funcs->pNtGdiResizePalette( palette, count );
 }
 
-BOOL WINAPI NtGdiRestoreDC( HDC hdc, INT level )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiRestoreDC( hdc, level );
-}
-
 HGDIOBJ WINAPI NtGdiSelectBrush( HDC hdc, HGDIOBJ handle )
 {
     if (!unix_funcs) return 0;
@@ -326,12 +301,6 @@ BOOL WINAPI NtGdiUnrealizeObject( HGDIOBJ obj )
     return unix_funcs->pNtGdiUnrealizeObject( obj );
 }
 
-BOOL WINAPI NtGdiUpdateColors( HDC hdc )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiUpdateColors( hdc );
-}
-
 BOOL WINAPI NtUserDrawCaptionTemp( HWND hwnd, HDC hdc, const RECT *rect, HFONT font,
                                    HICON icon, const WCHAR *str, UINT flags )
 {
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index eeb9004bf7b9..d8fd697a3c19 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -216,6 +216,13 @@ NTSTATUS WINAPI wow64_NtGdiCreateCompatibleBitmap( UINT *args )
     return HandleToUlong( NtGdiCreateCompatibleBitmap( hdc, width, height ));
 }
 
+NTSTATUS WINAPI wow64_NtGdiCreateCompatibleDC( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return HandleToUlong( NtGdiCreateCompatibleDC( hdc ));
+}
+
 NTSTATUS WINAPI wow64_NtGdiCreateDIBBrush( UINT *args )
 {
     const void *data = get_ptr( &args );
@@ -294,6 +301,13 @@ NTSTATUS WINAPI wow64_NtGdiCreateHatchBrushInternal( UINT *args )
     return HandleToULong( NtGdiCreateHatchBrushInternal( style, color, pen ));
 }
 
+NTSTATUS WINAPI wow64_NtGdiCreateMetafileDC( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return HandleToUlong( NtGdiCreateMetafileDC( hdc ));
+}
+
 NTSTATUS WINAPI wow64_NtGdiCreatePaletteInternal( UINT *args )
 {
     const LOGPALETTE *palette = get_ptr( &args );
@@ -1068,6 +1082,25 @@ NTSTATUS WINAPI wow64_NtGdiGetRegionData( UINT *args )
     return NtGdiGetRegionData( hrgn, count, data );
 }
 
+NTSTATUS WINAPI wow64_NtGdiResetDC( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    const DEVMODEW *devmode = get_ptr( &args );
+    BOOL *banding = get_ptr( &args );
+    DRIVER_INFO_2W *driver_info = get_ptr( &args );
+    void *dev = get_ptr( &args );
+
+    return NtGdiResetDC( hdc, devmode, banding, driver_info, dev );
+}
+
+NTSTATUS WINAPI wow64_NtGdiRestoreDC( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT level = get_ulong( &args );
+
+    return NtGdiRestoreDC( hdc, level );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetRgnBox( UINT *args )
 {
     HRGN hrgn = get_handle( &args );
@@ -1528,6 +1561,13 @@ NTSTATUS WINAPI wow64_NtGdiTransformPoints( UINT *args )
     return NtGdiTransformPoints( hdc, points_in, points_out, count, mode );
 }
 
+NTSTATUS WINAPI wow64_NtGdiUpdateColors( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiUpdateColors( hdc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiWidenPath( UINT *args )
 {
     HDC hdc = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index cfd3edd6bab2..b219f844a527 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -37,12 +37,14 @@
     SYSCALL_ENTRY( NtGdiCreateBitmap ) \
     SYSCALL_ENTRY( NtGdiCreateClientObj ) \
     SYSCALL_ENTRY( NtGdiCreateCompatibleBitmap ) \
+    SYSCALL_ENTRY( NtGdiCreateCompatibleDC ) \
     SYSCALL_ENTRY( NtGdiCreateDIBBrush ) \
     SYSCALL_ENTRY( NtGdiCreateDIBSection ) \
     SYSCALL_ENTRY( NtGdiCreateDIBitmapInternal ) \
     SYSCALL_ENTRY( NtGdiCreateEllipticRgn ) \
     SYSCALL_ENTRY( NtGdiCreateHalftonePalette ) \
     SYSCALL_ENTRY( NtGdiCreateHatchBrushInternal ) \
+    SYSCALL_ENTRY( NtGdiCreateMetafileDC ) \
     SYSCALL_ENTRY( NtGdiCreatePaletteInternal ) \
     SYSCALL_ENTRY( NtGdiCreatePatternBrushInternal ) \
     SYSCALL_ENTRY( NtGdiCreatePen ) \
@@ -117,6 +119,8 @@
     SYSCALL_ENTRY( NtGdiRectangle ) \
     SYSCALL_ENTRY( NtGdiRemoveFontMemResourceEx ) \
     SYSCALL_ENTRY( NtGdiRemoveFontResourceW ) \
+    SYSCALL_ENTRY( NtGdiResetDC ) \
+    SYSCALL_ENTRY( NtGdiRestoreDC ) \
     SYSCALL_ENTRY( NtGdiRoundRect ) \
     SYSCALL_ENTRY( NtGdiSaveDC ) \
     SYSCALL_ENTRY( NtGdiScaleViewportExtEx ) \
@@ -144,6 +148,7 @@
     SYSCALL_ENTRY( NtGdiSwapBuffers ) \
     SYSCALL_ENTRY( NtGdiTransformPoints ) \
     SYSCALL_ENTRY( NtGdiTransparentBlt ) \
+    SYSCALL_ENTRY( NtGdiUpdateColors ) \
     SYSCALL_ENTRY( NtGdiWidenPath ) \
     SYSCALL_ENTRY( NtUserActivateKeyboardLayout ) \
     SYSCALL_ENTRY( NtUserAddClipboardFormatListener ) \

From 534d49e428e35053149788ab703445ce4098edc1 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 23:31:47 +0200
Subject: [PATCH 12/19] win32u: Use syscall interface for more GDI object
 functions.

---
 dlls/win32u/gdiobj.c         |  5 -----
 dlls/win32u/syscall.c        |  5 +++++
 dlls/win32u/win32u.spec      | 10 +++++-----
 dlls/win32u/win32u_private.h |  5 -----
 dlls/win32u/wrappers.c       | 30 ----------------------------
 dlls/wow64win/gdi.c          | 38 ++++++++++++++++++++++++++++++++++++
 dlls/wow64win/syscall.h      |  5 +++++
 7 files changed, 53 insertions(+), 45 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index 431bd9360c91..c45c82bf87b6 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1030,7 +1030,6 @@ BOOL WINAPI NtGdiSetColorAdjustment( HDC hdc, const COLORADJUSTMENT *ca )
 
 static struct unix_funcs unix_funcs =
 {
-    NtGdiDeleteObjectApp,
     NtGdiDoPalette,
     NtGdiEnumFonts,
     NtGdiExcludeClipRect,
@@ -1065,14 +1064,10 @@ static struct unix_funcs unix_funcs =
     NtGdiPtVisible,
     NtGdiRectVisible,
     NtGdiResizePalette,
-    NtGdiSelectBrush,
-    NtGdiSelectFont,
-    NtGdiSelectPen,
     NtGdiSetBoundsRect,
     NtGdiSetDeviceGammaRamp,
     NtGdiSetLayout,
     NtGdiSetSystemPaletteUse,
-    NtGdiUnrealizeObject,
     NtUserDrawCaptionTemp,
     NtUserDrawMenuBarTemp,
     NtUserEndPaint,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 4de87edaa411..18852dfb760f 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -80,6 +80,7 @@ static void * const syscalls[] =
     NtGdiDdDDISetQueuedLimit,
     NtGdiDdDDISetVidPnSourceOwner,
     NtGdiDeleteClientObj,
+    NtGdiDeleteObjectApp,
     NtGdiDescribePixelFormat,
     NtGdiDrawStream,
     NtGdiEllipse,
@@ -140,7 +141,10 @@ static void * const syscalls[] =
     NtGdiScaleViewportExtEx,
     NtGdiScaleWindowExtEx,
     NtGdiSelectBitmap,
+    NtGdiSelectBrush,
     NtGdiSelectClipPath,
+    NtGdiSelectFont,
+    NtGdiSelectPen,
     NtGdiSetBitmapBits,
     NtGdiSetBitmapDimension,
     NtGdiSetBrushOrg,
@@ -162,6 +166,7 @@ static void * const syscalls[] =
     NtGdiSwapBuffers,
     NtGdiTransformPoints,
     NtGdiTransparentBlt,
+    NtGdiUnrealizeObject,
     NtGdiUpdateColors,
     NtGdiWidenPath,
     NtUserActivateKeyboardLayout,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index aeb9dde70f2d..b1612a4f0eb7 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -367,7 +367,7 @@
 @ stdcall -syscall NtGdiDeleteClientObj(long)
 @ stub NtGdiDeleteColorSpace
 @ stub NtGdiDeleteColorTransform
-@ stdcall NtGdiDeleteObjectApp(long )
+@ stdcall -syscall NtGdiDeleteObjectApp(long )
 @ stdcall -syscall NtGdiDescribePixelFormat(long long long ptr)
 @ stub NtGdiDestroyOPMProtectedOutput
 @ stub NtGdiDestroyPhysicalMonitor
@@ -585,10 +585,10 @@
 @ stdcall -syscall NtGdiScaleViewportExtEx(long long long long long ptr)
 @ stdcall -syscall NtGdiScaleWindowExtEx(long long long long long ptr)
 @ stdcall -syscall NtGdiSelectBitmap(long long)
-@ stdcall NtGdiSelectBrush(long long)
+@ stdcall -syscall NtGdiSelectBrush(long long)
 @ stdcall -syscall NtGdiSelectClipPath(long long)
-@ stdcall NtGdiSelectFont(long long)
-@ stdcall NtGdiSelectPen(long long)
+@ stdcall -syscall NtGdiSelectFont(long long)
+@ stdcall -syscall NtGdiSelectPen(long long)
 @ stub NtGdiSetBitmapAttributes
 @ stdcall -syscall NtGdiSetBitmapBits(long long ptr)
 @ stdcall -syscall NtGdiSetBitmapDimension(long long long ptr)
@@ -630,7 +630,7 @@
 @ stub NtGdiUMPDEngFreeUserMem
 @ stub NtGdiUnloadPrinterDriver
 @ stub NtGdiUnmapMemFont
-@ stdcall NtGdiUnrealizeObject(long)
+@ stdcall -syscall NtGdiUnrealizeObject(long)
 @ stdcall -syscall NtGdiUpdateColors(long)
 @ stub NtGdiUpdateTransform
 @ stdcall -syscall NtGdiWidenPath(long)
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 06190c7e67c8..9cf99dc85e4a 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -35,7 +35,6 @@
 struct unix_funcs
 {
     /* win32u functions */
-    BOOL     (WINAPI *pNtGdiDeleteObjectApp)( HGDIOBJ obj );
     LONG     (WINAPI *pNtGdiDoPalette)( HGDIOBJ handle, WORD start, WORD count, void *entries,
                                         DWORD func, BOOL inbound );
     BOOL     (WINAPI *pNtGdiEnumFonts)( HDC hdc, ULONG type, ULONG win32_compat, ULONG face_name_len,
@@ -81,14 +80,10 @@ struct unix_funcs
     BOOL     (WINAPI *pNtGdiPtVisible)( HDC hdc, INT x, INT y );
     BOOL     (WINAPI *pNtGdiRectVisible)( HDC hdc, const RECT *rect );
     BOOL     (WINAPI *pNtGdiResizePalette)( HPALETTE palette, UINT count );
-    HGDIOBJ  (WINAPI *pNtGdiSelectBrush)( HDC hdc, HGDIOBJ handle );
-    HGDIOBJ  (WINAPI *pNtGdiSelectFont)( HDC hdc, HGDIOBJ handle );
-    HGDIOBJ  (WINAPI *pNtGdiSelectPen)( HDC hdc, HGDIOBJ handle );
     UINT     (WINAPI *pNtGdiSetBoundsRect)( HDC hdc, const RECT *rect, UINT flags );
     BOOL     (WINAPI *pNtGdiSetDeviceGammaRamp)( HDC hdc, void *ptr );
     DWORD    (WINAPI *pNtGdiSetLayout)( HDC hdc, LONG wox, DWORD layout );
     UINT     (WINAPI *pNtGdiSetSystemPaletteUse)( HDC hdc, UINT use );
-    BOOL     (WINAPI *pNtGdiUnrealizeObject)( HGDIOBJ obj );
     BOOL     (WINAPI *pNtUserDrawCaptionTemp)( HWND hwnd, HDC hdc, const RECT *rect, HFONT font,
                                                HICON icon, const WCHAR *str, UINT flags );
     DWORD    (WINAPI *pNtUserDrawMenuBarTemp)( HWND hwnd, HDC hdc, RECT *rect, HMENU handle, HFONT font );
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index 27da68d65d53..b20bd2a82b1a 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -24,12 +24,6 @@
 
 static const struct unix_funcs *unix_funcs;
 
-BOOL WINAPI NtGdiDeleteObjectApp( HGDIOBJ obj )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiDeleteObjectApp( obj );
-}
-
 LONG WINAPI NtGdiDoPalette( HGDIOBJ handle, WORD start, WORD count, void *entries,
                             DWORD func, BOOL inbound )
 {
@@ -253,24 +247,6 @@ BOOL WINAPI NtGdiResizePalette( HPALETTE palette, UINT count )
     return unix_funcs->pNtGdiResizePalette( palette, count );
 }
 
-HGDIOBJ WINAPI NtGdiSelectBrush( HDC hdc, HGDIOBJ handle )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiSelectBrush( hdc, handle );
-}
-
-HGDIOBJ WINAPI NtGdiSelectFont( HDC hdc, HGDIOBJ handle )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiSelectFont( hdc, handle );
-}
-
-HGDIOBJ WINAPI NtGdiSelectPen( HDC hdc, HGDIOBJ handle )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiSelectPen( hdc, handle );
-}
-
 UINT WINAPI NtGdiSetBoundsRect( HDC hdc, const RECT *rect, UINT flags )
 {
     if (!unix_funcs) return 0;
@@ -295,12 +271,6 @@ UINT WINAPI NtGdiSetSystemPaletteUse( HDC hdc, UINT use )
     return unix_funcs->pNtGdiSetSystemPaletteUse( hdc, use );
 }
 
-BOOL WINAPI NtGdiUnrealizeObject( HGDIOBJ obj )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiUnrealizeObject( obj );
-}
-
 BOOL WINAPI NtUserDrawCaptionTemp( HWND hwnd, HDC hdc, const RECT *rect, HFONT font,
                                    HICON icon, const WCHAR *str, UINT flags )
 {
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index d8fd697a3c19..e182dcf19a37 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -622,6 +622,13 @@ NTSTATUS WINAPI wow64_NtGdiDeleteClientObj( UINT *args )
     return NtGdiDeleteClientObj( obj );
 }
 
+NTSTATUS WINAPI wow64_NtGdiDeleteObjectApp( UINT *args )
+{
+    HGDIOBJ obj = get_handle( &args );
+
+    return NtGdiDeleteObjectApp( obj );
+}
+
 NTSTATUS WINAPI wow64_NtGdiDescribePixelFormat( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1303,6 +1310,14 @@ NTSTATUS WINAPI wow64_NtGdiSelectBitmap( UINT *args )
     return HandleToUlong( NtGdiSelectBitmap( hdc, handle ));
 }
 
+NTSTATUS WINAPI wow64_NtGdiSelectBrush( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HGDIOBJ handle = get_handle( &args );
+
+    return HandleToUlong( NtGdiSelectBrush( hdc, handle ));
+}
+
 NTSTATUS WINAPI wow64_NtGdiSelectClipPath( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1311,6 +1326,22 @@ NTSTATUS WINAPI wow64_NtGdiSelectClipPath( UINT *args )
     return NtGdiSelectClipPath( hdc, mode );
 }
 
+NTSTATUS WINAPI wow64_NtGdiSelectFont( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HGDIOBJ handle = get_handle( &args );
+
+    return HandleToUlong( NtGdiSelectFont( hdc, handle ));
+}
+
+NTSTATUS WINAPI wow64_NtGdiSelectPen( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HGDIOBJ handle = get_handle( &args );
+
+    return HandleToUlong( NtGdiSelectPen( hdc, handle ));
+}
+
 NTSTATUS WINAPI wow64_NtGdiSetBitmapBits( UINT *args )
 {
     HBITMAP hbitmap = get_handle( &args );
@@ -1561,6 +1592,13 @@ NTSTATUS WINAPI wow64_NtGdiTransformPoints( UINT *args )
     return NtGdiTransformPoints( hdc, points_in, points_out, count, mode );
 }
 
+NTSTATUS WINAPI wow64_NtGdiUnrealizeObject( UINT *args )
+{
+    HGDIOBJ obj = get_handle( &args );
+
+    return NtGdiUnrealizeObject( obj );
+}
+
 NTSTATUS WINAPI wow64_NtGdiUpdateColors( UINT *args )
 {
     HDC hdc = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index b219f844a527..b97291e04bd3 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -66,6 +66,7 @@
     SYSCALL_ENTRY( NtGdiDdDDISetQueuedLimit ) \
     SYSCALL_ENTRY( NtGdiDdDDISetVidPnSourceOwner ) \
     SYSCALL_ENTRY( NtGdiDeleteClientObj ) \
+    SYSCALL_ENTRY( NtGdiDeleteObjectApp ) \
     SYSCALL_ENTRY( NtGdiDescribePixelFormat ) \
     SYSCALL_ENTRY( NtGdiDrawStream ) \
     SYSCALL_ENTRY( NtGdiEllipse ) \
@@ -126,7 +127,10 @@
     SYSCALL_ENTRY( NtGdiScaleViewportExtEx ) \
     SYSCALL_ENTRY( NtGdiScaleWindowExtEx ) \
     SYSCALL_ENTRY( NtGdiSelectBitmap ) \
+    SYSCALL_ENTRY( NtGdiSelectBrush ) \
     SYSCALL_ENTRY( NtGdiSelectClipPath ) \
+    SYSCALL_ENTRY( NtGdiSelectFont ) \
+    SYSCALL_ENTRY( NtGdiSelectPen ) \
     SYSCALL_ENTRY( NtGdiSetBitmapBits ) \
     SYSCALL_ENTRY( NtGdiSetBitmapDimension ) \
     SYSCALL_ENTRY( NtGdiSetBrushOrg ) \
@@ -148,6 +152,7 @@
     SYSCALL_ENTRY( NtGdiSwapBuffers ) \
     SYSCALL_ENTRY( NtGdiTransformPoints ) \
     SYSCALL_ENTRY( NtGdiTransparentBlt ) \
+    SYSCALL_ENTRY( NtGdiUnrealizeObject ) \
     SYSCALL_ENTRY( NtGdiUpdateColors ) \
     SYSCALL_ENTRY( NtGdiWidenPath ) \
     SYSCALL_ENTRY( NtUserActivateKeyboardLayout ) \

From ff5a68fe8d3110b928cfde61bafe1d1ae000aaf0 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Sun, 31 Jul 2022 23:53:14 +0200
Subject: [PATCH 13/19] win32u: Use syscall interface for more font functions.

---
 dlls/win32u/gdiobj.c         |  10 --
 dlls/win32u/syscall.c        |  10 ++
 dlls/win32u/win32u.spec      |  20 ++--
 dlls/win32u/win32u_private.h |  16 ---
 dlls/win32u/wrappers.c       |  67 ------------
 dlls/wow64win/gdi.c          | 194 +++++++++++++++++++++++++++++++++++
 dlls/wow64win/syscall.h      |  10 ++
 7 files changed, 224 insertions(+), 103 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index c45c82bf87b6..8d3d2719728b 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1031,18 +1031,13 @@ BOOL WINAPI NtGdiSetColorAdjustment( HDC hdc, const COLORADJUSTMENT *ca )
 static struct unix_funcs unix_funcs =
 {
     NtGdiDoPalette,
-    NtGdiEnumFonts,
     NtGdiExcludeClipRect,
     NtGdiExtEscape,
-    NtGdiExtTextOutW,
     NtGdiExtSelectClipRgn,
     NtGdiFontIsLinked,
     NtGdiGetAndSetDCDword,
     NtGdiGetAppClipBox,
     NtGdiGetBoundsRect,
-    NtGdiGetCharABCWidthsW,
-    NtGdiGetCharWidthW,
-    NtGdiGetCharWidthInfo,
     NtGdiGetDeviceCaps,
     NtGdiGetDeviceGammaRamp,
     NtGdiGetFontData,
@@ -1051,14 +1046,9 @@ static struct unix_funcs unix_funcs =
     NtGdiGetGlyphOutline,
     NtGdiGetKerningPairs,
     NtGdiGetNearestColor,
-    NtGdiGetOutlineTextMetricsInternalW,
     NtGdiGetRandomRgn,
     NtGdiGetRasterizerCaps,
     NtGdiGetRealizationInfo,
-    NtGdiGetTextCharsetInfo,
-    NtGdiGetTextExtentExW,
-    NtGdiGetTextFaceW,
-    NtGdiGetTextMetricsW,
     NtGdiIntersectClipRect,
     NtGdiOffsetClipRgn,
     NtGdiPtVisible,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 18852dfb760f..198832696327 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -87,11 +87,13 @@ static void * const syscalls[] =
     NtGdiEndDoc,
     NtGdiEndPage,
     NtGdiEndPath,
+    NtGdiEnumFonts,
     NtGdiEqualRgn,
     NtGdiExtCreatePen,
     NtGdiExtCreateRegion,
     NtGdiExtFloodFill,
     NtGdiExtGetObjectW,
+    NtGdiExtTextOutW,
     NtGdiFillPath,
     NtGdiFillRgn,
     NtGdiFlattenPath,
@@ -99,6 +101,9 @@ static void * const syscalls[] =
     NtGdiFrameRgn,
     NtGdiGetBitmapBits,
     NtGdiGetBitmapDimension,
+    NtGdiGetCharABCWidthsW,
+    NtGdiGetCharWidthInfo,
+    NtGdiGetCharWidthW,
     NtGdiGetColorAdjustment,
     NtGdiGetDCDword,
     NtGdiGetDCObject,
@@ -107,12 +112,17 @@ static void * const syscalls[] =
     NtGdiGetFontFileData,
     NtGdiGetFontFileInfo,
     NtGdiGetNearestPaletteIndex,
+    NtGdiGetOutlineTextMetricsInternalW,
     NtGdiGetPath,
     NtGdiGetPixel,
     NtGdiGetRegionData,
     NtGdiGetRgnBox,
     NtGdiGetSpoolMessage,
     NtGdiGetSystemPaletteUse,
+    NtGdiGetTextCharsetInfo,
+    NtGdiGetTextExtentExW,
+    NtGdiGetTextFaceW,
+    NtGdiGetTextMetricsW,
     NtGdiGetTransform,
     NtGdiGradientFill,
     NtGdiHfontCreate,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index b1612a4f0eb7..7913b7c630f2 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -413,7 +413,7 @@
 @ stub NtGdiEngTransparentBlt
 @ stub NtGdiEngUnlockSurface
 @ stub NtGdiEnsureDpiDepDefaultGuiFontForPlateau
-@ stdcall NtGdiEnumFonts(long long long long wstr long ptr ptr)
+@ stdcall -syscall NtGdiEnumFonts(long long long long wstr long ptr ptr)
 @ stub NtGdiEnumObjects
 @ stdcall -syscall NtGdiEqualRgn(long long)
 @ stub NtGdiEudcLoadUnloadLink
@@ -424,7 +424,7 @@
 @ stdcall -syscall NtGdiExtFloodFill(long long long long long)
 @ stdcall -syscall NtGdiExtGetObjectW(long long ptr)
 @ stdcall NtGdiExtSelectClipRgn(long long long)
-@ stdcall NtGdiExtTextOutW(long long long long ptr ptr long ptr long)
+@ stdcall -syscall NtGdiExtTextOutW(long long long long ptr ptr long ptr long)
 @ stub NtGdiFONTOBJ_cGetAllGlyphHandles
 @ stub NtGdiFONTOBJ_cGetGlyphs
 @ stub NtGdiFONTOBJ_pQueryGlyphAttrs
@@ -453,10 +453,10 @@
 @ stub NtGdiGetCertificateByHandle
 @ stub NtGdiGetCertificateSize
 @ stub NtGdiGetCertificateSizeByHandle
-@ stdcall NtGdiGetCharABCWidthsW(long long long ptr long ptr)
+@ stdcall -syscall NtGdiGetCharABCWidthsW(long long long ptr long ptr)
 @ stub NtGdiGetCharSet
-@ stdcall NtGdiGetCharWidthInfo(long ptr)
-@ stdcall NtGdiGetCharWidthW(long long long ptr long ptr)
+@ stdcall -syscall NtGdiGetCharWidthInfo(long ptr)
+@ stdcall -syscall NtGdiGetCharWidthW(long long long ptr long ptr)
 @ stub NtGdiGetCharacterPlacementW
 @ stdcall -syscall NtGdiGetColorAdjustment(long ptr)
 @ stub NtGdiGetColorSpaceforBitmap
@@ -496,7 +496,7 @@
 @ stub NtGdiGetOPMInformation
 @ stub NtGdiGetOPMRandomNumber
 @ stub NtGdiGetObjectBitmapHandle
-@ stdcall NtGdiGetOutlineTextMetricsInternalW(long long ptr long)
+@ stdcall -syscall NtGdiGetOutlineTextMetricsInternalW(long long ptr long)
 @ stdcall -syscall NtGdiGetPath(long ptr ptr long)
 @ stub NtGdiGetPerBandInfo
 @ stub NtGdiGetPhysicalMonitorDescription
@@ -515,11 +515,11 @@
 @ stub NtGdiGetStringBitmapW
 @ stub NtGdiGetSuggestedOPMProtectedOutputArraySize
 @ stdcall -syscall NtGdiGetSystemPaletteUse(long)
-@ stdcall NtGdiGetTextCharsetInfo(long ptr long)
+@ stdcall -syscall NtGdiGetTextCharsetInfo(long ptr long)
 @ stub NtGdiGetTextExtent
-@ stdcall NtGdiGetTextExtentExW(long wstr long long ptr ptr ptr long)
-@ stdcall NtGdiGetTextFaceW(long long ptr long)
-@ stdcall NtGdiGetTextMetricsW(long ptr long)
+@ stdcall -syscall NtGdiGetTextExtentExW(long wstr long long ptr ptr ptr long)
+@ stdcall -syscall NtGdiGetTextFaceW(long long ptr long)
+@ stdcall -syscall NtGdiGetTextMetricsW(long ptr long)
 @ stdcall -syscall NtGdiGetTransform(long long ptr)
 @ stub NtGdiGetUFI
 @ stub NtGdiGetUFIPathname
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 9cf99dc85e4a..964a609958ff 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -37,23 +37,14 @@ struct unix_funcs
     /* win32u functions */
     LONG     (WINAPI *pNtGdiDoPalette)( HGDIOBJ handle, WORD start, WORD count, void *entries,
                                         DWORD func, BOOL inbound );
-    BOOL     (WINAPI *pNtGdiEnumFonts)( HDC hdc, ULONG type, ULONG win32_compat, ULONG face_name_len,
-                                        const WCHAR *face_name, ULONG charset, ULONG *count, void *buf );
     INT      (WINAPI *pNtGdiExcludeClipRect)( HDC hdc, INT left, INT top, INT right, INT bottom );
     INT      (WINAPI *pNtGdiExtEscape)( HDC hdc, WCHAR *driver, INT driver_id, INT escape, INT input_size,
                                         const char *input, INT output_size, char *output );
-    BOOL     (WINAPI *pNtGdiExtTextOutW)( HDC hdc, INT x, INT y, UINT flags, const RECT *rect,
-                                          const WCHAR *str, UINT count, const INT *dx, DWORD cp );
     INT      (WINAPI *pNtGdiExtSelectClipRgn)( HDC hdc, HRGN region, INT mode );
     BOOL     (WINAPI *pNtGdiFontIsLinked)( HDC hdc );
     BOOL     (WINAPI *pNtGdiGetAndSetDCDword)( HDC hdc, UINT method, DWORD value, DWORD *result );
     INT      (WINAPI *pNtGdiGetAppClipBox)( HDC hdc, RECT *rect );
     UINT     (WINAPI *pNtGdiGetBoundsRect)( HDC hdc, RECT *rect, UINT flags );
-    BOOL     (WINAPI *pNtGdiGetCharABCWidthsW)( HDC hdc, UINT first, UINT last, WCHAR *chars,
-                                                ULONG flags, void *buffer );
-    BOOL     (WINAPI *pNtGdiGetCharWidthW)( HDC hdc, UINT first_char, UINT last_char, WCHAR *chars,
-                                            ULONG flags, void *buffer );
-    BOOL     (WINAPI *pNtGdiGetCharWidthInfo)( HDC hdc, struct char_width_info *info );
     INT      (WINAPI *pNtGdiGetDeviceCaps)( HDC hdc, INT cap );
     BOOL     (WINAPI *pNtGdiGetDeviceGammaRamp)( HDC hdc, void *ptr );
     DWORD    (WINAPI *pNtGdiGetFontData)( HDC hdc, DWORD table, DWORD offset, void *buffer, DWORD length );
@@ -65,16 +56,9 @@ struct unix_funcs
                                               BOOL ignore_rotation );
     DWORD    (WINAPI *pNtGdiGetKerningPairs)( HDC hdc, DWORD count, KERNINGPAIR *kern_pair );
     COLORREF (WINAPI *pNtGdiGetNearestColor)( HDC hdc, COLORREF color );
-    UINT     (WINAPI *pNtGdiGetOutlineTextMetricsInternalW)( HDC hdc, UINT cbData,
-                                                             OUTLINETEXTMETRICW *otm, ULONG opts );
     INT      (WINAPI *pNtGdiGetRandomRgn)( HDC hdc, HRGN region, INT code );
     BOOL     (WINAPI *pNtGdiGetRasterizerCaps)( RASTERIZER_STATUS *status, UINT size );
     BOOL     (WINAPI *pNtGdiGetRealizationInfo)( HDC hdc, struct font_realization_info *info );
-    UINT     (WINAPI *pNtGdiGetTextCharsetInfo)( HDC hdc, FONTSIGNATURE *fs, DWORD flags );
-    BOOL     (WINAPI *pNtGdiGetTextExtentExW)( HDC hdc, const WCHAR *str, INT count, INT max_ext,
-                                               INT *nfit, INT *dxs, SIZE *size, UINT flags );
-    INT      (WINAPI *pNtGdiGetTextFaceW)( HDC hdc, INT count, WCHAR *name, BOOL alias_name );
-    BOOL     (WINAPI *pNtGdiGetTextMetricsW)( HDC hdc, TEXTMETRICW *metrics, ULONG flags );
     INT      (WINAPI *pNtGdiIntersectClipRect)( HDC hdc, INT left, INT top, INT right, INT bottom );
     INT      (WINAPI *pNtGdiOffsetClipRgn)( HDC hdc, INT x, INT y );
     BOOL     (WINAPI *pNtGdiPtVisible)( HDC hdc, INT x, INT y );
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index b20bd2a82b1a..d451dc4d3cee 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -37,14 +37,6 @@ BOOL WINAPI NtUserEndPaint( HWND hwnd, const PAINTSTRUCT *ps )
     return unix_funcs->pNtUserEndPaint( hwnd, ps );
 }
 
-BOOL WINAPI NtGdiEnumFonts( HDC hdc, ULONG type, ULONG win32_compat, ULONG face_name_len,
-                            const WCHAR *face_name, ULONG charset, ULONG *count, void *buf )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiEnumFonts( hdc, type, win32_compat, face_name_len, face_name,
-                                        charset, count, buf );
-}
-
 INT WINAPI NtGdiExcludeClipRect( HDC hdc, INT left, INT top, INT right, INT bottom )
 {
     if (!unix_funcs) return ERROR;
@@ -59,13 +51,6 @@ INT WINAPI NtGdiExtEscape( HDC hdc, WCHAR *driver, INT driver_id, INT escape, IN
                                         output_size, output );
 }
 
-BOOL WINAPI NtGdiExtTextOutW( HDC hdc, INT x, INT y, UINT flags, const RECT *rect,
-                              const WCHAR *str, UINT count, const INT *dx, DWORD cp )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiExtTextOutW( hdc, x, y, flags, rect, str, count, dx, cp );
-}
-
 INT WINAPI NtGdiExtSelectClipRgn( HDC hdc, HRGN region, INT mode )
 {
     if (!unix_funcs) return ERROR;
@@ -96,26 +81,6 @@ UINT WINAPI NtGdiGetBoundsRect( HDC hdc, RECT *rect, UINT flags )
     return unix_funcs->pNtGdiGetBoundsRect( hdc, rect, flags );
 }
 
-BOOL WINAPI NtGdiGetCharABCWidthsW( HDC hdc, UINT first, UINT last, WCHAR *chars,
-                                    ULONG flags, void *buffer )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiGetCharABCWidthsW( hdc, first, last, chars, flags, buffer );
-}
-
-BOOL WINAPI NtGdiGetCharWidthW( HDC hdc, UINT first_char, UINT last_char, WCHAR *chars,
-                                ULONG flags, void *buffer )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiGetCharWidthW( hdc, first_char, last_char, chars, flags, buffer );
-}
-
-BOOL WINAPI NtGdiGetCharWidthInfo( HDC hdc, struct char_width_info *info )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiGetCharWidthInfo( hdc, info );
-}
-
 INT WINAPI NtGdiGetDeviceCaps( HDC hdc, INT cap )
 {
     if (!unix_funcs) return 0;
@@ -167,13 +132,6 @@ COLORREF WINAPI NtGdiGetNearestColor( HDC hdc, COLORREF color )
     return unix_funcs->pNtGdiGetNearestColor( hdc, color );
 }
 
-UINT WINAPI NtGdiGetOutlineTextMetricsInternalW( HDC hdc, UINT cbData,
-                                                 OUTLINETEXTMETRICW *otm, ULONG opts )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiGetOutlineTextMetricsInternalW( hdc, cbData, otm, opts );
-}
-
 INT WINAPI NtGdiGetRandomRgn( HDC hdc, HRGN region, INT code )
 {
     if (!unix_funcs) return -1;
@@ -192,31 +150,6 @@ BOOL WINAPI NtGdiGetRealizationInfo( HDC hdc, struct font_realization_info *info
     return unix_funcs->pNtGdiGetRealizationInfo( hdc, info );
 }
 
-UINT WINAPI NtGdiGetTextCharsetInfo( HDC hdc, FONTSIGNATURE *fs, DWORD flags )
-{
-    if (!unix_funcs) return DEFAULT_CHARSET;
-    return unix_funcs->pNtGdiGetTextCharsetInfo( hdc, fs, flags );
-}
-
-BOOL WINAPI NtGdiGetTextExtentExW( HDC hdc, const WCHAR *str, INT count, INT max_ext,
-                                   INT *nfit, INT *dxs, SIZE *size, UINT flags )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiGetTextExtentExW( hdc, str, count, max_ext, nfit, dxs, size, flags );
-}
-
-INT WINAPI NtGdiGetTextFaceW( HDC hdc, INT count, WCHAR *name, BOOL alias_name )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiGetTextFaceW( hdc, count, name, alias_name );
-}
-
-BOOL WINAPI NtGdiGetTextMetricsW( HDC hdc, TEXTMETRICW *metrics, ULONG flags )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiGetTextMetricsW( hdc, metrics, flags );
-}
-
 INT WINAPI NtGdiIntersectClipRect( HDC hdc, INT left, INT top, INT right, INT bottom )
 {
     if (!unix_funcs) return ERROR;
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index e182dcf19a37..b7348b5c0be3 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -49,6 +49,42 @@ typedef struct
     DWORD    elpStyleEntry[1];
 } EXTLOGPEN32;
 
+typedef struct
+{
+    UINT          otmSize;
+    TEXTMETRICW   otmTextMetrics;
+    BYTE          otmFiller;
+    PANOSE        otmPanoseNumber;
+    UINT          otmfsSelection;
+    UINT          otmfsType;
+    INT           otmsCharSlopeRise;
+    INT           otmsCharSlopeRun;
+    INT           otmItalicAngle;
+    UINT          otmEMSquare;
+    INT           otmAscent;
+    INT           otmDescent;
+    UINT          otmLineGap;
+    UINT          otmsCapEmHeight;
+    UINT          otmsXHeight;
+    RECT          otmrcFontBox;
+    INT           otmMacAscent;
+    INT           otmMacDescent;
+    UINT          otmMacLineGap;
+    UINT          otmusMinimumPPEM;
+    POINT         otmptSubscriptSize;
+    POINT         otmptSubscriptOffset;
+    POINT         otmptSuperscriptSize;
+    POINT         otmptSuperscriptOffset;
+    UINT          otmsStrikeoutSize;
+    INT           otmsStrikeoutPosition;
+    INT           otmsUnderscoreSize;
+    INT           otmsUnderscorePosition;
+    ULONG         otmpFamilyName;
+    ULONG         otmpFaceName;
+    ULONG         otmpStyleName;
+    ULONG         otmpFullName;
+} OUTLINETEXTMETRIC32;
+
 
 static DWORD gdi_handle_type( HGDIOBJ obj )
 {
@@ -680,6 +716,20 @@ NTSTATUS WINAPI wow64_NtGdiEndPath( UINT *args )
     return NtGdiEndPath( hdc );
 }
 
+NTSTATUS WINAPI wow64_NtGdiEnumFonts( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    ULONG type = get_ulong( &args );
+    ULONG win32_compat = get_ulong( &args );
+    ULONG face_name_len = get_ulong( &args );
+    const WCHAR *face_name = get_ptr( &args );
+    ULONG charset = get_ulong( &args );
+    ULONG *count = get_ptr( &args );
+    void *buf = get_ptr( &args );
+
+    return NtGdiEnumFonts( hdc, type, win32_compat, face_name_len, face_name, charset, count, buf );
+}
+
 NTSTATUS WINAPI wow64_NtGdiEqualRgn( UINT *args )
 {
     HRGN hrgn1 = get_handle( &args );
@@ -820,6 +870,21 @@ NTSTATUS WINAPI wow64_NtGdiExtGetObjectW( UINT *args )
     }
 }
 
+NTSTATUS WINAPI wow64_NtGdiExtTextOutW( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x = get_ulong( &args );
+    INT y = get_ulong( &args );
+    UINT flags = get_ulong( &args );
+    const RECT *rect = get_ptr( &args );
+    const WCHAR *str = get_ptr( &args );
+    UINT count = get_ulong( &args );
+    const INT *dx = get_ptr( &args );
+    DWORD cp = get_ulong( &args );
+
+    return NtGdiExtTextOutW( hdc, x, y, flags, rect, str, count, dx, cp );
+}
+
 NTSTATUS WINAPI wow64_NtGdiFillPath( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -876,6 +941,38 @@ NTSTATUS WINAPI wow64_NtGdiGetBitmapDimension( UINT *args )
     return NtGdiGetBitmapDimension( bitmap, size );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetCharABCWidthsW( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    UINT first = get_ulong( &args );
+    UINT last = get_ulong( &args );
+    WCHAR *chars = get_ptr( &args );
+    ULONG flags = get_ulong( &args );
+    void *buffer = get_ptr( &args );
+
+    return NtGdiGetCharABCWidthsW( hdc, first, last, chars, flags, buffer );
+}
+
+NTSTATUS WINAPI wow64_NtGdiGetCharWidthW( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    UINT first_char = get_ulong( &args );
+    UINT last_char = get_ulong( &args );
+    WCHAR *chars = get_ptr( &args );
+    ULONG flags = get_ulong( &args );
+    void *buffer = get_ptr( &args );
+
+    return NtGdiGetCharWidthW( hdc, first_char, last_char, chars, flags, buffer );
+}
+
+NTSTATUS WINAPI wow64_NtGdiGetCharWidthInfo( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    struct char_width_info *info = get_ptr( &args );
+
+    return NtGdiGetCharWidthInfo( hdc, info );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetColorAdjustment( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -961,6 +1058,61 @@ NTSTATUS WINAPI wow64_NtGdiGetNearestPaletteIndex( UINT *args )
     return NtGdiGetNearestPaletteIndex( hpalette, color );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetOutlineTextMetricsInternalW( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    UINT size = get_ulong( &args );
+    OUTLINETEXTMETRIC32 *otm32 = get_ptr( &args );
+    ULONG opts = get_ulong( &args );
+
+    OUTLINETEXTMETRICW *otm, otm_buf;
+    UINT ret, size64;
+    static const size_t otm_size_diff = sizeof(*otm) - sizeof(*otm32);
+
+    if (!otm32)
+    {
+        size64 = 0;
+        otm = NULL;
+    }
+    else if (size <= sizeof(*otm32))
+    {
+        size64 = sizeof(otm_buf);
+        otm = &otm_buf;
+    }
+    else
+    {
+        size64 = size + otm_size_diff;
+        if (!(otm = Wow64AllocateTemp( size64 ))) return 0;
+    }
+
+    if (!(ret = NtGdiGetOutlineTextMetricsInternalW( hdc, size64, otm, opts ))) return 0;
+
+    if (otm32)
+    {
+        OUTLINETEXTMETRIC32 out;
+
+        memcpy( &out, otm, FIELD_OFFSET( OUTLINETEXTMETRIC32, otmpFamilyName ));
+        if (out.otmSize >= sizeof(*otm)) out.otmSize -= otm_size_diff;
+
+        if (!otm->otmpFamilyName) out.otmpFamilyName = 0;
+        else out.otmpFamilyName = PtrToUlong( otm->otmpFamilyName ) - otm_size_diff;
+
+        if (!otm->otmpFaceName) out.otmpFaceName = 0;
+        else out.otmpFaceName = PtrToUlong( otm->otmpFaceName ) - otm_size_diff;
+
+        if (!otm->otmpStyleName) out.otmpStyleName = 0;
+        else out.otmpStyleName = PtrToUlong( otm->otmpStyleName ) - otm_size_diff;
+
+        if (!otm->otmpFullName) out.otmpFullName = 0;
+        else out.otmpFullName = PtrToUlong( otm->otmpFullName ) - otm_size_diff;
+
+        memcpy( otm32, &out, min( size, sizeof(out) ));
+        if (ret > sizeof(*otm)) memcpy( otm32 + 1, otm + 1, ret - sizeof(*otm) );
+    }
+
+    return ret >= sizeof(*otm) ? ret - otm_size_diff : ret;
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetPath( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -980,6 +1132,48 @@ NTSTATUS WINAPI wow64_NtGdiGetPixel( UINT *args )
     return NtGdiGetPixel( hdc, x, y );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetTextCharsetInfo( UINT *args )
+{
+    HDC hdc = get_ptr( &args );
+    FONTSIGNATURE *fs = get_ptr( &args );
+    DWORD flags = get_ulong( &args );
+
+    return NtGdiGetTextCharsetInfo( hdc, fs, flags );
+}
+
+NTSTATUS WINAPI wow64_NtGdiGetTextExtentExW( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    const WCHAR *str = get_ptr( &args );
+    INT count = get_ulong( &args );
+    INT max_ext = get_ulong( &args );
+    INT *nfit = get_ptr( &args );
+    INT *dxs = get_ptr( &args );
+    SIZE *size = get_ptr( &args );
+    UINT flags = get_ulong( &args );
+
+    return NtGdiGetTextExtentExW( hdc, str, count, max_ext, nfit, dxs, size, flags );
+}
+
+NTSTATUS WINAPI wow64_NtGdiGetTextFaceW( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT count = get_ulong( &args );
+    WCHAR *name = get_ptr( &args );
+    BOOL alias_name = get_ulong( &args );
+
+    return NtGdiGetTextFaceW( hdc, count, name, alias_name );
+}
+
+NTSTATUS WINAPI wow64_NtGdiGetTextMetricsW( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    TEXTMETRICW *metrics = get_ptr( &args );
+    ULONG flags = get_ulong( &args );
+
+    return NtGdiGetTextMetricsW( hdc, metrics, flags );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGradientFill( UINT *args )
 {
     HDC hdc = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index b97291e04bd3..56dfe03c889f 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -73,11 +73,13 @@
     SYSCALL_ENTRY( NtGdiEndDoc ) \
     SYSCALL_ENTRY( NtGdiEndPage ) \
     SYSCALL_ENTRY( NtGdiEndPath ) \
+    SYSCALL_ENTRY( NtGdiEnumFonts ) \
     SYSCALL_ENTRY( NtGdiEqualRgn ) \
     SYSCALL_ENTRY( NtGdiExtCreatePen ) \
     SYSCALL_ENTRY( NtGdiExtCreateRegion ) \
     SYSCALL_ENTRY( NtGdiExtFloodFill ) \
     SYSCALL_ENTRY( NtGdiExtGetObjectW ) \
+    SYSCALL_ENTRY( NtGdiExtTextOutW ) \
     SYSCALL_ENTRY( NtGdiFillPath ) \
     SYSCALL_ENTRY( NtGdiFillRgn ) \
     SYSCALL_ENTRY( NtGdiFlattenPath ) \
@@ -85,6 +87,9 @@
     SYSCALL_ENTRY( NtGdiFrameRgn ) \
     SYSCALL_ENTRY( NtGdiGetBitmapBits ) \
     SYSCALL_ENTRY( NtGdiGetBitmapDimension ) \
+    SYSCALL_ENTRY( NtGdiGetCharABCWidthsW ) \
+    SYSCALL_ENTRY( NtGdiGetCharWidthInfo ) \
+    SYSCALL_ENTRY( NtGdiGetCharWidthW ) \
     SYSCALL_ENTRY( NtGdiGetColorAdjustment ) \
     SYSCALL_ENTRY( NtGdiGetDCDword ) \
     SYSCALL_ENTRY( NtGdiGetDCObject ) \
@@ -93,12 +98,17 @@
     SYSCALL_ENTRY( NtGdiGetFontFileData ) \
     SYSCALL_ENTRY( NtGdiGetFontFileInfo ) \
     SYSCALL_ENTRY( NtGdiGetNearestPaletteIndex ) \
+    SYSCALL_ENTRY( NtGdiGetOutlineTextMetricsInternalW ) \
     SYSCALL_ENTRY( NtGdiGetPath ) \
     SYSCALL_ENTRY( NtGdiGetPixel ) \
     SYSCALL_ENTRY( NtGdiGetRegionData ) \
     SYSCALL_ENTRY( NtGdiGetRgnBox ) \
     SYSCALL_ENTRY( NtGdiGetSpoolMessage ) \
     SYSCALL_ENTRY( NtGdiGetSystemPaletteUse ) \
+    SYSCALL_ENTRY( NtGdiGetTextCharsetInfo ) \
+    SYSCALL_ENTRY( NtGdiGetTextExtentExW ) \
+    SYSCALL_ENTRY( NtGdiGetTextFaceW ) \
+    SYSCALL_ENTRY( NtGdiGetTextMetricsW ) \
     SYSCALL_ENTRY( NtGdiGetTransform ) \
     SYSCALL_ENTRY( NtGdiGradientFill ) \
     SYSCALL_ENTRY( NtGdiHfontCreate ) \

From 5b35306d71ba0a73db2f6f9151f4d162f421040b Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Mon, 1 Aug 2022 00:05:05 +0200
Subject: [PATCH 14/19] win32u: Use syscall interface for more font functions.

---
 dlls/win32u/gdiobj.c         |  7 ----
 dlls/win32u/syscall.c        |  7 ++++
 dlls/win32u/win32u.spec      | 14 ++++----
 dlls/win32u/win32u_private.h | 10 ------
 dlls/win32u/wrappers.c       | 45 ------------------------
 dlls/wow64win/gdi.c          | 68 ++++++++++++++++++++++++++++++++++++
 dlls/wow64win/syscall.h      |  7 ++++
 7 files changed, 89 insertions(+), 69 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index 8d3d2719728b..7c255231f08e 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1034,21 +1034,14 @@ static struct unix_funcs unix_funcs =
     NtGdiExcludeClipRect,
     NtGdiExtEscape,
     NtGdiExtSelectClipRgn,
-    NtGdiFontIsLinked,
     NtGdiGetAndSetDCDword,
     NtGdiGetAppClipBox,
     NtGdiGetBoundsRect,
     NtGdiGetDeviceCaps,
     NtGdiGetDeviceGammaRamp,
-    NtGdiGetFontData,
-    NtGdiGetFontUnicodeRanges,
-    NtGdiGetGlyphIndicesW,
-    NtGdiGetGlyphOutline,
-    NtGdiGetKerningPairs,
     NtGdiGetNearestColor,
     NtGdiGetRandomRgn,
     NtGdiGetRasterizerCaps,
-    NtGdiGetRealizationInfo,
     NtGdiIntersectClipRect,
     NtGdiOffsetClipRgn,
     NtGdiPtVisible,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 198832696327..37fdeae01cd8 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -98,6 +98,7 @@ static void * const syscalls[] =
     NtGdiFillRgn,
     NtGdiFlattenPath,
     NtGdiFlush,
+    NtGdiFontIsLinked,
     NtGdiFrameRgn,
     NtGdiGetBitmapBits,
     NtGdiGetBitmapDimension,
@@ -109,12 +110,18 @@ static void * const syscalls[] =
     NtGdiGetDCObject,
     NtGdiGetDCPoint,
     NtGdiGetDIBitsInternal,
+    NtGdiGetFontData,
     NtGdiGetFontFileData,
     NtGdiGetFontFileInfo,
+    NtGdiGetFontUnicodeRanges,
+    NtGdiGetGlyphIndicesW,
+    NtGdiGetGlyphOutline,
+    NtGdiGetKerningPairs,
     NtGdiGetNearestPaletteIndex,
     NtGdiGetOutlineTextMetricsInternalW,
     NtGdiGetPath,
     NtGdiGetPixel,
+    NtGdiGetRealizationInfo,
     NtGdiGetRegionData,
     NtGdiGetRgnBox,
     NtGdiGetSpoolMessage,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index 7913b7c630f2..7018edeb6360 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -437,7 +437,7 @@
 @ stdcall -syscall NtGdiFillRgn(long long long)
 @ stdcall -syscall NtGdiFlattenPath(long)
 @ stdcall -syscall NtGdiFlush()
-@ stdcall NtGdiFontIsLinked(long)
+@ stdcall -syscall NtGdiFontIsLinked(long)
 @ stub NtGdiForceUFIMapping
 @ stdcall -syscall NtGdiFrameRgn(long long long long long)
 @ stub NtGdiFullscreenControl
@@ -477,16 +477,16 @@
 @ stub NtGdiGetEmbedFonts
 @ stub NtGdiGetEntry
 @ stub NtGdiGetEudcTimeStampEx
-@ stdcall NtGdiGetFontData(long long long ptr long)
+@ stdcall -syscall NtGdiGetFontData(long long long ptr long)
 @ stdcall -syscall NtGdiGetFontFileData(long long ptr ptr long)
 @ stdcall -syscall NtGdiGetFontFileInfo(long long ptr long ptr)
 @ stub NtGdiGetFontResourceInfoInternalW
-@ stdcall NtGdiGetFontUnicodeRanges(long ptr)
+@ stdcall -syscall NtGdiGetFontUnicodeRanges(long ptr)
 @ stub NtGdiGetGammaRampCapability
-@ stdcall NtGdiGetGlyphIndicesW(long wstr long ptr long)
+@ stdcall -syscall NtGdiGetGlyphIndicesW(long wstr long ptr long)
 @ stub NtGdiGetGlyphIndicesWInternal
-@ stdcall NtGdiGetGlyphOutline(long long long ptr long ptr ptr long)
-@ stdcall NtGdiGetKerningPairs(long long ptr)
+@ stdcall -syscall NtGdiGetGlyphOutline(long long long ptr long ptr ptr long)
+@ stdcall -syscall NtGdiGetKerningPairs(long long ptr)
 @ stub NtGdiGetLinkedUFIs
 @ stub NtGdiGetMiterLimit
 @ stub NtGdiGetMonitorID
@@ -506,7 +506,7 @@
 @ stub NtGdiGetPublicFontTableChangeCookie
 @ stdcall NtGdiGetRandomRgn(long long long)
 @ stdcall NtGdiGetRasterizerCaps(ptr long)
-@ stdcall NtGdiGetRealizationInfo(long ptr)
+@ stdcall -syscall NtGdiGetRealizationInfo(long ptr)
 @ stdcall -syscall NtGdiGetRegionData(long long ptr)
 @ stdcall -syscall NtGdiGetRgnBox(long ptr)
 @ stub NtGdiGetServerMetaFileBits
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 964a609958ff..92f0a5c2b681 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -41,24 +41,14 @@ struct unix_funcs
     INT      (WINAPI *pNtGdiExtEscape)( HDC hdc, WCHAR *driver, INT driver_id, INT escape, INT input_size,
                                         const char *input, INT output_size, char *output );
     INT      (WINAPI *pNtGdiExtSelectClipRgn)( HDC hdc, HRGN region, INT mode );
-    BOOL     (WINAPI *pNtGdiFontIsLinked)( HDC hdc );
     BOOL     (WINAPI *pNtGdiGetAndSetDCDword)( HDC hdc, UINT method, DWORD value, DWORD *result );
     INT      (WINAPI *pNtGdiGetAppClipBox)( HDC hdc, RECT *rect );
     UINT     (WINAPI *pNtGdiGetBoundsRect)( HDC hdc, RECT *rect, UINT flags );
     INT      (WINAPI *pNtGdiGetDeviceCaps)( HDC hdc, INT cap );
     BOOL     (WINAPI *pNtGdiGetDeviceGammaRamp)( HDC hdc, void *ptr );
-    DWORD    (WINAPI *pNtGdiGetFontData)( HDC hdc, DWORD table, DWORD offset, void *buffer, DWORD length );
-    DWORD    (WINAPI *pNtGdiGetFontUnicodeRanges)( HDC hdc, GLYPHSET *lpgs );
-    DWORD    (WINAPI *pNtGdiGetGlyphIndicesW)( HDC hdc, const WCHAR *str, INT count,
-                                               WORD *indices, DWORD flags );
-    DWORD    (WINAPI *pNtGdiGetGlyphOutline)( HDC hdc, UINT ch, UINT format, GLYPHMETRICS *metrics,
-                                              DWORD size, void *buffer, const MAT2 *mat2,
-                                              BOOL ignore_rotation );
-    DWORD    (WINAPI *pNtGdiGetKerningPairs)( HDC hdc, DWORD count, KERNINGPAIR *kern_pair );
     COLORREF (WINAPI *pNtGdiGetNearestColor)( HDC hdc, COLORREF color );
     INT      (WINAPI *pNtGdiGetRandomRgn)( HDC hdc, HRGN region, INT code );
     BOOL     (WINAPI *pNtGdiGetRasterizerCaps)( RASTERIZER_STATUS *status, UINT size );
-    BOOL     (WINAPI *pNtGdiGetRealizationInfo)( HDC hdc, struct font_realization_info *info );
     INT      (WINAPI *pNtGdiIntersectClipRect)( HDC hdc, INT left, INT top, INT right, INT bottom );
     INT      (WINAPI *pNtGdiOffsetClipRgn)( HDC hdc, INT x, INT y );
     BOOL     (WINAPI *pNtGdiPtVisible)( HDC hdc, INT x, INT y );
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index d451dc4d3cee..6eb1c80d6222 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -57,12 +57,6 @@ INT WINAPI NtGdiExtSelectClipRgn( HDC hdc, HRGN region, INT mode )
     return unix_funcs->pNtGdiExtSelectClipRgn( hdc, region, mode );
 }
 
-BOOL WINAPI NtGdiFontIsLinked( HDC hdc )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiFontIsLinked( hdc );
-}
-
 BOOL WINAPI NtGdiGetAndSetDCDword( HDC hdc, UINT method, DWORD value, DWORD *result )
 {
     if (!unix_funcs) return FALSE;
@@ -93,39 +87,6 @@ BOOL WINAPI NtGdiGetDeviceGammaRamp( HDC hdc, void *ptr )
     return unix_funcs->pNtGdiGetDeviceGammaRamp( hdc, ptr );
 }
 
-DWORD WINAPI NtGdiGetFontData( HDC hdc, DWORD table, DWORD offset, void *buffer, DWORD length )
-{
-    if (!unix_funcs) return GDI_ERROR;
-    return unix_funcs->pNtGdiGetFontData( hdc, table, offset, buffer, length );
-}
-
-DWORD WINAPI NtGdiGetFontUnicodeRanges( HDC hdc, GLYPHSET *lpgs )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiGetFontUnicodeRanges( hdc, lpgs );
-}
-
-DWORD WINAPI NtGdiGetGlyphIndicesW( HDC hdc, const WCHAR *str, INT count,
-                                    WORD *indices, DWORD flags )
-{
-    if (!unix_funcs) return GDI_ERROR;
-    return unix_funcs->pNtGdiGetGlyphIndicesW( hdc, str, count, indices, flags );
-}
-
-DWORD WINAPI NtGdiGetGlyphOutline( HDC hdc, UINT ch, UINT format, GLYPHMETRICS *metrics,
-                                   DWORD size, void *buffer, const MAT2 *mat2,
-                                   BOOL ignore_rotation )
-{
-    if (!unix_funcs) return GDI_ERROR;
-    return unix_funcs->pNtGdiGetGlyphOutline( hdc, ch, format, metrics, size, buffer, mat2, ignore_rotation );
-}
-
-DWORD WINAPI NtGdiGetKerningPairs( HDC hdc, DWORD count, KERNINGPAIR *kern_pair )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiGetKerningPairs( hdc, count, kern_pair );
-}
-
 COLORREF WINAPI NtGdiGetNearestColor( HDC hdc, COLORREF color )
 {
     if (!unix_funcs) return CLR_INVALID;
@@ -144,12 +105,6 @@ BOOL WINAPI NtGdiGetRasterizerCaps( RASTERIZER_STATUS *status, UINT size )
     return unix_funcs->pNtGdiGetRasterizerCaps( status, size );
 }
 
-BOOL WINAPI NtGdiGetRealizationInfo( HDC hdc, struct font_realization_info *info )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiGetRealizationInfo( hdc, info );
-}
-
 INT WINAPI NtGdiIntersectClipRect( HDC hdc, INT left, INT top, INT right, INT bottom )
 {
     if (!unix_funcs) return ERROR;
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index b7348b5c0be3..b10e7d301929 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -913,6 +913,13 @@ NTSTATUS WINAPI wow64_NtGdiFlush( UINT *args )
     return NtGdiFlush();
 }
 
+NTSTATUS WINAPI wow64_NtGdiFontIsLinked( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+
+    return NtGdiFontIsLinked( hdc );
+}
+
 NTSTATUS WINAPI wow64_NtGdiFrameRgn( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1023,6 +1030,17 @@ NTSTATUS WINAPI wow64_NtGdiGetDIBitsInternal( UINT *args )
                                    max_bits, max_info );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetFontData( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    DWORD table = get_ulong( &args );
+    DWORD offset = get_ulong( &args );
+    void *buffer = get_ptr( &args );
+    DWORD length = get_ulong( &args );
+
+    return NtGdiGetFontData( hdc, table, offset, buffer, length );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetFontFileData( UINT *args )
 {
     DWORD instance_id = get_ulong( &args );
@@ -1050,6 +1068,48 @@ NTSTATUS WINAPI wow64_NtGdiGetFontFileInfo( UINT *args )
     return ret;
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetFontUnicodeRanges( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    GLYPHSET *lpgs = get_ptr( &args );
+
+    return NtGdiGetFontUnicodeRanges( hdc, lpgs );
+}
+
+NTSTATUS WINAPI wow64_NtGdiGetGlyphIndicesW( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    const WCHAR *str = get_ptr( &args );
+    INT count = get_ulong( &args );
+    WORD *indices = get_ptr( &args );
+    DWORD flags = get_ulong( &args );
+
+    return NtGdiGetGlyphIndicesW( hdc, str, count, indices, flags );
+}
+
+NTSTATUS WINAPI wow64_NtGdiGetGlyphOutline( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    UINT ch = get_ulong( &args );
+    UINT format = get_ulong( &args );
+    GLYPHMETRICS *metrics = get_ptr( &args );
+    DWORD size = get_ulong( &args );
+    void *buffer = get_ptr( &args );
+    const MAT2 *mat2 = get_ptr( &args );
+    BOOL ignore_rotation = get_ulong( &args );
+
+    return NtGdiGetGlyphOutline( hdc, ch, format, metrics, size, buffer, mat2, ignore_rotation );
+}
+
+NTSTATUS WINAPI wow64_NtGdiGetKerningPairs( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    DWORD count = get_ulong( &args );
+    KERNINGPAIR *kern_pair = get_ptr( &args );
+
+    return NtGdiGetKerningPairs( hdc, count, kern_pair );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetNearestPaletteIndex( UINT *args )
 {
     HPALETTE hpalette = get_handle( &args );
@@ -1132,6 +1192,14 @@ NTSTATUS WINAPI wow64_NtGdiGetPixel( UINT *args )
     return NtGdiGetPixel( hdc, x, y );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetRealizationInfo( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    struct font_realization_info *info = get_ptr( &args );
+
+    return NtGdiGetRealizationInfo( hdc, info );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetTextCharsetInfo( UINT *args )
 {
     HDC hdc = get_ptr( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index 56dfe03c889f..10b4b10fd770 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -84,6 +84,7 @@
     SYSCALL_ENTRY( NtGdiFillRgn ) \
     SYSCALL_ENTRY( NtGdiFlattenPath ) \
     SYSCALL_ENTRY( NtGdiFlush ) \
+    SYSCALL_ENTRY( NtGdiFontIsLinked ) \
     SYSCALL_ENTRY( NtGdiFrameRgn ) \
     SYSCALL_ENTRY( NtGdiGetBitmapBits ) \
     SYSCALL_ENTRY( NtGdiGetBitmapDimension ) \
@@ -95,12 +96,18 @@
     SYSCALL_ENTRY( NtGdiGetDCObject ) \
     SYSCALL_ENTRY( NtGdiGetDCPoint ) \
     SYSCALL_ENTRY( NtGdiGetDIBitsInternal ) \
+    SYSCALL_ENTRY( NtGdiGetFontData ) \
     SYSCALL_ENTRY( NtGdiGetFontFileData ) \
     SYSCALL_ENTRY( NtGdiGetFontFileInfo ) \
+    SYSCALL_ENTRY( NtGdiGetFontUnicodeRanges ) \
+    SYSCALL_ENTRY( NtGdiGetGlyphIndicesW ) \
+    SYSCALL_ENTRY( NtGdiGetGlyphOutline ) \
+    SYSCALL_ENTRY( NtGdiGetKerningPairs ) \
     SYSCALL_ENTRY( NtGdiGetNearestPaletteIndex ) \
     SYSCALL_ENTRY( NtGdiGetOutlineTextMetricsInternalW ) \
     SYSCALL_ENTRY( NtGdiGetPath ) \
     SYSCALL_ENTRY( NtGdiGetPixel ) \
+    SYSCALL_ENTRY( NtGdiGetRealizationInfo ) \
     SYSCALL_ENTRY( NtGdiGetRegionData ) \
     SYSCALL_ENTRY( NtGdiGetRgnBox ) \
     SYSCALL_ENTRY( NtGdiGetSpoolMessage ) \

From 55009c4b30b802d4c7468179bfcbbc586dffa21c Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Mon, 1 Aug 2022 00:06:21 +0200
Subject: [PATCH 15/19] win32u: Use syscall interface for more clipping
 functions.

---
 dlls/win32u/gdiobj.c         | 10 ----
 dlls/win32u/syscall.c        | 10 ++++
 dlls/win32u/win32u.spec      | 20 ++++----
 dlls/win32u/win32u_private.h | 10 ----
 dlls/win32u/wrappers.c       | 60 -----------------------
 dlls/wow64win/gdi.c          | 92 ++++++++++++++++++++++++++++++++++++
 dlls/wow64win/syscall.h      | 10 ++++
 7 files changed, 122 insertions(+), 90 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index 7c255231f08e..8fa10f3542c0 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1031,23 +1031,13 @@ BOOL WINAPI NtGdiSetColorAdjustment( HDC hdc, const COLORADJUSTMENT *ca )
 static struct unix_funcs unix_funcs =
 {
     NtGdiDoPalette,
-    NtGdiExcludeClipRect,
     NtGdiExtEscape,
-    NtGdiExtSelectClipRgn,
     NtGdiGetAndSetDCDword,
-    NtGdiGetAppClipBox,
-    NtGdiGetBoundsRect,
     NtGdiGetDeviceCaps,
     NtGdiGetDeviceGammaRamp,
     NtGdiGetNearestColor,
-    NtGdiGetRandomRgn,
     NtGdiGetRasterizerCaps,
-    NtGdiIntersectClipRect,
-    NtGdiOffsetClipRgn,
-    NtGdiPtVisible,
-    NtGdiRectVisible,
     NtGdiResizePalette,
-    NtGdiSetBoundsRect,
     NtGdiSetDeviceGammaRamp,
     NtGdiSetLayout,
     NtGdiSetSystemPaletteUse,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 37fdeae01cd8..414c124a3b82 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -89,10 +89,12 @@ static void * const syscalls[] =
     NtGdiEndPath,
     NtGdiEnumFonts,
     NtGdiEqualRgn,
+    NtGdiExcludeClipRect,
     NtGdiExtCreatePen,
     NtGdiExtCreateRegion,
     NtGdiExtFloodFill,
     NtGdiExtGetObjectW,
+    NtGdiExtSelectClipRgn,
     NtGdiExtTextOutW,
     NtGdiFillPath,
     NtGdiFillRgn,
@@ -100,8 +102,10 @@ static void * const syscalls[] =
     NtGdiFlush,
     NtGdiFontIsLinked,
     NtGdiFrameRgn,
+    NtGdiGetAppClipBox,
     NtGdiGetBitmapBits,
     NtGdiGetBitmapDimension,
+    NtGdiGetBoundsRect,
     NtGdiGetCharABCWidthsW,
     NtGdiGetCharWidthInfo,
     NtGdiGetCharWidthW,
@@ -121,6 +125,7 @@ static void * const syscalls[] =
     NtGdiGetOutlineTextMetricsInternalW,
     NtGdiGetPath,
     NtGdiGetPixel,
+    NtGdiGetRandomRgn,
     NtGdiGetRealizationInfo,
     NtGdiGetRegionData,
     NtGdiGetRgnBox,
@@ -134,11 +139,13 @@ static void * const syscalls[] =
     NtGdiGradientFill,
     NtGdiHfontCreate,
     NtGdiInitSpool,
+    NtGdiIntersectClipRect,
     NtGdiInvertRgn,
     NtGdiLineTo,
     NtGdiMaskBlt,
     NtGdiModifyWorldTransform,
     NtGdiMoveTo,
+    NtGdiOffsetClipRgn,
     NtGdiOffsetRgn,
     NtGdiOpenDCW,
     NtGdiPatBlt,
@@ -147,7 +154,9 @@ static void * const syscalls[] =
     NtGdiPolyDraw,
     NtGdiPolyPolyDraw,
     NtGdiPtInRegion,
+    NtGdiPtVisible,
     NtGdiRectInRegion,
+    NtGdiRectVisible,
     NtGdiRectangle,
     NtGdiRemoveFontMemResourceEx,
     NtGdiRemoveFontResourceW,
@@ -164,6 +173,7 @@ static void * const syscalls[] =
     NtGdiSelectPen,
     NtGdiSetBitmapBits,
     NtGdiSetBitmapDimension,
+    NtGdiSetBoundsRect,
     NtGdiSetBrushOrg,
     NtGdiSetColorAdjustment,
     NtGdiSetDIBitsToDeviceInternal,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index 7018edeb6360..408750693a19 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -417,13 +417,13 @@
 @ stub NtGdiEnumObjects
 @ stdcall -syscall NtGdiEqualRgn(long long)
 @ stub NtGdiEudcLoadUnloadLink
-@ stdcall NtGdiExcludeClipRect(long long long long long)
+@ stdcall -syscall NtGdiExcludeClipRect(long long long long long)
 @ stdcall -syscall NtGdiExtCreatePen(long long long long long long long ptr long long long)
 @ stdcall -syscall NtGdiExtCreateRegion(ptr long ptr)
 @ stdcall NtGdiExtEscape(long wstr long long long ptr long ptr)
 @ stdcall -syscall NtGdiExtFloodFill(long long long long long)
 @ stdcall -syscall NtGdiExtGetObjectW(long long ptr)
-@ stdcall NtGdiExtSelectClipRgn(long long long)
+@ stdcall -syscall NtGdiExtSelectClipRgn(long long long)
 @ stdcall -syscall NtGdiExtTextOutW(long long long long ptr ptr long ptr long)
 @ stub NtGdiFONTOBJ_cGetAllGlyphHandles
 @ stub NtGdiFONTOBJ_cGetGlyphs
@@ -442,12 +442,12 @@
 @ stdcall -syscall NtGdiFrameRgn(long long long long long)
 @ stub NtGdiFullscreenControl
 @ stdcall NtGdiGetAndSetDCDword(long long long ptr)
-@ stdcall NtGdiGetAppClipBox(long ptr)
+@ stdcall -syscall NtGdiGetAppClipBox(long ptr)
 @ stub NtGdiGetAppliedDeviceGammaRamp
 @ stdcall -syscall NtGdiGetBitmapBits(long long ptr)
 @ stdcall -syscall NtGdiGetBitmapDimension(long ptr)
 @ stub NtGdiGetBitmapDpiScaleValue
-@ stdcall NtGdiGetBoundsRect(long ptr long)
+@ stdcall -syscall NtGdiGetBoundsRect(long ptr long)
 @ stub NtGdiGetCOPPCompatibleOPMInformation
 @ stub NtGdiGetCertificate
 @ stub NtGdiGetCertificateByHandle
@@ -504,7 +504,7 @@
 @ stdcall -syscall NtGdiGetPixel(long long long)
 @ stub NtGdiGetProcessSessionFonts
 @ stub NtGdiGetPublicFontTableChangeCookie
-@ stdcall NtGdiGetRandomRgn(long long long)
+@ stdcall -syscall NtGdiGetRandomRgn(long long long)
 @ stdcall NtGdiGetRasterizerCaps(ptr long)
 @ stdcall -syscall NtGdiGetRealizationInfo(long ptr)
 @ stdcall -syscall NtGdiGetRegionData(long long ptr)
@@ -533,7 +533,7 @@
 @ stub NtGdiIcmBrushInfo
 @ stub NtGdiInit
 @ stdcall -syscall NtGdiInitSpool()
-@ stdcall NtGdiIntersectClipRect(long long long long long)
+@ stdcall -syscall NtGdiIntersectClipRect(long long long long long)
 @ stdcall -syscall NtGdiInvertRgn(long long)
 @ stdcall -syscall NtGdiLineTo(long long long)
 @ stub NtGdiMakeFontDir
@@ -545,7 +545,7 @@
 @ stdcall -syscall NtGdiModifyWorldTransform(long ptr long)
 @ stub NtGdiMonoBitmap
 @ stdcall -syscall NtGdiMoveTo(long long long ptr)
-@ stdcall NtGdiOffsetClipRgn(long long long)
+@ stdcall -syscall NtGdiOffsetClipRgn(long long long)
 @ stdcall -syscall NtGdiOffsetRgn(long long long)
 @ stdcall -syscall NtGdiOpenDCW(ptr ptr ptr long long ptr ptr ptr)
 @ stub NtGdiPATHOBJ_bEnum
@@ -561,11 +561,11 @@
 @ stdcall -syscall NtGdiPolyPolyDraw(long ptr ptr long long)
 @ stub NtGdiPolyTextOutW
 @ stdcall -syscall NtGdiPtInRegion(long long long)
-@ stdcall NtGdiPtVisible(long long long)
+@ stdcall -syscall NtGdiPtVisible(long long long)
 @ stub NtGdiQueryFontAssocInfo
 @ stub NtGdiQueryFonts
 @ stdcall -syscall NtGdiRectInRegion(long ptr)
-@ stdcall NtGdiRectVisible(long ptr)
+@ stdcall -syscall NtGdiRectVisible(long ptr)
 @ stdcall -syscall NtGdiRectangle(long long long long long)
 @ stdcall -syscall NtGdiRemoveFontMemResourceEx(long)
 @ stdcall -syscall NtGdiRemoveFontResourceW(wstr long long long long ptr)
@@ -592,7 +592,7 @@
 @ stub NtGdiSetBitmapAttributes
 @ stdcall -syscall NtGdiSetBitmapBits(long long ptr)
 @ stdcall -syscall NtGdiSetBitmapDimension(long long long ptr)
-@ stdcall NtGdiSetBoundsRect(long ptr long)
+@ stdcall -syscall NtGdiSetBoundsRect(long ptr long)
 @ stub NtGdiSetBrushAttributes
 @ stdcall -syscall NtGdiSetBrushOrg(long long long ptr)
 @ stdcall -syscall NtGdiSetColorAdjustment(long ptr)
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 92f0a5c2b681..1a3097e35707 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -37,24 +37,14 @@ struct unix_funcs
     /* win32u functions */
     LONG     (WINAPI *pNtGdiDoPalette)( HGDIOBJ handle, WORD start, WORD count, void *entries,
                                         DWORD func, BOOL inbound );
-    INT      (WINAPI *pNtGdiExcludeClipRect)( HDC hdc, INT left, INT top, INT right, INT bottom );
     INT      (WINAPI *pNtGdiExtEscape)( HDC hdc, WCHAR *driver, INT driver_id, INT escape, INT input_size,
                                         const char *input, INT output_size, char *output );
-    INT      (WINAPI *pNtGdiExtSelectClipRgn)( HDC hdc, HRGN region, INT mode );
     BOOL     (WINAPI *pNtGdiGetAndSetDCDword)( HDC hdc, UINT method, DWORD value, DWORD *result );
-    INT      (WINAPI *pNtGdiGetAppClipBox)( HDC hdc, RECT *rect );
-    UINT     (WINAPI *pNtGdiGetBoundsRect)( HDC hdc, RECT *rect, UINT flags );
     INT      (WINAPI *pNtGdiGetDeviceCaps)( HDC hdc, INT cap );
     BOOL     (WINAPI *pNtGdiGetDeviceGammaRamp)( HDC hdc, void *ptr );
     COLORREF (WINAPI *pNtGdiGetNearestColor)( HDC hdc, COLORREF color );
-    INT      (WINAPI *pNtGdiGetRandomRgn)( HDC hdc, HRGN region, INT code );
     BOOL     (WINAPI *pNtGdiGetRasterizerCaps)( RASTERIZER_STATUS *status, UINT size );
-    INT      (WINAPI *pNtGdiIntersectClipRect)( HDC hdc, INT left, INT top, INT right, INT bottom );
-    INT      (WINAPI *pNtGdiOffsetClipRgn)( HDC hdc, INT x, INT y );
-    BOOL     (WINAPI *pNtGdiPtVisible)( HDC hdc, INT x, INT y );
-    BOOL     (WINAPI *pNtGdiRectVisible)( HDC hdc, const RECT *rect );
     BOOL     (WINAPI *pNtGdiResizePalette)( HPALETTE palette, UINT count );
-    UINT     (WINAPI *pNtGdiSetBoundsRect)( HDC hdc, const RECT *rect, UINT flags );
     BOOL     (WINAPI *pNtGdiSetDeviceGammaRamp)( HDC hdc, void *ptr );
     DWORD    (WINAPI *pNtGdiSetLayout)( HDC hdc, LONG wox, DWORD layout );
     UINT     (WINAPI *pNtGdiSetSystemPaletteUse)( HDC hdc, UINT use );
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index 6eb1c80d6222..96f9d2943147 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -37,12 +37,6 @@ BOOL WINAPI NtUserEndPaint( HWND hwnd, const PAINTSTRUCT *ps )
     return unix_funcs->pNtUserEndPaint( hwnd, ps );
 }
 
-INT WINAPI NtGdiExcludeClipRect( HDC hdc, INT left, INT top, INT right, INT bottom )
-{
-    if (!unix_funcs) return ERROR;
-    return unix_funcs->pNtGdiExcludeClipRect( hdc, left, top, right, bottom );
-}
-
 INT WINAPI NtGdiExtEscape( HDC hdc, WCHAR *driver, INT driver_id, INT escape, INT input_size,
                            const char *input, INT output_size, char *output )
 {
@@ -51,30 +45,12 @@ INT WINAPI NtGdiExtEscape( HDC hdc, WCHAR *driver, INT driver_id, INT escape, IN
                                         output_size, output );
 }
 
-INT WINAPI NtGdiExtSelectClipRgn( HDC hdc, HRGN region, INT mode )
-{
-    if (!unix_funcs) return ERROR;
-    return unix_funcs->pNtGdiExtSelectClipRgn( hdc, region, mode );
-}
-
 BOOL WINAPI NtGdiGetAndSetDCDword( HDC hdc, UINT method, DWORD value, DWORD *result )
 {
     if (!unix_funcs) return FALSE;
     return unix_funcs->pNtGdiGetAndSetDCDword( hdc, method, value, result );
 }
 
-INT WINAPI NtGdiGetAppClipBox( HDC hdc, RECT *rect )
-{
-    if (!unix_funcs) return ERROR;
-    return unix_funcs->pNtGdiGetAppClipBox( hdc, rect );
-}
-
-UINT WINAPI NtGdiGetBoundsRect( HDC hdc, RECT *rect, UINT flags )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiGetBoundsRect( hdc, rect, flags );
-}
-
 INT WINAPI NtGdiGetDeviceCaps( HDC hdc, INT cap )
 {
     if (!unix_funcs) return 0;
@@ -93,54 +69,18 @@ COLORREF WINAPI NtGdiGetNearestColor( HDC hdc, COLORREF color )
     return unix_funcs->pNtGdiGetNearestColor( hdc, color );
 }
 
-INT WINAPI NtGdiGetRandomRgn( HDC hdc, HRGN region, INT code )
-{
-    if (!unix_funcs) return -1;
-    return unix_funcs->pNtGdiGetRandomRgn( hdc, region, code );
-}
-
 BOOL WINAPI NtGdiGetRasterizerCaps( RASTERIZER_STATUS *status, UINT size )
 {
     if (!unix_funcs) return FALSE;
     return unix_funcs->pNtGdiGetRasterizerCaps( status, size );
 }
 
-INT WINAPI NtGdiIntersectClipRect( HDC hdc, INT left, INT top, INT right, INT bottom )
-{
-    if (!unix_funcs) return ERROR;
-    return unix_funcs->pNtGdiIntersectClipRect( hdc, left, top, right, bottom );
-}
-
-INT WINAPI NtGdiOffsetClipRgn( HDC hdc, INT x, INT y )
-{
-    if (!unix_funcs) return ERROR;
-    return unix_funcs->pNtGdiOffsetClipRgn( hdc, x, y );
-}
-
-BOOL WINAPI NtGdiPtVisible( HDC hdc, INT x, INT y )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiPtVisible( hdc, x, y );
-}
-
-BOOL WINAPI NtGdiRectVisible( HDC hdc, const RECT *rect )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiRectVisible( hdc, rect );
-}
-
 BOOL WINAPI NtGdiResizePalette( HPALETTE palette, UINT count )
 {
     if (!unix_funcs) return FALSE;
     return unix_funcs->pNtGdiResizePalette( palette, count );
 }
 
-UINT WINAPI NtGdiSetBoundsRect( HDC hdc, const RECT *rect, UINT flags )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiSetBoundsRect( hdc, rect, flags );
-}
-
 BOOL WINAPI NtGdiSetDeviceGammaRamp( HDC hdc, void *ptr )
 {
     if (!unix_funcs) return FALSE;
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index b10e7d301929..a1a4c9de2e8e 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -730,6 +730,17 @@ NTSTATUS WINAPI wow64_NtGdiEnumFonts( UINT *args )
     return NtGdiEnumFonts( hdc, type, win32_compat, face_name_len, face_name, charset, count, buf );
 }
 
+NTSTATUS WINAPI wow64_NtGdiExcludeClipRect( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT left = get_ulong( &args );
+    INT top = get_ulong( &args );
+    INT right = get_ulong( &args );
+    INT bottom = get_ulong( &args );
+
+    return NtGdiExcludeClipRect( hdc, left, top, right, bottom );
+}
+
 NTSTATUS WINAPI wow64_NtGdiEqualRgn( UINT *args )
 {
     HRGN hrgn1 = get_handle( &args );
@@ -870,6 +881,15 @@ NTSTATUS WINAPI wow64_NtGdiExtGetObjectW( UINT *args )
     }
 }
 
+NTSTATUS WINAPI wow64_NtGdiExtSelectClipRgn( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HRGN region = get_handle( &args );
+    INT mode = get_ulong( &args );
+
+    return NtGdiExtSelectClipRgn( hdc, region, mode );
+}
+
 NTSTATUS WINAPI wow64_NtGdiExtTextOutW( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -931,6 +951,14 @@ NTSTATUS WINAPI wow64_NtGdiFrameRgn( UINT *args )
     return NtGdiFrameRgn( hdc, hrgn, brush, width, height );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetAppClipBox( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    RECT *rect = get_ptr( &args );
+
+    return NtGdiGetAppClipBox( hdc, rect );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetBitmapBits( UINT *args )
 {
     HBITMAP bitmap = get_handle( &args );
@@ -948,6 +976,15 @@ NTSTATUS WINAPI wow64_NtGdiGetBitmapDimension( UINT *args )
     return NtGdiGetBitmapDimension( bitmap, size );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetBoundsRect( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    RECT *rect = get_ptr( &args );
+    UINT flags = get_ulong( &args );
+
+    return NtGdiGetBoundsRect( hdc, rect, flags );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetCharABCWidthsW( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1192,6 +1229,15 @@ NTSTATUS WINAPI wow64_NtGdiGetPixel( UINT *args )
     return NtGdiGetPixel( hdc, x, y );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetRandomRgn( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HRGN region = get_handle( &args );
+    INT code = get_ulong( &args );
+
+    return NtGdiGetRandomRgn( hdc, region, code );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetRealizationInfo( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1433,6 +1479,26 @@ NTSTATUS WINAPI wow64_NtGdiInitSpool( UINT *args )
     return NtGdiInitSpool();
 }
 
+NTSTATUS WINAPI wow64_NtGdiIntersectClipRect( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT left = get_ulong( &args );
+    INT top = get_ulong( &args );
+    INT right = get_ulong( &args );
+    INT bottom = get_ulong( &args );
+
+    return NtGdiIntersectClipRect( hdc, left, top, right, bottom );
+}
+
+NTSTATUS WINAPI wow64_NtGdiOffsetClipRgn( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x = get_ulong( &args );
+    INT y = get_ulong( &args );
+
+    return NtGdiOffsetClipRgn( hdc, x, y );
+}
+
 NTSTATUS WINAPI wow64_NtGdiOffsetRgn( UINT *args )
 {
     HRGN hrgn = get_handle( &args );
@@ -1506,6 +1572,15 @@ NTSTATUS WINAPI wow64_NtGdiPtInRegion( UINT *args )
     return NtGdiPtInRegion( hrgn, x, y );
 }
 
+NTSTATUS WINAPI wow64_NtGdiPtVisible( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT x = get_ulong( &args );
+    INT y = get_ulong( &args );
+
+    return NtGdiPtVisible( hdc, x, y );
+}
+
 NTSTATUS WINAPI wow64_NtGdiRectInRegion( UINT *args )
 {
     HRGN hrgn = get_handle( &args );
@@ -1514,6 +1589,14 @@ NTSTATUS WINAPI wow64_NtGdiRectInRegion( UINT *args )
     return NtGdiRectInRegion( hrgn, rect );
 }
 
+NTSTATUS WINAPI wow64_NtGdiRectVisible( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    const RECT *rect = get_ptr( &args );
+
+    return NtGdiRectVisible( hdc, rect );
+}
+
 NTSTATUS WINAPI wow64_NtGdiRemoveFontMemResourceEx( UINT *args )
 {
     HANDLE handle = get_handle( &args );
@@ -1623,6 +1706,15 @@ NTSTATUS WINAPI wow64_NtGdiSetBitmapDimension( UINT *args )
     return NtGdiSetBitmapDimension( hbitmap, x, y, prev_size );
 }
 
+NTSTATUS WINAPI wow64_NtGdiSetBoundsRect( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    const RECT *rect = get_ptr( &args );
+    UINT flags = get_ulong( &args );
+
+    return NtGdiSetBoundsRect( hdc, rect, flags );
+}
+
 NTSTATUS WINAPI wow64_NtGdiSetBrushOrg( UINT *args )
 {
     HDC hdc = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index 10b4b10fd770..b753cb7d282d 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -75,10 +75,12 @@
     SYSCALL_ENTRY( NtGdiEndPath ) \
     SYSCALL_ENTRY( NtGdiEnumFonts ) \
     SYSCALL_ENTRY( NtGdiEqualRgn ) \
+    SYSCALL_ENTRY( NtGdiExcludeClipRect ) \
     SYSCALL_ENTRY( NtGdiExtCreatePen ) \
     SYSCALL_ENTRY( NtGdiExtCreateRegion ) \
     SYSCALL_ENTRY( NtGdiExtFloodFill ) \
     SYSCALL_ENTRY( NtGdiExtGetObjectW ) \
+    SYSCALL_ENTRY( NtGdiExtSelectClipRgn ) \
     SYSCALL_ENTRY( NtGdiExtTextOutW ) \
     SYSCALL_ENTRY( NtGdiFillPath ) \
     SYSCALL_ENTRY( NtGdiFillRgn ) \
@@ -86,8 +88,10 @@
     SYSCALL_ENTRY( NtGdiFlush ) \
     SYSCALL_ENTRY( NtGdiFontIsLinked ) \
     SYSCALL_ENTRY( NtGdiFrameRgn ) \
+    SYSCALL_ENTRY( NtGdiGetAppClipBox ) \
     SYSCALL_ENTRY( NtGdiGetBitmapBits ) \
     SYSCALL_ENTRY( NtGdiGetBitmapDimension ) \
+    SYSCALL_ENTRY( NtGdiGetBoundsRect ) \
     SYSCALL_ENTRY( NtGdiGetCharABCWidthsW ) \
     SYSCALL_ENTRY( NtGdiGetCharWidthInfo ) \
     SYSCALL_ENTRY( NtGdiGetCharWidthW ) \
@@ -107,6 +111,7 @@
     SYSCALL_ENTRY( NtGdiGetOutlineTextMetricsInternalW ) \
     SYSCALL_ENTRY( NtGdiGetPath ) \
     SYSCALL_ENTRY( NtGdiGetPixel ) \
+    SYSCALL_ENTRY( NtGdiGetRandomRgn ) \
     SYSCALL_ENTRY( NtGdiGetRealizationInfo ) \
     SYSCALL_ENTRY( NtGdiGetRegionData ) \
     SYSCALL_ENTRY( NtGdiGetRgnBox ) \
@@ -120,11 +125,13 @@
     SYSCALL_ENTRY( NtGdiGradientFill ) \
     SYSCALL_ENTRY( NtGdiHfontCreate ) \
     SYSCALL_ENTRY( NtGdiInitSpool ) \
+    SYSCALL_ENTRY( NtGdiIntersectClipRect ) \
     SYSCALL_ENTRY( NtGdiInvertRgn ) \
     SYSCALL_ENTRY( NtGdiLineTo ) \
     SYSCALL_ENTRY( NtGdiMaskBlt ) \
     SYSCALL_ENTRY( NtGdiModifyWorldTransform ) \
     SYSCALL_ENTRY( NtGdiMoveTo ) \
+    SYSCALL_ENTRY( NtGdiOffsetClipRgn ) \
     SYSCALL_ENTRY( NtGdiOffsetRgn ) \
     SYSCALL_ENTRY( NtGdiOpenDCW ) \
     SYSCALL_ENTRY( NtGdiPatBlt ) \
@@ -133,7 +140,9 @@
     SYSCALL_ENTRY( NtGdiPolyDraw ) \
     SYSCALL_ENTRY( NtGdiPolyPolyDraw ) \
     SYSCALL_ENTRY( NtGdiPtInRegion ) \
+    SYSCALL_ENTRY( NtGdiPtVisible ) \
     SYSCALL_ENTRY( NtGdiRectInRegion ) \
+    SYSCALL_ENTRY( NtGdiRectVisible ) \
     SYSCALL_ENTRY( NtGdiRectangle ) \
     SYSCALL_ENTRY( NtGdiRemoveFontMemResourceEx ) \
     SYSCALL_ENTRY( NtGdiRemoveFontResourceW ) \
@@ -150,6 +159,7 @@
     SYSCALL_ENTRY( NtGdiSelectPen ) \
     SYSCALL_ENTRY( NtGdiSetBitmapBits ) \
     SYSCALL_ENTRY( NtGdiSetBitmapDimension ) \
+    SYSCALL_ENTRY( NtGdiSetBoundsRect ) \
     SYSCALL_ENTRY( NtGdiSetBrushOrg ) \
     SYSCALL_ENTRY( NtGdiSetColorAdjustment ) \
     SYSCALL_ENTRY( NtGdiSetDIBitsToDeviceInternal ) \

From b23a6de2fbdf59fc1c8fad0556dc79d3d810c8cf Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Mon, 1 Aug 2022 01:07:48 +0200
Subject: [PATCH 16/19] win32u: Use syscall interface for more GDI functions.

---
 dlls/win32u/gdiobj.c         |  11 ----
 dlls/win32u/syscall.c        |  11 ++++
 dlls/win32u/win32u.spec      |  22 +++----
 dlls/win32u/win32u_private.h |  13 ----
 dlls/win32u/wrappers.c       |  69 --------------------
 dlls/wow64win/gdi.c          | 119 ++++++++++++++++++++++++++++++++---
 dlls/wow64win/syscall.h      |  11 ++++
 7 files changed, 143 insertions(+), 113 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index 8fa10f3542c0..ac4a0300f2ac 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1030,17 +1030,6 @@ BOOL WINAPI NtGdiSetColorAdjustment( HDC hdc, const COLORADJUSTMENT *ca )
 
 static struct unix_funcs unix_funcs =
 {
-    NtGdiDoPalette,
-    NtGdiExtEscape,
-    NtGdiGetAndSetDCDword,
-    NtGdiGetDeviceCaps,
-    NtGdiGetDeviceGammaRamp,
-    NtGdiGetNearestColor,
-    NtGdiGetRasterizerCaps,
-    NtGdiResizePalette,
-    NtGdiSetDeviceGammaRamp,
-    NtGdiSetLayout,
-    NtGdiSetSystemPaletteUse,
     NtUserDrawCaptionTemp,
     NtUserDrawMenuBarTemp,
     NtUserEndPaint,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 414c124a3b82..8d3112556586 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -82,6 +82,7 @@ static void * const syscalls[] =
     NtGdiDeleteClientObj,
     NtGdiDeleteObjectApp,
     NtGdiDescribePixelFormat,
+    NtGdiDoPalette,
     NtGdiDrawStream,
     NtGdiEllipse,
     NtGdiEndDoc,
@@ -92,6 +93,7 @@ static void * const syscalls[] =
     NtGdiExcludeClipRect,
     NtGdiExtCreatePen,
     NtGdiExtCreateRegion,
+    NtGdiExtEscape,
     NtGdiExtFloodFill,
     NtGdiExtGetObjectW,
     NtGdiExtSelectClipRgn,
@@ -102,6 +104,7 @@ static void * const syscalls[] =
     NtGdiFlush,
     NtGdiFontIsLinked,
     NtGdiFrameRgn,
+    NtGdiGetAndSetDCDword,
     NtGdiGetAppClipBox,
     NtGdiGetBitmapBits,
     NtGdiGetBitmapDimension,
@@ -114,6 +117,8 @@ static void * const syscalls[] =
     NtGdiGetDCObject,
     NtGdiGetDCPoint,
     NtGdiGetDIBitsInternal,
+    NtGdiGetDeviceCaps,
+    NtGdiGetDeviceGammaRamp,
     NtGdiGetFontData,
     NtGdiGetFontFileData,
     NtGdiGetFontFileInfo,
@@ -121,11 +126,13 @@ static void * const syscalls[] =
     NtGdiGetGlyphIndicesW,
     NtGdiGetGlyphOutline,
     NtGdiGetKerningPairs,
+    NtGdiGetNearestColor,
     NtGdiGetNearestPaletteIndex,
     NtGdiGetOutlineTextMetricsInternalW,
     NtGdiGetPath,
     NtGdiGetPixel,
     NtGdiGetRandomRgn,
+    NtGdiGetRasterizerCaps,
     NtGdiGetRealizationInfo,
     NtGdiGetRegionData,
     NtGdiGetRgnBox,
@@ -161,6 +168,7 @@ static void * const syscalls[] =
     NtGdiRemoveFontMemResourceEx,
     NtGdiRemoveFontResourceW,
     NtGdiResetDC,
+    NtGdiResizePalette,
     NtGdiRestoreDC,
     NtGdiRoundRect,
     NtGdiSaveDC,
@@ -177,11 +185,14 @@ static void * const syscalls[] =
     NtGdiSetBrushOrg,
     NtGdiSetColorAdjustment,
     NtGdiSetDIBitsToDeviceInternal,
+    NtGdiSetDeviceGammaRamp,
+    NtGdiSetLayout,
     NtGdiSetMagicColors,
     NtGdiSetMetaRgn,
     NtGdiSetPixel,
     NtGdiSetPixelFormat,
     NtGdiSetRectRgn,
+    NtGdiSetSystemPaletteUse,
     NtGdiSetTextJustification,
     NtGdiSetVirtualResolution,
     NtGdiStartDoc,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index 408750693a19..6e9e4a9610eb 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -372,7 +372,7 @@
 @ stub NtGdiDestroyOPMProtectedOutput
 @ stub NtGdiDestroyPhysicalMonitor
 @ stub NtGdiDoBanding
-@ stdcall NtGdiDoPalette(long long long ptr long long)
+@ stdcall -syscall NtGdiDoPalette(long long long ptr long long)
 @ stub NtGdiDrawEscape
 @ stdcall -syscall NtGdiDrawStream(long long ptr)
 @ stub NtGdiDwmCreatedBitmapRemotingOutput
@@ -420,7 +420,7 @@
 @ stdcall -syscall NtGdiExcludeClipRect(long long long long long)
 @ stdcall -syscall NtGdiExtCreatePen(long long long long long long long ptr long long long)
 @ stdcall -syscall NtGdiExtCreateRegion(ptr long ptr)
-@ stdcall NtGdiExtEscape(long wstr long long long ptr long ptr)
+@ stdcall -syscall NtGdiExtEscape(long wstr long long long ptr long ptr)
 @ stdcall -syscall NtGdiExtFloodFill(long long long long long)
 @ stdcall -syscall NtGdiExtGetObjectW(long long ptr)
 @ stdcall -syscall NtGdiExtSelectClipRgn(long long long)
@@ -441,7 +441,7 @@
 @ stub NtGdiForceUFIMapping
 @ stdcall -syscall NtGdiFrameRgn(long long long long long)
 @ stub NtGdiFullscreenControl
-@ stdcall NtGdiGetAndSetDCDword(long long long ptr)
+@ stdcall -syscall NtGdiGetAndSetDCDword(long long long ptr)
 @ stdcall -syscall NtGdiGetAppClipBox(long ptr)
 @ stub NtGdiGetAppliedDeviceGammaRamp
 @ stdcall -syscall NtGdiGetBitmapBits(long long ptr)
@@ -467,9 +467,9 @@
 @ stdcall -syscall NtGdiGetDCPoint(long long ptr)
 @ stub NtGdiGetDCforBitmap
 @ stdcall -syscall NtGdiGetDIBitsInternal(long long long long ptr ptr long long long)
-@ stdcall NtGdiGetDeviceCaps(long long)
+@ stdcall -syscall NtGdiGetDeviceCaps(long long)
 @ stub NtGdiGetDeviceCapsAll
-@ stdcall NtGdiGetDeviceGammaRamp(long ptr)
+@ stdcall -syscall NtGdiGetDeviceGammaRamp(long ptr)
 @ stub NtGdiGetDeviceWidth
 @ stub NtGdiGetDhpdev
 @ stub NtGdiGetETM
@@ -490,7 +490,7 @@
 @ stub NtGdiGetLinkedUFIs
 @ stub NtGdiGetMiterLimit
 @ stub NtGdiGetMonitorID
-@ stdcall NtGdiGetNearestColor(long long)
+@ stdcall -syscall NtGdiGetNearestColor(long long)
 @ stdcall -syscall NtGdiGetNearestPaletteIndex(long long)
 @ stub NtGdiGetNumberOfPhysicalMonitors
 @ stub NtGdiGetOPMInformation
@@ -505,7 +505,7 @@
 @ stub NtGdiGetProcessSessionFonts
 @ stub NtGdiGetPublicFontTableChangeCookie
 @ stdcall -syscall NtGdiGetRandomRgn(long long long)
-@ stdcall NtGdiGetRasterizerCaps(ptr long)
+@ stdcall -syscall NtGdiGetRasterizerCaps(ptr long)
 @ stdcall -syscall NtGdiGetRealizationInfo(long ptr)
 @ stdcall -syscall NtGdiGetRegionData(long long ptr)
 @ stdcall -syscall NtGdiGetRgnBox(long ptr)
@@ -571,7 +571,7 @@
 @ stdcall -syscall NtGdiRemoveFontResourceW(wstr long long long long ptr)
 @ stub NtGdiRemoveMergeFont
 @ stdcall -syscall NtGdiResetDC(long ptr ptr ptr ptr)
-@ stdcall NtGdiResizePalette(long long)
+@ stdcall -syscall NtGdiResizePalette(long long)
 @ stdcall -syscall NtGdiRestoreDC(long long)
 @ stdcall -syscall NtGdiRoundRect(long long long long long long long)
 @ stub NtGdiSTROBJ_bEnum
@@ -598,11 +598,11 @@
 @ stdcall -syscall NtGdiSetColorAdjustment(long ptr)
 @ stub NtGdiSetColorSpace
 @ stdcall -syscall NtGdiSetDIBitsToDeviceInternal(long long long long long long long long long ptr ptr long long long long long)
-@ stdcall NtGdiSetDeviceGammaRamp(ptr ptr)
+@ stdcall -syscall NtGdiSetDeviceGammaRamp(ptr ptr)
 @ stub NtGdiSetFontEnumeration
 @ stub NtGdiSetFontXform
 @ stub NtGdiSetIcmMode
-@ stdcall NtGdiSetLayout(long long long)
+@ stdcall -syscall NtGdiSetLayout(long long long)
 @ stub NtGdiSetLinkedUFIs
 @ stdcall -syscall NtGdiSetMagicColors(long long long)
 @ stdcall -syscall NtGdiSetMetaRgn(long)
@@ -614,7 +614,7 @@
 @ stub NtGdiSetPrivateDeviceGammaRamp
 @ stdcall -syscall NtGdiSetRectRgn(long long long long long)
 @ stub NtGdiSetSizeDevice
-@ stdcall NtGdiSetSystemPaletteUse(long long)
+@ stdcall -syscall NtGdiSetSystemPaletteUse(long long)
 @ stdcall -syscall NtGdiSetTextJustification(long long long)
 @ stub NtGdiSetUMPDSandboxState
 @ stdcall -syscall NtGdiSetVirtualResolution(long long long long long)
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 1a3097e35707..abb2d6565772 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -35,19 +35,6 @@
 struct unix_funcs
 {
     /* win32u functions */
-    LONG     (WINAPI *pNtGdiDoPalette)( HGDIOBJ handle, WORD start, WORD count, void *entries,
-                                        DWORD func, BOOL inbound );
-    INT      (WINAPI *pNtGdiExtEscape)( HDC hdc, WCHAR *driver, INT driver_id, INT escape, INT input_size,
-                                        const char *input, INT output_size, char *output );
-    BOOL     (WINAPI *pNtGdiGetAndSetDCDword)( HDC hdc, UINT method, DWORD value, DWORD *result );
-    INT      (WINAPI *pNtGdiGetDeviceCaps)( HDC hdc, INT cap );
-    BOOL     (WINAPI *pNtGdiGetDeviceGammaRamp)( HDC hdc, void *ptr );
-    COLORREF (WINAPI *pNtGdiGetNearestColor)( HDC hdc, COLORREF color );
-    BOOL     (WINAPI *pNtGdiGetRasterizerCaps)( RASTERIZER_STATUS *status, UINT size );
-    BOOL     (WINAPI *pNtGdiResizePalette)( HPALETTE palette, UINT count );
-    BOOL     (WINAPI *pNtGdiSetDeviceGammaRamp)( HDC hdc, void *ptr );
-    DWORD    (WINAPI *pNtGdiSetLayout)( HDC hdc, LONG wox, DWORD layout );
-    UINT     (WINAPI *pNtGdiSetSystemPaletteUse)( HDC hdc, UINT use );
     BOOL     (WINAPI *pNtUserDrawCaptionTemp)( HWND hwnd, HDC hdc, const RECT *rect, HFONT font,
                                                HICON icon, const WCHAR *str, UINT flags );
     DWORD    (WINAPI *pNtUserDrawMenuBarTemp)( HWND hwnd, HDC hdc, RECT *rect, HMENU handle, HFONT font );
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index 96f9d2943147..7957f1052c7c 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -24,81 +24,12 @@
 
 static const struct unix_funcs *unix_funcs;
 
-LONG WINAPI NtGdiDoPalette( HGDIOBJ handle, WORD start, WORD count, void *entries,
-                            DWORD func, BOOL inbound )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiDoPalette( handle, start, count, entries, func, inbound );
-}
-
 BOOL WINAPI NtUserEndPaint( HWND hwnd, const PAINTSTRUCT *ps )
 {
     if (!unix_funcs) return FALSE;
     return unix_funcs->pNtUserEndPaint( hwnd, ps );
 }
 
-INT WINAPI NtGdiExtEscape( HDC hdc, WCHAR *driver, INT driver_id, INT escape, INT input_size,
-                           const char *input, INT output_size, char *output )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiExtEscape( hdc, driver, driver_id, escape, input_size, input,
-                                        output_size, output );
-}
-
-BOOL WINAPI NtGdiGetAndSetDCDword( HDC hdc, UINT method, DWORD value, DWORD *result )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiGetAndSetDCDword( hdc, method, value, result );
-}
-
-INT WINAPI NtGdiGetDeviceCaps( HDC hdc, INT cap )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtGdiGetDeviceCaps( hdc, cap );
-}
-
-BOOL WINAPI NtGdiGetDeviceGammaRamp( HDC hdc, void *ptr )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiGetDeviceGammaRamp( hdc, ptr );
-}
-
-COLORREF WINAPI NtGdiGetNearestColor( HDC hdc, COLORREF color )
-{
-    if (!unix_funcs) return CLR_INVALID;
-    return unix_funcs->pNtGdiGetNearestColor( hdc, color );
-}
-
-BOOL WINAPI NtGdiGetRasterizerCaps( RASTERIZER_STATUS *status, UINT size )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiGetRasterizerCaps( status, size );
-}
-
-BOOL WINAPI NtGdiResizePalette( HPALETTE palette, UINT count )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiResizePalette( palette, count );
-}
-
-BOOL WINAPI NtGdiSetDeviceGammaRamp( HDC hdc, void *ptr )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtGdiSetDeviceGammaRamp( hdc, ptr );
-}
-
-DWORD WINAPI NtGdiSetLayout( HDC hdc, LONG wox, DWORD layout )
-{
-    if (!unix_funcs) return GDI_ERROR;
-    return unix_funcs->pNtGdiSetLayout( hdc, wox, layout );
-}
-
-UINT WINAPI NtGdiSetSystemPaletteUse( HDC hdc, UINT use )
-{
-    if (!unix_funcs) return SYSPAL_ERROR;
-    return unix_funcs->pNtGdiSetSystemPaletteUse( hdc, use );
-}
-
 BOOL WINAPI NtUserDrawCaptionTemp( HWND hwnd, HDC hdc, const RECT *rect, HFONT font,
                                    HICON icon, const WCHAR *str, UINT flags )
 {
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index a1a4c9de2e8e..4ccab84e65dc 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -675,6 +675,18 @@ NTSTATUS WINAPI wow64_NtGdiDescribePixelFormat( UINT *args )
     return NtGdiDescribePixelFormat( hdc, format, size, descr );
 }
 
+NTSTATUS WINAPI wow64_NtGdiDoPalette( UINT *args )
+{
+    HGDIOBJ handle = get_handle( &args );
+    WORD start = get_ulong( &args );
+    WORD count = get_ulong( &args );
+    void *entries = get_ptr( &args );
+    DWORD func = get_ulong( &args );
+    BOOL inbound = get_ulong( &args );
+
+    return NtGdiDoPalette( handle, start, count, entries, func, inbound );
+}
+
 NTSTATUS WINAPI wow64_NtGdiDrawStream( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -777,6 +789,20 @@ NTSTATUS WINAPI wow64_NtGdiExtCreateRegion( UINT *args )
     return HandleToUlong( NtGdiExtCreateRegion( xform, count, data ));
 }
 
+NTSTATUS WINAPI wow64_NtGdiExtEscape( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    WCHAR *driver = get_ptr( &args );
+    INT driver_id = get_ulong( &args );
+    INT escape = get_ulong( &args );
+    INT input_size = get_ulong( &args );
+    const char *input = get_ptr( &args );
+    INT output_size = get_ulong( &args );
+    char *output = get_ptr( &args );
+
+    return NtGdiExtEscape( hdc, driver, driver_id, escape, input_size, input, output_size, output );
+}
+
 NTSTATUS WINAPI wow64_NtGdiExtFloodFill( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -951,6 +977,16 @@ NTSTATUS WINAPI wow64_NtGdiFrameRgn( UINT *args )
     return NtGdiFrameRgn( hdc, hrgn, brush, width, height );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetAndSetDCDword( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    UINT method = get_ulong( &args );
+    DWORD value = get_ulong( &args );
+    DWORD *result = get_ptr( &args );
+
+    return NtGdiGetAndSetDCDword( hdc, method, value, result );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetAppClipBox( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1067,6 +1103,22 @@ NTSTATUS WINAPI wow64_NtGdiGetDIBitsInternal( UINT *args )
                                    max_bits, max_info );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetDeviceCaps( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT cap = get_ulong( &args );
+
+    return NtGdiGetDeviceCaps( hdc, cap );
+}
+
+NTSTATUS WINAPI wow64_NtGdiGetDeviceGammaRamp( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    void *ptr = get_ptr( &args );
+
+    return NtGdiGetDeviceGammaRamp( hdc, ptr );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetFontData( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1147,6 +1199,14 @@ NTSTATUS WINAPI wow64_NtGdiGetKerningPairs( UINT *args )
     return NtGdiGetKerningPairs( hdc, count, kern_pair );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetNearestColor( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    COLORREF color = get_ulong( &args );
+
+    return NtGdiGetNearestColor( hdc, color );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetNearestPaletteIndex( UINT *args )
 {
     HPALETTE hpalette = get_handle( &args );
@@ -1238,6 +1298,14 @@ NTSTATUS WINAPI wow64_NtGdiGetRandomRgn( UINT *args )
     return NtGdiGetRandomRgn( hdc, region, code );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetRasterizerCaps( UINT *args )
+{
+    RASTERIZER_STATUS *status = get_ptr( &args );
+    UINT size = get_ulong( &args );
+
+    return NtGdiGetRasterizerCaps( status, size );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetRealizationInfo( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1246,6 +1314,15 @@ NTSTATUS WINAPI wow64_NtGdiGetRealizationInfo( UINT *args )
     return NtGdiGetRealizationInfo( hdc, info );
 }
 
+NTSTATUS WINAPI wow64_NtGdiGetRegionData( UINT *args )
+{
+    HRGN hrgn = get_ptr( &args );
+    DWORD count = get_ulong( &args );
+    RGNDATA *data = get_ptr( &args );
+
+    return NtGdiGetRegionData( hrgn, count, data );
+}
+
 NTSTATUS WINAPI wow64_NtGdiGetTextCharsetInfo( UINT *args )
 {
     HDC hdc = get_ptr( &args );
@@ -1388,15 +1465,6 @@ NTSTATUS WINAPI wow64_NtGdiRectangle( UINT *args )
     return NtGdiRectangle( hdc, left, top, right, bottom );
 }
 
-NTSTATUS WINAPI wow64_NtGdiGetRegionData( UINT *args )
-{
-    HRGN hrgn = get_ptr( &args );
-    DWORD count = get_ulong( &args );
-    RGNDATA *data = get_ptr( &args );
-
-    return NtGdiGetRegionData( hrgn, count, data );
-}
-
 NTSTATUS WINAPI wow64_NtGdiResetDC( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1408,6 +1476,14 @@ NTSTATUS WINAPI wow64_NtGdiResetDC( UINT *args )
     return NtGdiResetDC( hdc, devmode, banding, driver_info, dev );
 }
 
+NTSTATUS WINAPI wow64_NtGdiResizePalette( UINT *args )
+{
+    HPALETTE palette = get_handle( &args );
+    UINT count = get_ulong( &args );
+
+    return NtGdiResizePalette( palette, count );
+}
+
 NTSTATUS WINAPI wow64_NtGdiRestoreDC( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1757,6 +1833,23 @@ NTSTATUS WINAPI wow64_NtGdiSetDIBitsToDeviceInternal( UINT *args )
                                            max_bits, max_info, xform_coords, xform );
 }
 
+NTSTATUS WINAPI wow64_NtGdiSetDeviceGammaRamp( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    void *ptr = get_ptr( &args );
+
+    return NtGdiSetDeviceGammaRamp( hdc, ptr );
+}
+
+NTSTATUS WINAPI wow64_NtGdiSetLayout( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    LONG wox = get_ulong( &args );
+    DWORD layout = get_ulong( &args );
+
+    return NtGdiSetLayout( hdc, wox, layout );
+}
+
 NTSTATUS WINAPI wow64_NtGdiSetMagicColors( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1802,6 +1895,14 @@ NTSTATUS WINAPI wow64_NtGdiSetRectRgn( UINT *args )
     return NtGdiSetRectRgn( hrgn, left, top, right, bottom );
 }
 
+NTSTATUS WINAPI wow64_NtGdiSetSystemPaletteUse( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    UINT use = get_ulong( &args );
+
+    return NtGdiSetSystemPaletteUse( hdc, use );
+}
+
 NTSTATUS WINAPI wow64_NtGdiSetTextJustification( UINT *args )
 {
     HDC hdc = get_handle( &args );
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index b753cb7d282d..873b3e6f013c 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -68,6 +68,7 @@
     SYSCALL_ENTRY( NtGdiDeleteClientObj ) \
     SYSCALL_ENTRY( NtGdiDeleteObjectApp ) \
     SYSCALL_ENTRY( NtGdiDescribePixelFormat ) \
+    SYSCALL_ENTRY( NtGdiDoPalette ) \
     SYSCALL_ENTRY( NtGdiDrawStream ) \
     SYSCALL_ENTRY( NtGdiEllipse ) \
     SYSCALL_ENTRY( NtGdiEndDoc ) \
@@ -78,6 +79,7 @@
     SYSCALL_ENTRY( NtGdiExcludeClipRect ) \
     SYSCALL_ENTRY( NtGdiExtCreatePen ) \
     SYSCALL_ENTRY( NtGdiExtCreateRegion ) \
+    SYSCALL_ENTRY( NtGdiExtEscape ) \
     SYSCALL_ENTRY( NtGdiExtFloodFill ) \
     SYSCALL_ENTRY( NtGdiExtGetObjectW ) \
     SYSCALL_ENTRY( NtGdiExtSelectClipRgn ) \
@@ -88,6 +90,7 @@
     SYSCALL_ENTRY( NtGdiFlush ) \
     SYSCALL_ENTRY( NtGdiFontIsLinked ) \
     SYSCALL_ENTRY( NtGdiFrameRgn ) \
+    SYSCALL_ENTRY( NtGdiGetAndSetDCDword ) \
     SYSCALL_ENTRY( NtGdiGetAppClipBox ) \
     SYSCALL_ENTRY( NtGdiGetBitmapBits ) \
     SYSCALL_ENTRY( NtGdiGetBitmapDimension ) \
@@ -100,6 +103,8 @@
     SYSCALL_ENTRY( NtGdiGetDCObject ) \
     SYSCALL_ENTRY( NtGdiGetDCPoint ) \
     SYSCALL_ENTRY( NtGdiGetDIBitsInternal ) \
+    SYSCALL_ENTRY( NtGdiGetDeviceCaps ) \
+    SYSCALL_ENTRY( NtGdiGetDeviceGammaRamp ) \
     SYSCALL_ENTRY( NtGdiGetFontData ) \
     SYSCALL_ENTRY( NtGdiGetFontFileData ) \
     SYSCALL_ENTRY( NtGdiGetFontFileInfo ) \
@@ -107,11 +112,13 @@
     SYSCALL_ENTRY( NtGdiGetGlyphIndicesW ) \
     SYSCALL_ENTRY( NtGdiGetGlyphOutline ) \
     SYSCALL_ENTRY( NtGdiGetKerningPairs ) \
+    SYSCALL_ENTRY( NtGdiGetNearestColor ) \
     SYSCALL_ENTRY( NtGdiGetNearestPaletteIndex ) \
     SYSCALL_ENTRY( NtGdiGetOutlineTextMetricsInternalW ) \
     SYSCALL_ENTRY( NtGdiGetPath ) \
     SYSCALL_ENTRY( NtGdiGetPixel ) \
     SYSCALL_ENTRY( NtGdiGetRandomRgn ) \
+    SYSCALL_ENTRY( NtGdiGetRasterizerCaps ) \
     SYSCALL_ENTRY( NtGdiGetRealizationInfo ) \
     SYSCALL_ENTRY( NtGdiGetRegionData ) \
     SYSCALL_ENTRY( NtGdiGetRgnBox ) \
@@ -147,6 +154,7 @@
     SYSCALL_ENTRY( NtGdiRemoveFontMemResourceEx ) \
     SYSCALL_ENTRY( NtGdiRemoveFontResourceW ) \
     SYSCALL_ENTRY( NtGdiResetDC ) \
+    SYSCALL_ENTRY( NtGdiResizePalette ) \
     SYSCALL_ENTRY( NtGdiRestoreDC ) \
     SYSCALL_ENTRY( NtGdiRoundRect ) \
     SYSCALL_ENTRY( NtGdiSaveDC ) \
@@ -163,11 +171,14 @@
     SYSCALL_ENTRY( NtGdiSetBrushOrg ) \
     SYSCALL_ENTRY( NtGdiSetColorAdjustment ) \
     SYSCALL_ENTRY( NtGdiSetDIBitsToDeviceInternal ) \
+    SYSCALL_ENTRY( NtGdiSetDeviceGammaRamp ) \
+    SYSCALL_ENTRY( NtGdiSetLayout ) \
     SYSCALL_ENTRY( NtGdiSetMagicColors ) \
     SYSCALL_ENTRY( NtGdiSetMetaRgn ) \
     SYSCALL_ENTRY( NtGdiSetPixel ) \
     SYSCALL_ENTRY( NtGdiSetPixelFormat ) \
     SYSCALL_ENTRY( NtGdiSetRectRgn ) \
+    SYSCALL_ENTRY( NtGdiSetSystemPaletteUse ) \
     SYSCALL_ENTRY( NtGdiSetTextJustification ) \
     SYSCALL_ENTRY( NtGdiSetVirtualResolution ) \
     SYSCALL_ENTRY( NtGdiStartDoc ) \

From 70c45ff5aefa1493fad3d5ed6400f8a9cfbdb80d Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Mon, 1 Aug 2022 21:30:30 +0200
Subject: [PATCH 17/19] win32u: Use syscall interface for user functions.

---
 dlls/win32u/gdiobj.c         |  9 ----
 dlls/win32u/syscall.c        |  8 ++++
 dlls/win32u/win32u.spec      | 16 +++----
 dlls/win32u/win32u_private.h | 15 ------
 dlls/win32u/wrappers.c       | 53 ----------------------
 dlls/wow64win/syscall.h      |  8 ++++
 dlls/wow64win/user.c         | 88 ++++++++++++++++++++++++++++++++++++
 7 files changed, 112 insertions(+), 85 deletions(-)

diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index ac4a0300f2ac..44eac99a30d5 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1030,15 +1030,6 @@ BOOL WINAPI NtGdiSetColorAdjustment( HDC hdc, const COLORADJUSTMENT *ca )
 
 static struct unix_funcs unix_funcs =
 {
-    NtUserDrawCaptionTemp,
-    NtUserDrawMenuBarTemp,
-    NtUserEndPaint,
-    NtUserExcludeUpdateRgn,
-    NtUserReleaseDC,
-    NtUserScrollDC,
-    NtUserSelectPalette,
-    NtUserUpdateLayeredWindow,
-
     SetDIBits,
     __wine_get_brush_bitmap_info,
     __wine_get_file_outline_text_metric,
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 8d3112556586..5f0d9464931f 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -248,15 +248,19 @@ static void * const syscalls[] =
     NtUserDisplayConfigGetDeviceInfo,
     NtUserDragDetect,
     NtUserDragObject,
+    NtUserDrawCaptionTemp,
     NtUserDrawIconEx,
+    NtUserDrawMenuBarTemp,
     NtUserEmptyClipboard,
     NtUserEnableMenuItem,
     NtUserEnableScrollBar,
     NtUserEndDeferWindowPosEx,
     NtUserEndMenu,
+    NtUserEndPaint,
     NtUserEnumDisplayDevices,
     NtUserEnumDisplayMonitors,
     NtUserEnumDisplaySettings,
+    NtUserExcludeUpdateRgn,
     NtUserFindExistingCursorIcon,
     NtUserFindWindowEx,
     NtUserFlashWindowEx,
@@ -351,10 +355,13 @@ static void * const syscalls[] =
     NtUserRegisterClassExWOW,
     NtUserRegisterHotKey,
     NtUserRegisterRawInputDevices,
+    NtUserReleaseDC,
     NtUserRemoveClipboardFormatListener,
     NtUserRemoveMenu,
     NtUserRemoveProp,
+    NtUserScrollDC,
     NtUserScrollWindowEx,
+    NtUserSelectPalette,
     NtUserSendInput,
     NtUserSetActiveWindow,
     NtUserSetCapture,
@@ -413,6 +420,7 @@ static void * const syscalls[] =
     NtUserUnregisterHotKey,
     NtUserUpdateInputContext,
     NtUserValidateRect,
+    NtUserUpdateLayeredWindow,
     NtUserVkKeyScanEx,
     NtUserWaitForInputIdle,
     NtUserWaitMessage,
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index 6e9e4a9610eb..fc3310b29219 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -849,9 +849,9 @@
 @ stdcall -syscall NtUserDragObject(long long long long long)
 @ stub NtUserDrawAnimatedRects
 @ stub NtUserDrawCaption
-@ stdcall NtUserDrawCaptionTemp(long long ptr long long wstr long)
+@ stdcall -syscall NtUserDrawCaptionTemp(long long ptr long long wstr long)
 @ stdcall -syscall NtUserDrawIconEx(long long long long long long long long long)
-@ stdcall NtUserDrawMenuBarTemp(long long ptr long long)
+@ stdcall -syscall NtUserDrawMenuBarTemp(long long ptr long long)
 @ stub NtUserDwmGetRemoteSessionOcclusionEvent
 @ stub NtUserDwmGetRemoteSessionOcclusionState
 @ stub NtUserDwmKernelShutdown
@@ -874,12 +874,12 @@
 @ stub NtUserEnableWindowResizeOptimization
 @ stdcall -syscall NtUserEndDeferWindowPosEx(long long)
 @ stdcall -syscall NtUserEndMenu()
-@ stdcall NtUserEndPaint(long ptr)
+@ stdcall -syscall NtUserEndPaint(long ptr)
 @ stdcall -syscall NtUserEnumDisplayDevices(ptr long ptr long)
 @ stdcall -syscall NtUserEnumDisplayMonitors(long ptr ptr long)
 @ stdcall -syscall NtUserEnumDisplaySettings(ptr long ptr long)
 @ stub NtUserEvent
-@ stdcall NtUserExcludeUpdateRgn(long long)
+@ stdcall -syscall NtUserExcludeUpdateRgn(long long)
 @ stub NtUserFillWindow
 @ stdcall -syscall NtUserFindExistingCursorIcon(ptr ptr ptr)
 @ stdcall -syscall NtUserFindWindowEx(long long ptr ptr long)
@@ -1139,7 +1139,7 @@
 @ stub NtUserRegisterTouchPadCapable
 @ stub NtUserRegisterUserApiHook
 @ stub NtUserRegisterWindowMessage
-@ stdcall NtUserReleaseDC(long long)
+@ stdcall -syscall NtUserReleaseDC(long long)
 @ stub NtUserReleaseDwmHitTestWaiters
 @ stub NtUserRemoteConnect
 @ stub NtUserRemoteRedrawRectangle
@@ -1155,9 +1155,9 @@
 @ stub NtUserResolveDesktopForWOW
 @ stub NtUserRestoreWindowDpiChanges
 @ stub NtUserSBGetParms
-@ stdcall NtUserScrollDC(long long long ptr ptr long ptr)
+@ stdcall -syscall NtUserScrollDC(long long long ptr ptr long ptr)
 @ stdcall -syscall NtUserScrollWindowEx(long long long ptr ptr long ptr long)
-@ stdcall NtUserSelectPalette(long long long)
+@ stdcall -syscall NtUserSelectPalette(long long long)
 @ stub NtUserSendEventMessage
 @ stdcall -syscall NtUserSendInput(long ptr long)
 @ stub NtUserSendInteracsetiveControlHapticsReport
@@ -1295,7 +1295,7 @@
 @ stub NtUserUpdateDefaultDesktopThumbnail
 @ stdcall -syscall NtUserUpdateInputContext(long long ptr)
 @ stub NtUserUpdateInstance
-@ stdcall NtUserUpdateLayeredWindow(long long ptr ptr long ptr long ptr long ptr)
+@ stdcall -syscall NtUserUpdateLayeredWindow(long long ptr ptr long ptr long ptr long ptr)
 @ stub NtUserUpdatePerUserSystemParameters
 @ stub NtUserUpdateWindowInputSinkHints
 @ stub NtUserUpdateWindowTrackingInfo
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index abb2d6565772..c676aca928ce 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -34,21 +34,6 @@
 
 struct unix_funcs
 {
-    /* win32u functions */
-    BOOL     (WINAPI *pNtUserDrawCaptionTemp)( HWND hwnd, HDC hdc, const RECT *rect, HFONT font,
-                                               HICON icon, const WCHAR *str, UINT flags );
-    DWORD    (WINAPI *pNtUserDrawMenuBarTemp)( HWND hwnd, HDC hdc, RECT *rect, HMENU handle, HFONT font );
-    BOOL     (WINAPI *pNtUserEndPaint)( HWND hwnd, const PAINTSTRUCT *ps );
-    INT      (WINAPI *pNtUserExcludeUpdateRgn)( HDC hdc, HWND hwnd );
-    INT      (WINAPI *pNtUserReleaseDC)( HWND hwnd, HDC hdc );
-    BOOL     (WINAPI *pNtUserScrollDC)( HDC hdc, INT dx, INT dy, const RECT *scroll, const RECT *clip,
-                                        HRGN ret_update_rgn, RECT *update_rect );
-    HPALETTE (WINAPI *pNtUserSelectPalette)( HDC hdc, HPALETTE hpal, WORD bkg );
-    BOOL     (WINAPI *pNtUserUpdateLayeredWindow)( HWND hwnd, HDC hdc_dst, const POINT *pts_dst,
-                                                   const SIZE *size, HDC hdc_src, const POINT *pts_src,
-                                                   COLORREF key, const BLENDFUNCTION *blend,
-                                                   DWORD flags, const RECT *dirty );
-
     /* Wine-specific functions */
     INT (WINAPI *pSetDIBits)( HDC hdc, HBITMAP hbitmap, UINT startscan,
                               UINT lines, const void *bits, const BITMAPINFO *info,
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index 7957f1052c7c..c89c0f16edc4 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -24,59 +24,6 @@
 
 static const struct unix_funcs *unix_funcs;
 
-BOOL WINAPI NtUserEndPaint( HWND hwnd, const PAINTSTRUCT *ps )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtUserEndPaint( hwnd, ps );
-}
-
-BOOL WINAPI NtUserDrawCaptionTemp( HWND hwnd, HDC hdc, const RECT *rect, HFONT font,
-                                   HICON icon, const WCHAR *str, UINT flags )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtUserDrawCaptionTemp( hwnd, hdc, rect, font, icon, str, flags );
-}
-
-DWORD WINAPI NtUserDrawMenuBarTemp( HWND hwnd, HDC hdc, RECT *rect, HMENU handle, HFONT font )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtUserDrawMenuBarTemp( hwnd, hdc, rect, handle, font );
-}
-
-INT WINAPI NtUserExcludeUpdateRgn( HDC hdc, HWND hwnd )
-{
-    if (!unix_funcs) return ERROR;
-    return unix_funcs->pNtUserExcludeUpdateRgn( hdc, hwnd );
-}
-
-INT WINAPI NtUserReleaseDC( HWND hwnd, HDC hdc )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtUserReleaseDC( hwnd, hdc );
-}
-
-BOOL WINAPI NtUserScrollDC( HDC hdc, INT dx, INT dy, const RECT *scroll, const RECT *clip,
-                            HRGN ret_update_rgn, RECT *update_rect )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtUserScrollDC( hdc, dx, dy, scroll, clip, ret_update_rgn, update_rect );
-}
-
-HPALETTE WINAPI NtUserSelectPalette( HDC hdc, HPALETTE hpal, WORD bkg )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pNtUserSelectPalette( hdc, hpal, bkg );
-}
-
-BOOL WINAPI NtUserUpdateLayeredWindow( HWND hwnd, HDC hdc_dst, const POINT *pts_dst, const SIZE *size,
-                                       HDC hdc_src, const POINT *pts_src, COLORREF key,
-                                       const BLENDFUNCTION *blend, DWORD flags, const RECT *dirty )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->pNtUserUpdateLayeredWindow( hwnd, hdc_dst, pts_dst, size, hdc_src, pts_src,
-                                                   key, blend, flags, dirty );
-}
-
 INT WINAPI SetDIBits( HDC hdc, HBITMAP hbitmap, UINT startscan,
                       UINT lines, const void *bits, const BITMAPINFO *info,
                       UINT coloruse )
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index 873b3e6f013c..bd68c98deba9 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -234,15 +234,19 @@
     SYSCALL_ENTRY( NtUserDisplayConfigGetDeviceInfo ) \
     SYSCALL_ENTRY( NtUserDragDetect ) \
     SYSCALL_ENTRY( NtUserDragObject ) \
+    SYSCALL_ENTRY( NtUserDrawCaptionTemp ) \
     SYSCALL_ENTRY( NtUserDrawIconEx ) \
+    SYSCALL_ENTRY( NtUserDrawMenuBarTemp ) \
     SYSCALL_ENTRY( NtUserEmptyClipboard ) \
     SYSCALL_ENTRY( NtUserEnableMenuItem ) \
     SYSCALL_ENTRY( NtUserEnableScrollBar ) \
     SYSCALL_ENTRY( NtUserEndDeferWindowPosEx ) \
     SYSCALL_ENTRY( NtUserEndMenu ) \
+    SYSCALL_ENTRY( NtUserEndPaint ) \
     SYSCALL_ENTRY( NtUserEnumDisplayDevices ) \
     SYSCALL_ENTRY( NtUserEnumDisplayMonitors ) \
     SYSCALL_ENTRY( NtUserEnumDisplaySettings ) \
+    SYSCALL_ENTRY( NtUserExcludeUpdateRgn ) \
     SYSCALL_ENTRY( NtUserFindExistingCursorIcon ) \
     SYSCALL_ENTRY( NtUserFindWindowEx ) \
     SYSCALL_ENTRY( NtUserFlashWindowEx ) \
@@ -337,10 +341,13 @@
     SYSCALL_ENTRY( NtUserRegisterClassExWOW ) \
     SYSCALL_ENTRY( NtUserRegisterHotKey ) \
     SYSCALL_ENTRY( NtUserRegisterRawInputDevices ) \
+    SYSCALL_ENTRY( NtUserReleaseDC ) \
     SYSCALL_ENTRY( NtUserRemoveClipboardFormatListener ) \
     SYSCALL_ENTRY( NtUserRemoveMenu ) \
     SYSCALL_ENTRY( NtUserRemoveProp ) \
+    SYSCALL_ENTRY( NtUserScrollDC ) \
     SYSCALL_ENTRY( NtUserScrollWindowEx ) \
+    SYSCALL_ENTRY( NtUserSelectPalette ) \
     SYSCALL_ENTRY( NtUserSendInput ) \
     SYSCALL_ENTRY( NtUserSetActiveWindow ) \
     SYSCALL_ENTRY( NtUserSetCapture ) \
@@ -399,6 +406,7 @@
     SYSCALL_ENTRY( NtUserUnregisterHotKey ) \
     SYSCALL_ENTRY( NtUserUpdateInputContext ) \
     SYSCALL_ENTRY( NtUserValidateRect ) \
+    SYSCALL_ENTRY( NtUserUpdateLayeredWindow ) \
     SYSCALL_ENTRY( NtUserVkKeyScanEx ) \
     SYSCALL_ENTRY( NtUserWaitForInputIdle ) \
     SYSCALL_ENTRY( NtUserWaitMessage ) \
diff --git a/dlls/wow64win/user.c b/dlls/wow64win/user.c
index 4ce8c94c1af2..4bd63326c71c 100644
--- a/dlls/wow64win/user.c
+++ b/dlls/wow64win/user.c
@@ -1600,6 +1600,19 @@ NTSTATUS WINAPI wow64_NtUserDragObject( UINT *args )
     return NtUserDragObject( parent, hwnd, fmt, data, hcursor );
 }
 
+NTSTATUS WINAPI wow64_NtUserDrawCaptionTemp( UINT *args )
+{
+    HWND hwnd = get_handle( &args );
+    HDC hdc = get_handle( &args );
+    const RECT *rect = get_ptr( &args );
+    HFONT font = get_handle( &args );
+    HICON icon = get_handle( &args );
+    const WCHAR *str = get_ptr( &args );
+    UINT flags = get_ulong( &args );
+
+    return NtUserDrawCaptionTemp( hwnd, hdc, rect, font, icon, str, flags );
+}
+
 NTSTATUS WINAPI wow64_NtUserDrawIconEx( UINT *args )
 {
     HDC hdc = get_handle( &args );
@@ -1615,6 +1628,17 @@ NTSTATUS WINAPI wow64_NtUserDrawIconEx( UINT *args )
     return NtUserDrawIconEx( hdc, x0, y0, icon, width, height, istep, hbr, flags );
 }
 
+NTSTATUS WINAPI wow64_NtUserDrawMenuBarTemp( UINT *args )
+{
+    HWND hwnd = get_handle( &args );
+    HDC hdc = get_handle( &args );
+    RECT *rect = get_ptr( &args );
+    HMENU handle = get_handle( &args );
+    HFONT font = get_handle( &args );
+
+    return NtUserDrawMenuBarTemp( hwnd, hdc, rect, handle, font );
+}
+
 NTSTATUS WINAPI wow64_NtUserEmptyClipboard( UINT *args )
 {
     return NtUserEmptyClipboard();
@@ -1651,6 +1675,15 @@ NTSTATUS WINAPI wow64_NtUserEndMenu( UINT *args )
     return NtUserEndMenu();
 }
 
+NTSTATUS WINAPI wow64_NtUserEndPaint( UINT *args )
+{
+    HWND hwnd = get_handle( &args );
+    const PAINTSTRUCT32 *ps32 = get_ptr( &args );
+    PAINTSTRUCT ps;
+
+    return NtUserEndPaint( hwnd, paintstruct_32to64( &ps, ps32 ));
+}
+
 NTSTATUS WINAPI wow64_NtUserEnumDisplayDevices( UINT *args )
 {
     UNICODE_STRING32 *device32 = get_ptr( &args );
@@ -1686,6 +1719,14 @@ NTSTATUS WINAPI wow64_NtUserEnumDisplaySettings( UINT *args )
                                       mode, dev_mode, flags );
 }
 
+NTSTATUS WINAPI wow64_NtUserExcludeUpdateRgn( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HWND hwnd = get_handle( &args );
+
+    return NtUserExcludeUpdateRgn( hdc, hwnd );
+}
+
 NTSTATUS WINAPI wow64_NtUserFindExistingCursorIcon( UINT *args )
 {
     UNICODE_STRING32 *module32 = get_ptr( &args );
@@ -3271,6 +3312,14 @@ NTSTATUS WINAPI wow64_NtUserRegisterRawInputDevices( UINT *args )
     return NtUserRegisterRawInputDevices( devices64, count, sizeof(*devices64) );
 }
 
+NTSTATUS WINAPI wow64_NtUserReleaseDC( UINT *args )
+{
+    HWND hwnd = get_handle( &args );
+    HDC hdc = get_handle( &args );
+
+    return NtUserReleaseDC( hwnd, hdc );
+}
+
 NTSTATUS WINAPI wow64_NtUserRemoveClipboardFormatListener( UINT *args )
 {
     HWND hwnd = get_handle( &args );
@@ -3295,6 +3344,19 @@ NTSTATUS WINAPI wow64_NtUserRemoveProp( UINT *args )
     return HandleToUlong( NtUserRemoveProp( hwnd, str ));
 }
 
+NTSTATUS WINAPI wow64_NtUserScrollDC( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    INT dx = get_ulong( &args );
+    INT dy = get_ulong( &args );
+    const RECT *scroll = get_ptr( &args );
+    const RECT *clip = get_ptr( &args );
+    HRGN ret_update_rgn = get_handle( &args );
+    RECT *update_rect = get_ptr( &args );
+
+    return NtUserScrollDC( hdc, dx, dy, scroll, clip, ret_update_rgn, update_rect );
+}
+
 NTSTATUS WINAPI wow64_NtUserScrollWindowEx( UINT *args )
 {
     HWND hwnd = get_handle( &args );
@@ -3309,6 +3371,15 @@ NTSTATUS WINAPI wow64_NtUserScrollWindowEx( UINT *args )
     return NtUserScrollWindowEx( hwnd, dx, dy, rect, clip_rect, update_rgn, update_rect, flags );
 }
 
+NTSTATUS WINAPI wow64_NtUserSelectPalette( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HPALETTE hpal = get_handle( &args );
+    WORD bkg = get_ulong( &args );
+
+    return HandleToUlong( NtUserSelectPalette( hdc, hpal, bkg ));
+}
+
 NTSTATUS WINAPI wow64_NtUserSendInput( UINT *args )
 {
     UINT count = get_ulong( &args );
@@ -4137,6 +4208,23 @@ NTSTATUS WINAPI wow64_NtUserUpdateInputContext( UINT *args )
     return NtUserUpdateInputContext( handle, attr, value );
 }
 
+NTSTATUS WINAPI wow64_NtUserUpdateLayeredWindow( UINT *args )
+{
+    HWND hwnd = get_handle( &args );
+    HDC hdc_dst = get_handle( &args );
+    const POINT *pts_dst = get_ptr( &args );
+    const SIZE *size = get_ptr( &args );
+    HDC hdc_src = get_handle( &args );
+    const POINT *pts_src = get_ptr( &args );
+    COLORREF key = get_ulong( &args );
+    const BLENDFUNCTION *blend = get_ptr( &args );
+    DWORD flags = get_ulong( &args );
+    const RECT *dirty = get_ptr( &args );
+
+    return NtUserUpdateLayeredWindow( hwnd, hdc_dst, pts_dst, size, hdc_src, pts_src,
+                                      key, blend, flags, dirty );
+}
+
 NTSTATUS WINAPI wow64_NtUserValidateRect( UINT *args )
 {
     HWND hwnd = get_handle( &args );

From 16a5637514442e8bf241ba02e6728d1be3656946 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Mon, 1 Aug 2022 21:42:14 +0200
Subject: [PATCH 18/19] win32u: Use syscall interface for remaining functions.

FIXME: revisit need for them
---
 dlls/gdi32/enhmetafile.c     |  6 ++---
 dlls/gdi32/gdi32.spec        |  2 +-
 dlls/gdi32/text.c            | 46 ++++++++++++++++++------------------
 dlls/win32u/brush.c          |  2 +-
 dlls/win32u/dc.c             |  2 +-
 dlls/win32u/font.c           |  7 ++++--
 dlls/win32u/gdiobj.c         |  4 ----
 dlls/win32u/syscall.c        |  4 ++++
 dlls/win32u/win32u.spec      |  8 +++----
 dlls/win32u/win32u_private.h |  6 -----
 dlls/win32u/wrappers.c       | 33 +++++++-------------------
 dlls/wow64win/gdi.c          | 43 +++++++++++++++++++++++++++++++++
 dlls/wow64win/syscall.h      |  6 ++++-
 include/ntgdi.h              | 11 +++++----
 14 files changed, 104 insertions(+), 76 deletions(-)

diff --git a/dlls/gdi32/enhmetafile.c b/dlls/gdi32/enhmetafile.c
index 336f2d389fd3..716e1689f1b7 100644
--- a/dlls/gdi32/enhmetafile.c
+++ b/dlls/gdi32/enhmetafile.c
@@ -1894,7 +1894,7 @@ BOOL WINAPI PlayEnhMetaFileRecord(
           LONG height = pbi->bmiHeader.biHeight;
 
           hBmp = CreateBitmap(pbi->bmiHeader.biWidth, abs(height), 1, 1, NULL);
-          SetDIBits(hdc, hBmp, 0, pbi->bmiHeader.biHeight,
+          NtGdiSetDIBits(hdc, hBmp, 0, pbi->bmiHeader.biHeight,
               (const BYTE *)mr + pCreateMonoBrush->offBits, pbi, pCreateMonoBrush->iUsage);
         }
         else
@@ -2049,7 +2049,7 @@ BOOL WINAPI PlayEnhMetaFileRecord(
 	pbi = (const BITMAPINFO *)((const BYTE *)mr + pMaskBlt->offBmiMask);
 	hBmpMask = CreateBitmap(pbi->bmiHeader.biWidth, pbi->bmiHeader.biHeight,
 	             1, 1, NULL);
-	SetDIBits(hdc, hBmpMask, 0, pbi->bmiHeader.biHeight,
+	NtGdiSetDIBits(hdc, hBmpMask, 0, pbi->bmiHeader.biHeight,
 	  (const BYTE *)mr + pMaskBlt->offBitsMask, pbi, pMaskBlt->iUsageMask);
 
 	pbi = (const BITMAPINFO *)((const BYTE *)mr + pMaskBlt->offBmiSrc);
@@ -2102,7 +2102,7 @@ BOOL WINAPI PlayEnhMetaFileRecord(
 	pbi = (const BITMAPINFO *)((const BYTE *)mr + pPlgBlt->offBmiMask);
 	hBmpMask = CreateBitmap(pbi->bmiHeader.biWidth, pbi->bmiHeader.biHeight,
 	             1, 1, NULL);
-	SetDIBits(hdc, hBmpMask, 0, pbi->bmiHeader.biHeight,
+	NtGdiSetDIBits(hdc, hBmpMask, 0, pbi->bmiHeader.biHeight,
 	  (const BYTE *)mr + pPlgBlt->offBitsMask, pbi, pPlgBlt->iUsageMask);
 
 	pbi = (const BITMAPINFO *)((const BYTE *)mr + pPlgBlt->offBmiSrc);
diff --git a/dlls/gdi32/gdi32.spec b/dlls/gdi32/gdi32.spec
index d6a0ad90e1e0..9705e976d0db 100644
--- a/dlls/gdi32/gdi32.spec
+++ b/dlls/gdi32/gdi32.spec
@@ -482,7 +482,7 @@
 @ stdcall SetDCBrushColor(long long)
 @ stdcall SetDCPenColor(long long)
 @ stdcall SetDIBColorTable(long long long ptr)
-@ stdcall SetDIBits(long long long long ptr ptr long)
+@ stdcall SetDIBits(long long long long ptr ptr long) NtGdiSetDIBits
 @ stdcall SetDIBitsToDevice(long long long long long long long long long ptr ptr long)
 @ stdcall SetDeviceGammaRamp(long ptr) NtGdiSetDeviceGammaRamp
 @ stdcall SetEnhMetaFileBits(long ptr)
diff --git a/dlls/gdi32/text.c b/dlls/gdi32/text.c
index b0134e529f5a..07e980ac60cc 100644
--- a/dlls/gdi32/text.c
+++ b/dlls/gdi32/text.c
@@ -2668,10 +2668,11 @@ static BOOL create_fot( const WCHAR *resource, const WCHAR *font_file, const str
 BOOL WINAPI CreateScalableFontResourceW( DWORD hidden, const WCHAR *resource_file,
                                          const WCHAR *font_file, const WCHAR *font_path )
 {
+    WCHAR path[MAX_PATH], face_name[128];
     struct fontdir fontdir = { 0 };
     UNICODE_STRING nt_name;
-    OUTLINETEXTMETRICW otm;
-    WCHAR path[MAX_PATH];
+    TEXTMETRICW otm;
+    UINT em_square;
     BOOL ret;
 
     TRACE("(%ld, %s, %s, %s)\n", hidden, debugstr_w(resource_file),
@@ -2688,10 +2689,10 @@ BOOL WINAPI CreateScalableFontResourceW( DWORD hidden, const WCHAR *resource_fil
         if (!RtlDosPathNameToNtPathName_U( path, &nt_name, NULL, NULL )) goto done;
     }
     else if (!RtlDosPathNameToNtPathName_U( font_file, &nt_name, NULL, NULL )) goto done;
-    ret = __wine_get_file_outline_text_metric( nt_name.Buffer, &otm );
+    ret = __wine_get_file_outline_text_metric( nt_name.Buffer, &otm, &em_square, face_name );
     RtlFreeUnicodeString( &nt_name );
     if (!ret) goto done;
-    if (!(otm.otmTextMetrics.tmPitchAndFamily & TMPF_TRUETYPE)) goto done;
+    if (!(otm.tmPitchAndFamily & TMPF_TRUETYPE)) goto done;
 
     fontdir.num_of_resources  = 1;
     fontdir.res_id            = 0;
@@ -2699,32 +2700,31 @@ BOOL WINAPI CreateScalableFontResourceW( DWORD hidden, const WCHAR *resource_fil
     fontdir.dfSize            = sizeof(fontdir);
     strcpy( fontdir.dfCopyright, "Wine fontdir" );
     fontdir.dfType            = 0x4003;  /* 0x0080 set if private */
-    fontdir.dfPoints          = otm.otmEMSquare;
+    fontdir.dfPoints          = em_square;
     fontdir.dfVertRes         = 72;
     fontdir.dfHorizRes        = 72;
-    fontdir.dfAscent          = otm.otmTextMetrics.tmAscent;
-    fontdir.dfInternalLeading = otm.otmTextMetrics.tmInternalLeading;
-    fontdir.dfExternalLeading = otm.otmTextMetrics.tmExternalLeading;
-    fontdir.dfItalic          = otm.otmTextMetrics.tmItalic;
-    fontdir.dfUnderline       = otm.otmTextMetrics.tmUnderlined;
-    fontdir.dfStrikeOut       = otm.otmTextMetrics.tmStruckOut;
-    fontdir.dfWeight          = otm.otmTextMetrics.tmWeight;
-    fontdir.dfCharSet         = otm.otmTextMetrics.tmCharSet;
+    fontdir.dfAscent          = otm.tmAscent;
+    fontdir.dfInternalLeading = otm.tmInternalLeading;
+    fontdir.dfExternalLeading = otm.tmExternalLeading;
+    fontdir.dfItalic          = otm.tmItalic;
+    fontdir.dfUnderline       = otm.tmUnderlined;
+    fontdir.dfStrikeOut       = otm.tmStruckOut;
+    fontdir.dfWeight          = otm.tmWeight;
+    fontdir.dfCharSet         = otm.tmCharSet;
     fontdir.dfPixWidth        = 0;
-    fontdir.dfPixHeight       = otm.otmTextMetrics.tmHeight;
-    fontdir.dfPitchAndFamily  = otm.otmTextMetrics.tmPitchAndFamily;
-    fontdir.dfAvgWidth        = otm.otmTextMetrics.tmAveCharWidth;
-    fontdir.dfMaxWidth        = otm.otmTextMetrics.tmMaxCharWidth;
-    fontdir.dfFirstChar       = otm.otmTextMetrics.tmFirstChar;
-    fontdir.dfLastChar        = otm.otmTextMetrics.tmLastChar;
-    fontdir.dfDefaultChar     = otm.otmTextMetrics.tmDefaultChar;
-    fontdir.dfBreakChar       = otm.otmTextMetrics.tmBreakChar;
+    fontdir.dfPixHeight       = otm.tmHeight;
+    fontdir.dfPitchAndFamily  = otm.tmPitchAndFamily;
+    fontdir.dfAvgWidth        = otm.tmAveCharWidth;
+    fontdir.dfMaxWidth        = otm.tmMaxCharWidth;
+    fontdir.dfFirstChar       = otm.tmFirstChar;
+    fontdir.dfLastChar        = otm.tmLastChar;
+    fontdir.dfDefaultChar     = otm.tmDefaultChar;
+    fontdir.dfBreakChar       = otm.tmBreakChar;
     fontdir.dfWidthBytes      = 0;
     fontdir.dfDevice          = 0;
     fontdir.dfFace            = FIELD_OFFSET( struct fontdir, szFaceName );
     fontdir.dfReserved        = 0;
-    WideCharToMultiByte( CP_ACP, 0, (WCHAR *)otm.otmpFamilyName, -1,
-                         fontdir.szFaceName, LF_FACESIZE, NULL, NULL );
+    WideCharToMultiByte( CP_ACP, 0, face_name, -1, fontdir.szFaceName, LF_FACESIZE, NULL, NULL );
 
     if (hidden) fontdir.dfType |= 0x80;
     return create_fot( resource_file, font_file, &fontdir );
diff --git a/dlls/win32u/brush.c b/dlls/win32u/brush.c
index 8523826627e8..9ab674197ae2 100644
--- a/dlls/win32u/brush.c
+++ b/dlls/win32u/brush.c
@@ -147,7 +147,7 @@ void free_brush_pattern( struct brush_pattern *pattern )
 /**********************************************************************
  *           __wine_get_brush_bitmap_info    (win32u.@)
  */
-BOOL CDECL __wine_get_brush_bitmap_info( HBRUSH handle, BITMAPINFO *info, void *bits, UINT *usage )
+BOOL WINAPI __wine_get_brush_bitmap_info( HBRUSH handle, BITMAPINFO *info, void *bits, UINT *usage )
 {
     BRUSHOBJ *brush;
     BOOL ret = FALSE;
diff --git a/dlls/win32u/dc.c b/dlls/win32u/dc.c
index 8379cd353eff..ea406af10fd1 100644
--- a/dlls/win32u/dc.c
+++ b/dlls/win32u/dc.c
@@ -1474,7 +1474,7 @@ DWORD WINAPI NtGdiSetLayout( HDC hdc, LONG wox, DWORD layout )
 /**********************************************************************
  *           __wine_get_icm_profile     (win32u.@)
  */
-BOOL CDECL __wine_get_icm_profile( HDC hdc, BOOL allow_default, DWORD *size, WCHAR *filename )
+BOOL WINAPI __wine_get_icm_profile( HDC hdc, BOOL allow_default, DWORD *size, WCHAR *filename )
 {
     PHYSDEV physdev;
     DC *dc;
diff --git a/dlls/win32u/font.c b/dlls/win32u/font.c
index 9c5da5bbdc9a..09c99037307a 100644
--- a/dlls/win32u/font.c
+++ b/dlls/win32u/font.c
@@ -6256,7 +6256,8 @@ DWORD WINAPI NtGdiGetGlyphOutline( HDC hdc, UINT ch, UINT format, GLYPHMETRICS *
 /**********************************************************************
  *           __wine_get_file_outline_text_metric    (win32u.@)
  */
-BOOL CDECL __wine_get_file_outline_text_metric( const WCHAR *path, OUTLINETEXTMETRICW *otm )
+BOOL WINAPI __wine_get_file_outline_text_metric( const WCHAR *path, TEXTMETRICW *otm,
+                                                 UINT *em_square, WCHAR *face_name )
 {
     struct gdi_font *font = NULL;
 
@@ -6266,7 +6267,9 @@ BOOL CDECL __wine_get_file_outline_text_metric( const WCHAR *path, OUTLINETEXTME
     font->lf.lfHeight = 100;
     if (!font_funcs->load_font( font )) goto done;
     if (!font_funcs->set_outline_text_metrics( font )) goto done;
-    *otm = font->otm;
+    *otm = font->otm.otmTextMetrics;
+    *em_square = font->otm.otmEMSquare;
+    wcscpy( face_name, (const WCHAR *)font->otm.otmpFamilyName );
     free_gdi_font( font );
     return TRUE;
 
diff --git a/dlls/win32u/gdiobj.c b/dlls/win32u/gdiobj.c
index 44eac99a30d5..122db5a2112c 100644
--- a/dlls/win32u/gdiobj.c
+++ b/dlls/win32u/gdiobj.c
@@ -1030,10 +1030,6 @@ BOOL WINAPI NtGdiSetColorAdjustment( HDC hdc, const COLORADJUSTMENT *ca )
 
 static struct unix_funcs unix_funcs =
 {
-    SetDIBits,
-    __wine_get_brush_bitmap_info,
-    __wine_get_file_outline_text_metric,
-    __wine_get_icm_profile,
     __wine_send_input,
 };
 
diff --git a/dlls/win32u/syscall.c b/dlls/win32u/syscall.c
index 5f0d9464931f..3cf58ad2397f 100644
--- a/dlls/win32u/syscall.c
+++ b/dlls/win32u/syscall.c
@@ -184,6 +184,7 @@ static void * const syscalls[] =
     NtGdiSetBoundsRect,
     NtGdiSetBrushOrg,
     NtGdiSetColorAdjustment,
+    SetDIBits,
     NtGdiSetDIBitsToDeviceInternal,
     NtGdiSetDeviceGammaRamp,
     NtGdiSetLayout,
@@ -426,6 +427,9 @@ static void * const syscalls[] =
     NtUserWaitMessage,
     NtUserWindowFromDC,
     NtUserWindowFromPoint,
+    __wine_get_brush_bitmap_info,
+    __wine_get_file_outline_text_metric,
+    __wine_get_icm_profile,
 };
 
 static BYTE arguments[ARRAY_SIZE(syscalls)];
diff --git a/dlls/win32u/win32u.spec b/dlls/win32u/win32u.spec
index fc3310b29219..18671323c884 100644
--- a/dlls/win32u/win32u.spec
+++ b/dlls/win32u/win32u.spec
@@ -597,6 +597,7 @@
 @ stdcall -syscall NtGdiSetBrushOrg(long long long ptr)
 @ stdcall -syscall NtGdiSetColorAdjustment(long ptr)
 @ stub NtGdiSetColorSpace
+@ stdcall -syscall NtGdiSetDIBits(long long long long ptr ptr long) # not present on Windows
 @ stdcall -syscall NtGdiSetDIBitsToDeviceInternal(long long long long long long long long long ptr ptr long long long long long)
 @ stdcall -syscall NtGdiSetDeviceGammaRamp(ptr ptr)
 @ stub NtGdiSetFontEnumeration
@@ -1324,7 +1325,6 @@
 @ cdecl __wine_send_input(long ptr ptr)
 
 # gdi32
-@ stdcall SetDIBits(long long long long ptr ptr long)
-@ cdecl __wine_get_brush_bitmap_info(long ptr ptr ptr)
-@ cdecl __wine_get_icm_profile(long long ptr ptr)
-@ cdecl __wine_get_file_outline_text_metric(wstr ptr)
+@ stdcall -syscall __wine_get_brush_bitmap_info(long ptr ptr ptr)
+@ stdcall -syscall __wine_get_icm_profile(long long ptr ptr)
+@ stdcall -syscall __wine_get_file_outline_text_metric(wstr ptr ptr ptr)
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index c676aca928ce..c5ac85283213 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -35,12 +35,6 @@
 struct unix_funcs
 {
     /* Wine-specific functions */
-    INT (WINAPI *pSetDIBits)( HDC hdc, HBITMAP hbitmap, UINT startscan,
-                              UINT lines, const void *bits, const BITMAPINFO *info,
-                              UINT coloruse );
-    BOOL (CDECL *get_brush_bitmap_info)( HBRUSH handle, BITMAPINFO *info, void *bits, UINT *usage );
-    BOOL (CDECL *get_file_outline_text_metric)( const WCHAR *path, OUTLINETEXTMETRICW *otm );
-    BOOL (CDECL *get_icm_profile)( HDC hdc, BOOL allow_default, DWORD *size, WCHAR *filename );
     BOOL (CDECL *wine_send_input)( HWND hwnd, const INPUT *input, const RAWINPUT *rawinput );
 };
 
diff --git a/dlls/win32u/wrappers.c b/dlls/win32u/wrappers.c
index c89c0f16edc4..248310ef0ef5 100644
--- a/dlls/win32u/wrappers.c
+++ b/dlls/win32u/wrappers.c
@@ -21,38 +21,21 @@
 #include "ntstatus.h"
 #define WIN32_NO_STATUS
 #include "win32u_private.h"
+#include "wine/debug.h"
 
-static const struct unix_funcs *unix_funcs;
-
-INT WINAPI SetDIBits( HDC hdc, HBITMAP hbitmap, UINT startscan,
-                      UINT lines, const void *bits, const BITMAPINFO *info,
-                      UINT coloruse )
-{
-    if (!unix_funcs) return 0;
-    return unix_funcs->pSetDIBits( hdc, hbitmap, startscan, lines, bits, info, coloruse );
-}
+WINE_DEFAULT_DEBUG_CHANNEL(wow);
 
-BOOL CDECL __wine_get_icm_profile( HDC hdc, BOOL allow_default, DWORD *size, WCHAR *filename )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->get_icm_profile( hdc, allow_default, size, filename );
-}
 
-BOOL CDECL __wine_get_brush_bitmap_info( HBRUSH handle, BITMAPINFO *info, void *bits, UINT *usage )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->get_brush_bitmap_info( handle, info, bits, usage );
-}
+static const struct unix_funcs *unix_funcs;
 
-BOOL CDECL __wine_get_file_outline_text_metric( const WCHAR *path, OUTLINETEXTMETRICW *otm )
-{
-    if (!unix_funcs) return FALSE;
-    return unix_funcs->get_file_outline_text_metric( path, otm );
-}
 
 BOOL CDECL __wine_send_input( HWND hwnd, const INPUT *input, const RAWINPUT *rawinput )
 {
-    if (!unix_funcs) return FALSE;
+    if (!unix_funcs)
+    {
+        ERR( "should not be used in wow64\n" );
+        return FALSE;
+    }
     return unix_funcs->wine_send_input( hwnd, input, rawinput );
 }
 
diff --git a/dlls/wow64win/gdi.c b/dlls/wow64win/gdi.c
index 4ccab84e65dc..69ca032cd339 100644
--- a/dlls/wow64win/gdi.c
+++ b/dlls/wow64win/gdi.c
@@ -2067,3 +2067,46 @@ NTSTATUS WINAPI wow64_NtGdiWidenPath( UINT *args )
 
     return NtGdiWidenPath( hdc );
 }
+
+NTSTATUS WINAPI wow64_NtGdiSetDIBits( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    HBITMAP hbitmap = get_handle( &args );
+    UINT startscan = get_ulong( &args );
+    UINT lines = get_ulong( &args );
+    const void *bits = get_ptr( &args );
+    const BITMAPINFO *info = get_ptr( &args );
+    UINT coloruse = get_ulong( &args );
+
+    return NtGdiSetDIBits( hdc, hbitmap, startscan, lines, bits, info, coloruse );
+}
+
+NTSTATUS WINAPI wow64___wine_get_icm_profile( UINT *args )
+{
+    HDC hdc = get_handle( &args );
+    BOOL allow_default = get_ulong( &args );
+    DWORD *size = get_ptr( &args );
+    WCHAR *filename = get_ptr( &args );
+
+    return __wine_get_icm_profile( hdc, allow_default, size, filename );
+}
+
+NTSTATUS WINAPI wow64___wine_get_brush_bitmap_info( UINT *args )
+{
+    HBRUSH handle = get_handle( &args );
+    BITMAPINFO *info = get_ptr( &args );
+    void *bits = get_ptr( &args );
+    UINT *usage = get_ptr( &args );
+
+    return __wine_get_brush_bitmap_info( handle, info, bits, usage );
+}
+
+NTSTATUS WINAPI wow64___wine_get_file_outline_text_metric( UINT *args )
+{
+    const WCHAR *path = get_ptr( &args );
+    TEXTMETRICW *otm = get_ptr( &args );
+    UINT *em_square = get_ptr( &args );
+    WCHAR *face_name = get_ptr( &args );
+
+    return __wine_get_file_outline_text_metric( path, otm, em_square, face_name );
+}
diff --git a/dlls/wow64win/syscall.h b/dlls/wow64win/syscall.h
index bd68c98deba9..8888edd79b32 100644
--- a/dlls/wow64win/syscall.h
+++ b/dlls/wow64win/syscall.h
@@ -170,6 +170,7 @@
     SYSCALL_ENTRY( NtGdiSetBoundsRect ) \
     SYSCALL_ENTRY( NtGdiSetBrushOrg ) \
     SYSCALL_ENTRY( NtGdiSetColorAdjustment ) \
+    SYSCALL_ENTRY( NtGdiSetDIBits ) \
     SYSCALL_ENTRY( NtGdiSetDIBitsToDeviceInternal ) \
     SYSCALL_ENTRY( NtGdiSetDeviceGammaRamp ) \
     SYSCALL_ENTRY( NtGdiSetLayout ) \
@@ -411,6 +412,9 @@
     SYSCALL_ENTRY( NtUserWaitForInputIdle ) \
     SYSCALL_ENTRY( NtUserWaitMessage ) \
     SYSCALL_ENTRY( NtUserWindowFromDC ) \
-    SYSCALL_ENTRY( NtUserWindowFromPoint )
+    SYSCALL_ENTRY( NtUserWindowFromPoint ) \
+    SYSCALL_ENTRY( __wine_get_brush_bitmap_info ) \
+    SYSCALL_ENTRY( __wine_get_file_outline_text_metric ) \
+    SYSCALL_ENTRY( __wine_get_icm_profile )
 
 #endif /* __WOW64WIN_SYSCALL_H */
diff --git a/include/ntgdi.h b/include/ntgdi.h
index 1aa5cad468f3..250eedc1d7d1 100644
--- a/include/ntgdi.h
+++ b/include/ntgdi.h
@@ -482,11 +482,12 @@ NTSTATUS WINAPI NtGdiDdDDISetQueuedLimit( D3DKMT_SETQUEUEDLIMIT *desc );
 NTSTATUS WINAPI NtGdiDdDDISetVidPnSourceOwner( const D3DKMT_SETVIDPNSOURCEOWNER *desc );
 
 /* Wine extensions */
-extern BOOL CDECL __wine_get_brush_bitmap_info( HBRUSH handle, BITMAPINFO *info, void *bits,
+INT WINAPI NtGdiSetDIBits(HDC,HBITMAP,UINT,UINT,LPCVOID,const BITMAPINFO*,UINT);
+extern BOOL WINAPI __wine_get_brush_bitmap_info( HBRUSH handle, BITMAPINFO *info, void *bits,
                                                 UINT *usage );
-extern BOOL CDECL __wine_get_icm_profile( HDC hdc, BOOL allow_default, DWORD *size,
-                                          WCHAR *filename );
-extern BOOL CDECL __wine_get_file_outline_text_metric( const WCHAR *path,
-                                                       OUTLINETEXTMETRICW *otm );
+extern BOOL WINAPI __wine_get_icm_profile( HDC hdc, BOOL allow_default, DWORD *size,
+                                           WCHAR *filename );
+extern BOOL WINAPI __wine_get_file_outline_text_metric( const WCHAR *path, TEXTMETRICW *otm,
+                                                        UINT *em_square, WCHAR *face_name );
 
 #endif /* _NTGDI_ */

From 24a54044b8ba3025010a16ba34078d3d6ec7e2f7 Mon Sep 17 00:00:00 2001
From: Jacek Caban <jacek@codeweavers.com>
Date: Thu, 18 Aug 2022 01:59:50 +0200
Subject: [PATCH 19/19] ntdll: Introduce WINEWOW environment variable.

Allows forcing using wow64 in Wine installs that otherwise supports using native 32-bit.
---
 dlls/ntdll/unix/env.c          |  2 +-
 dlls/ntdll/unix/loader.c       | 30 +++++++++++++++++++++++++++++-
 dlls/ntdll/unix/unix_private.h |  1 +
 3 files changed, 31 insertions(+), 2 deletions(-)

diff --git a/dlls/ntdll/unix/env.c b/dlls/ntdll/unix/env.c
index 6f1709f4713d..029c47c16d4e 100644
--- a/dlls/ntdll/unix/env.c
+++ b/dlls/ntdll/unix/env.c
@@ -1933,7 +1933,7 @@ static RTL_USER_PROCESS_PARAMETERS *build_initial_params( void **module )
     if (!status)
     {
         if (main_image_info.ImageCharacteristics & IMAGE_FILE_DLL) status = STATUS_INVALID_IMAGE_FORMAT;
-        if (main_image_info.Machine != current_machine) status = STATUS_INVALID_IMAGE_FORMAT;
+        if ((main_image_info.Machine != current_machine) && !needs_wow64()) status = STATUS_INVALID_IMAGE_FORMAT;
     }
 
     if (status)  /* try launching it through start.exe */
diff --git a/dlls/ntdll/unix/loader.c b/dlls/ntdll/unix/loader.c
index a1525cf7f936..45d9838130c0 100644
--- a/dlls/ntdll/unix/loader.c
+++ b/dlls/ntdll/unix/loader.c
@@ -73,6 +73,7 @@
 # ifndef _POSIX_SPAWN_DISABLE_ASLR
 #  define _POSIX_SPAWN_DISABLE_ASLR 0x0100
 # endif
+# include <sys/utsname.h>
 #endif
 #ifdef __ANDROID__
 # include <jni.h>
@@ -660,6 +661,33 @@ static void init_paths( char *argv[] )
     set_config_dir();
 }
 
+/* whether to use wow64 for i386 EXEs or launch a 32-bit wine */
+BOOL needs_wow64(void)
+{
+    static int ret = -1;
+
+    if (ret == -1)
+    {
+        const char *val = getenv( "WINEWOW" );
+        if (val && *val) ret = val[0] != '0';
+    }
+
+#if defined(__APPLE__) && defined(__x86_64__)
+    if (ret == -1)
+    {
+        struct utsname name;
+        unsigned major, minor;
+
+        ret = uname(&name) == 0 &&
+            sscanf(name.release, "%u.%u", &major, &minor) == 2 &&
+            major >= 19 /* macOS 10.15 Catalina */;
+    }
+#endif
+
+    if (ret == -1) ret = 0;
+    return ret;
+}
+
 
 static void preloader_exec( char **argv )
 {
@@ -708,7 +736,7 @@ static NTSTATUS loader_exec( char **argv, WORD machine )
                 preloader_exec( argv );
             }
         }
-        else if ((argv[1] = remove_tail( wineloader, "64" ))) preloader_exec( argv );
+        else if (!needs_wow64() && (argv[1] = remove_tail( wineloader, "64" ))) preloader_exec( argv );
     }
 
     argv[1] = strdup( wineloader );
diff --git a/dlls/ntdll/unix/unix_private.h b/dlls/ntdll/unix/unix_private.h
index 8821cd784916..e4b1070ce288 100644
--- a/dlls/ntdll/unix/unix_private.h
+++ b/dlls/ntdll/unix/unix_private.h
@@ -159,6 +159,7 @@ extern NTSTATUS load_main_exe( const WCHAR *name, const char *unix_name, const W
                                void **module ) DECLSPEC_HIDDEN;
 extern NTSTATUS load_start_exe( WCHAR **image, void **module ) DECLSPEC_HIDDEN;
 extern void start_server( BOOL debug ) DECLSPEC_HIDDEN;
+extern BOOL needs_wow64(void) DECLSPEC_HIDDEN;
 
 extern unsigned int server_call_unlocked( void *req_ptr ) DECLSPEC_HIDDEN;
 extern void server_enter_uninterrupted_section( pthread_mutex_t *mutex, sigset_t *sigset ) DECLSPEC_HIDDEN;
