# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   compiler_blacklist_versions 1.0
PortGroup                   clang_dependency 1.0
PortGroup                   meson 1.0
PortGroup                   muniversal 1.1

# to get past the aligned memory access error
PortGroup                   legacysupport 1.1

# Please keep the glib2 and glib2-devel ports as similar as possible.

name                        glib2
conflicts                   glib2-devel glib2-upstream
set my_name                 glib
version                     2.72.3
revision                    2
checksums                   rmd160  a2432f98501fe132d14e5ae1c44367d4030529c4 \
                            sha256  4a39a2f624b8512d500d5840173eda7fa85f51c109052eae806acece85d345f0 \
                            size    4893484

set branch                  [join [lrange [split ${version} .] 0 1] .]
categories                  devel
maintainers                 {@gcenx}
license                     LGPL-2+
homepage                    https://wiki.gnome.org/Projects/GLib
platforms                   {darwin >= 12}
dist_subdir                 glib2
distname                    ${my_name}-${version}
use_xz                      yes
use_parallel_build          yes

description                 Library with data structure functions and other constructs

long_description            Glib is a library which includes support routines \
                            for C, such as lists, trees, hashes, memory \
                            allocation, and many other things.

master_sites                gnome:sources/${my_name}/${branch}/

depends_build-append        port:gettext \
                            bin:xmllint:libxml2 \
                            port:pkgconfig

depends_lib                 port:gettext-runtime \
                            port:libffi \
                            port:libiconv \
                            port:pcre \
                            port:zlib

patchfiles                  libintl.patch \
                            patch-gio-tests-meson.build.diff \
                            patch-glib_gunicollate.c.diff \
                            patch-gio_xdgmime_xdgmime.c.diff \
                            patch-get-launchd-dbus-session-address.diff \
                            patch-gmodule-gmodule-dl.c.diff \
                            patch-meson_build-meson_options-appinfo.diff \
                            patch-meson_build-atomic-test-older-clang-versions.diff \
                            universal.patch \
                            patch-glib2-findfolders-before-SL.diff \
                            patch-declarations.diff

post-patch {
    reinplace -W ${worksrcpath} "s|@PREFIX@|${prefix}|g" gio/xdgmime/xdgmime.c glib/gi18n-lib.h glib/gi18n.h gio/gdbusaddress.c
    reinplace "s|data_dirs = \"/usr|data_dirs = \"${prefix}/share:/usr|g" ${worksrcpath}/glib/gutils.c
    reinplace "s|path = \"/bin|path = \"${prefix}/bin:/bin|g" ${worksrcpath}/glib/gutils.c ${worksrcpath}/glib/gspawn.c
}

compiler.c_standard         2017

configure.cflags-append     -fstrict-aliasing
configure.ldflags-append    -bind_at_load

# stop excessive warnings
configure.cflags-append     -Wno-deprecated-declarations
configure.objcflags-append  -Wno-deprecated-declarations

# https://trac.macports.org/ticket/30413
configure.args              -Ddtrace=false

# Custom macports-ports option (patch-meson_build-meson_options-appinfo.diff)
configure.args-append       -Dappinfo_backend=native

# meson Built-in options
configure.args-append       -Ddefault_library=both \
                            -Dwarning_level=0

configure.checks.implicit_function_declaration.whitelist-append \
    aligned_alloc \
    statx

build.args-append           --verbose

post-build {
    if {[variant_exists universal] && [variant_isset universal]} {
        set dirs {}
        foreach arch ${universal_archs_to_use} {
            lappend dirs ${workpath}/build-${arch}
        }
    } else {
        set dirs ${workpath}/build
    }
    foreach dir ${dirs} {
        # -lm is spuriously added by meson NYD to some builds (arm64)
        reinplace -q {s| -lm||g}              ${dir}/meson-private/glib-2.0.pc
    }
}

post-destroot {
    delete ${destroot}${prefix}/lib/charset.alias

    set docdir ${prefix}/share/doc/${my_name}
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} AUTHORS COPYING HACKING NEWS README.md \
        ${destroot}${docdir}
}

test.args-append            --verbose
test.run                    yes
test.target                 test

livecheck.type              gnome
livecheck.name              ${my_name}
